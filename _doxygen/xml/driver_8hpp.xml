<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="driver_8hpp" kind="file" language="C++">
    <compoundname>driver.hpp</compoundname>
    <includes refid="argh_8hpp" local="yes">liblava/frame/argh.hpp</includes>
    <includedby refid="frame_8hpp" local="yes">liblava/frame.hpp</includedby>
    <incdepgraph>
      <node id="4">
        <label>liblava/core/types.hpp</label>
        <link refid="types_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>liblava/frame/argh.hpp</label>
        <link refid="argh_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>liblava/frame/driver.hpp</label>
        <link refid="driver_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>argh.h</label>
      </node>
      <node id="6">
        <label>cstdint</label>
      </node>
      <node id="7">
        <label>functional</label>
      </node>
      <node id="5">
        <label>liblava/core/def.hpp</label>
      </node>
      <node id="8">
        <label>map</label>
      </node>
      <node id="9">
        <label>string</label>
      </node>
      <node id="10">
        <label>string_view</label>
      </node>
      <node id="11">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>liblava/app.hpp</label>
        <link refid="app_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>liblava/app/app.hpp</label>
        <link refid="app_2app_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>liblava/engine.hpp</label>
        <link refid="engine_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>liblava/engine/engine.hpp</label>
        <link refid="engine_2engine_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>liblava/frame.hpp</label>
        <link refid="frame_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>liblava/frame/driver.hpp</label>
        <link refid="driver_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>liblava/lava.hpp</label>
        <link refid="lava_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>liblava/test.hpp</label>
        <link refid="test_8hpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structlava_1_1stage" prot="public">lava::stage</innerclass>
    <innerclass refid="structlava_1_1driver" prot="public">lava::driver</innerclass>
    <innerclass refid="structlava_1_1driver_1_1result" prot="public">lava::driver::result</innerclass>
    <innernamespace refid="namespacelava">lava</innernamespace>
    <sectiondef kind="define">
      <memberdef kind="define" id="driver_8hpp_1ae71b15319f5a32cffc66c79378c3b084" prot="public" static="no">
        <name>STAGE_OBJ</name>
        <initializer>stage_</initializer>
        <briefdescription>
<para>Stage object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/driver.hpp" line="120" column="9" bodyfile="liblava/frame/driver.hpp" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="driver_8hpp_1afc5481e095a35ef8bc922ec0c7e0a6c2" prot="public" static="no">
        <name>STAGE_FUNC</name>
        <initializer>_stage</initializer>
        <briefdescription>
<para>Stage function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/driver.hpp" line="123" column="9" bodyfile="liblava/frame/driver.hpp" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="driver_8hpp_1ab928de8f8f504ba6d4d19c1ae48df942" prot="public" static="no">
        <name>STR_</name>
        <param><defname>n</defname></param>
        <param><defname>m</defname></param>
        <initializer>n##m</initializer>
        <briefdescription>
<para>String concatenation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/driver.hpp" line="126" column="9" bodyfile="liblava/frame/driver.hpp" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="driver_8hpp_1affdbafc24e54b17dce74cd15bf769bdb" prot="public" static="no">
        <name>STR</name>
        <param><defname>n</defname></param>
        <param><defname>m</defname></param>
        <initializer><ref refid="driver_8hpp_1ab928de8f8f504ba6d4d19c1ae48df942" kindref="member">STR_</ref>(n, m)</initializer>
        <briefdescription>
<para>String concatenation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/driver.hpp" line="129" column="9" bodyfile="liblava/frame/driver.hpp" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="driver_8hpp_1a2ece45c70985b4f29ae4e18662646697" prot="public" static="no">
        <name>LAVA_STAGE</name>
        <param><defname>ID</defname></param>
        <param><defname>NAME</defname></param>
        <initializer>    <ref refid="types_8hpp_1a7e5d7f16aff5126a54243302372b43b1" kindref="member">lava::i32</ref> <ref refid="driver_8hpp_1affdbafc24e54b17dce74cd15bf769bdb" kindref="member">STR</ref>(<ref refid="driver_8hpp_1afc5481e095a35ef8bc922ec0c7e0a6c2" kindref="member">STAGE_FUNC</ref>, ID)(argh::parser argh); \
    <ref refid="structlava_1_1stage" kindref="compound">lava::stage</ref> <ref refid="driver_8hpp_1affdbafc24e54b17dce74cd15bf769bdb" kindref="member">STR</ref>(<ref refid="driver_8hpp_1ae71b15319f5a32cffc66c79378c3b084" kindref="member">STAGE_OBJ</ref>, ID)(ID, NAME, <ref refid="driver_8hpp_1affdbafc24e54b17dce74cd15bf769bdb" kindref="member">::STR</ref>(<ref refid="driver_8hpp_1afc5481e095a35ef8bc922ec0c7e0a6c2" kindref="member">STAGE_FUNC</ref>, ID)); \
    <ref refid="types_8hpp_1a7e5d7f16aff5126a54243302372b43b1" kindref="member">lava::i32</ref> <ref refid="driver_8hpp_1affdbafc24e54b17dce74cd15bf769bdb" kindref="member">STR</ref>(<ref refid="driver_8hpp_1afc5481e095a35ef8bc922ec0c7e0a6c2" kindref="member">STAGE_FUNC</ref>, ID)(argh::parser argh)</initializer>
        <briefdescription>
<para>lava stage macro </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/driver.hpp" line="132" column="9" bodyfile="liblava/frame/driver.hpp" bodystart="132" bodyend="135"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Stage driver. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="authors"><para>Lava Block OÃœ and contributors </para>
</simplesect>
<simplesect kind="copyright"><para>Copyright (c) 2018-present, MIT License </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="argh_8hpp" kindref="compound">liblava/frame/argh.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">lava<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="structlava_1_1stage" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlava_1_1stage" kindref="compound">stage</ref><sp/>{</highlight></codeline>
<codeline lineno="19" refid="structlava_1_1stage_1af9a5dffac53f1f39a6d201f775d40bb9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structlava_1_1stage_1af9a5dffac53f1f39a6d201f775d40bb9" kindref="member">map</ref><sp/>=<sp/>std::map&lt;index,<sp/>stage*&gt;;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="structlava_1_1stage_1a3696a5b9bb5ab7ff168ebf97804f8bb7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structlava_1_1stage_1a3696a5b9bb5ab7ff168ebf97804f8bb7" kindref="member">func</ref><sp/>=<sp/>std::function&lt;<ref refid="types_8hpp_1a7e5d7f16aff5126a54243302372b43b1" kindref="member">i32</ref>(argh::parser)&gt;;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="structlava_1_1stage_1a825e08db257906413e57ce438e4fd887" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structlava_1_1stage_1a825e08db257906413e57ce438e4fd887" kindref="member">stage</ref>(<ref refid="types_8hpp_1ae3c4bbc50dd4583ab0df2c24c49a49c9" kindref="member">ui32</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8hpp_1a01c2a7bfa24e7ea76ef5a79d8d4daaf6" kindref="member">string_ref</ref><sp/><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref>,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structlava_1_1stage_1a3696a5b9bb5ab7ff168ebf97804f8bb7" kindref="member">func</ref><sp/><ref refid="structlava_1_1stage_1a3696a5b9bb5ab7ff168ebf97804f8bb7" kindref="member">func</ref>);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="structlava_1_1stage_1ad4bd99d638a787dba404c92e61d18de0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="types_8hpp_1a2a40eb7fccb1ebcfd58d6d4b7a078e5c" kindref="member">index</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="structlava_1_1stage_1aa1f7cf27be9025a80d4a8b1dd9c9aaa4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="structlava_1_1stage_1aa1f7cf27be9025a80d4a8b1dd9c9aaa4" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="structlava_1_1stage_1aa342228af68538573490437bb069fafc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlava_1_1stage_1a3696a5b9bb5ab7ff168ebf97804f8bb7" kindref="member">func</ref><sp/><ref refid="structlava_1_1stage_1aa342228af68538573490437bb069fafc" kindref="member">on_func</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal">};</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="structlava_1_1driver" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlava_1_1driver" kindref="compound">driver</ref><sp/>{</highlight></codeline>
<codeline lineno="51" refid="structlava_1_1driver_1a46bcb3fcede1d91f250dd6bef15bba84" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="structlava_1_1driver_1a46bcb3fcede1d91f250dd6bef15bba84" kindref="member">error</ref><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stages_empty<sp/>=<sp/>-1,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stage_not_found<sp/>=<sp/>-2,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>undef_run<sp/>=<sp/>-3,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="structlava_1_1driver_1_1result" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlava_1_1driver_1_1result" kindref="compound">result</ref><sp/>{</highlight></codeline>
<codeline lineno="62" refid="structlava_1_1driver_1_1result_1ab4445152ef711d9542259c4e4cf47ddb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8hpp_1a7e5d7f16aff5126a54243302372b43b1" kindref="member">i32</ref><sp/><ref refid="structlava_1_1driver" kindref="compound">driver</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="structlava_1_1driver_1_1result_1a56e124796b3f88e822bf24b79d4846c7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8hpp_1a7e5d7f16aff5126a54243302372b43b1" kindref="member">i32</ref><sp/><ref refid="structlava_1_1driver_1_1result_1a56e124796b3f88e822bf24b79d4846c7" kindref="member">selected</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="structlava_1_1driver_1ade12629f76d50f187860954ec93e5b15" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structlava_1_1driver" kindref="compound">driver</ref>&amp;<sp/><ref refid="structlava_1_1driver_1ade12629f76d50f187860954ec93e5b15" kindref="member">instance</ref>()<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structlava_1_1driver" kindref="compound">driver</ref><sp/><ref refid="structlava_1_1driver" kindref="compound">driver</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structlava_1_1driver" kindref="compound">driver</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="structlava_1_1driver_1a10b1666387c2aac2ee2c3fcc0b56d87a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structlava_1_1driver_1a10b1666387c2aac2ee2c3fcc0b56d87a" kindref="member">add_stage</ref>(<ref refid="structlava_1_1stage" kindref="compound">stage</ref>*<sp/><ref refid="structlava_1_1stage" kindref="compound">stage</ref>)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!m_stages.count(<ref refid="structlava_1_1stage" kindref="compound">stage</ref>-&gt;<ref refid="structlava_1_1stage_1ad4bd99d638a787dba404c92e61d18de0" kindref="member">id</ref>)<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;stage<sp/>id<sp/>already<sp/>defined.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_stages.emplace(<ref refid="structlava_1_1stage" kindref="compound">stage</ref>-&gt;<ref refid="structlava_1_1stage_1ad4bd99d638a787dba404c92e61d18de0" kindref="member">id</ref>,<sp/><ref refid="structlava_1_1stage" kindref="compound">stage</ref>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="structlava_1_1driver_1acd24daf28a3186453991f5ef1201e39e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlava_1_1stage_1af9a5dffac53f1f39a6d201f775d40bb9" kindref="member">stage::map</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="structlava_1_1driver_1acd24daf28a3186453991f5ef1201e39e" kindref="member">get_stages</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_stages;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="structlava_1_1driver_1a8d80fe8735c05b7a898439d1a6ca7da0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="types_8hpp_1a7e5d7f16aff5126a54243302372b43b1" kindref="member">i32</ref><sp/><ref refid="structlava_1_1driver_1a8d80fe8735c05b7a898439d1a6ca7da0" kindref="member">run</ref>(argh::parser<sp/><ref refid="argh_8hpp_1a0ec69c8269dd4598981cbfeea2cc88d1" kindref="member">cmd_line</ref><sp/>=<sp/>{});</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="structlava_1_1driver_1a17f884fcfa3e5acb85f36da82a5b9240" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structlava_1_1driver_1a17f884fcfa3e5acb85f36da82a5b9240" kindref="member">run_func</ref><sp/>=<sp/>std::function&lt;<ref refid="structlava_1_1driver_1_1result" kindref="compound">result</ref>(argh::parser)&gt;;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="structlava_1_1driver_1aae9102b766adabd740bb293e26c7e60c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlava_1_1driver_1a17f884fcfa3e5acb85f36da82a5b9240" kindref="member">run_func</ref><sp/><ref refid="structlava_1_1driver_1aae9102b766adabd740bb293e26c7e60c" kindref="member">on_run</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlava_1_1driver" kindref="compound">driver</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlava_1_1stage_1af9a5dffac53f1f39a6d201f775d40bb9" kindref="member">stage::map</ref><sp/>m_stages;</highlight></codeline>
<codeline lineno="115"><highlight class="normal">};</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>lava</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="driver_8hpp_1ae71b15319f5a32cffc66c79378c3b084" refkind="member"><highlight class="preprocessor">#define<sp/>STAGE_OBJ<sp/>stage_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="driver_8hpp_1afc5481e095a35ef8bc922ec0c7e0a6c2" refkind="member"><highlight class="preprocessor">#define<sp/>STAGE_FUNC<sp/>_stage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="driver_8hpp_1ab928de8f8f504ba6d4d19c1ae48df942" refkind="member"><highlight class="preprocessor">#define<sp/>STR_(n,<sp/>m)<sp/>n##m</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="driver_8hpp_1affdbafc24e54b17dce74cd15bf769bdb" refkind="member"><highlight class="preprocessor">#define<sp/>STR(n,<sp/>m)<sp/>STR_(n,<sp/>m)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="driver_8hpp_1a2ece45c70985b4f29ae4e18662646697" refkind="member"><highlight class="preprocessor">#define<sp/>LAVA_STAGE(ID,<sp/>NAME)<sp/>\</highlight></codeline>
<codeline lineno="133"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>lava::i32<sp/>STR(STAGE_FUNC,<sp/>ID)(argh::parser<sp/>argh);<sp/>\</highlight></codeline>
<codeline lineno="134"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>lava::stage<sp/>STR(STAGE_OBJ,<sp/>ID)(ID,<sp/>NAME,<sp/>::STR(STAGE_FUNC,<sp/>ID));<sp/>\</highlight></codeline>
<codeline lineno="135"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>lava::i32<sp/>STR(STAGE_FUNC,<sp/>ID)(argh::parser<sp/>argh)</highlight></codeline>
    </programlisting>
    <location file="liblava/frame/driver.hpp"/>
  </compounddef>
</doxygen>
