<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="structlava_1_1block" kind="struct" language="C++" prot="public">
    <compoundname>lava::block</compoundname>
    <basecompoundref refid="structlava_1_1entity" prot="public" virt="non-virtual">lava::entity</basecompoundref>
    <includes refid="block_2block_8hpp" local="no">block.hpp</includes>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structlava_1_1block_1a18c827550b419bfe686fcef78c65892e" prot="public" static="no">
        <type><ref refid="structlava_1_1block" kindref="compound">block</ref> *</type>
        <definition>using lava::block::ptr =  block*</definition>
        <argsstring></argsstring>
        <name>ptr</name>
        <qualifiedname>lava::block::ptr</qualifiedname>
        <briefdescription>
<para>Pointer to block. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/block/block.hpp" line="75" column="5" bodyfile="liblava/block/block.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structlava_1_1block_1aebd0a7c9d3be269cd4749dbd41ec78f5" prot="public" static="no">
        <type>std::shared_ptr&lt; <ref refid="structlava_1_1block" kindref="compound">block</ref> &gt;</type>
        <definition>using lava::block::s_ptr =  std::shared_ptr&lt;block&gt;</definition>
        <argsstring></argsstring>
        <name>s_ptr</name>
        <qualifiedname>lava::block::s_ptr</qualifiedname>
        <briefdescription>
<para>Shared pointer to block. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/block/block.hpp" line="78" column="5" bodyfile="liblava/block/block.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structlava_1_1block_1ae30cc03dd2789f3b0c7ef2125dee013b" prot="public" static="no">
        <type><ref refid="structlava_1_1block" kindref="compound">block</ref> const  *</type>
        <definition>using lava::block::c_ptr =  block const*</definition>
        <argsstring></argsstring>
        <name>c_ptr</name>
        <qualifiedname>lava::block::c_ptr</qualifiedname>
        <briefdescription>
<para>Const pointer to block. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/block/block.hpp" line="81" column="5" bodyfile="liblava/block/block.hpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structlava_1_1block_1afa1a9c5b31fcfcccf2467eac19d26f9c" prot="public" static="no">
        <type>std::map&lt; <ref refid="structlava_1_1id" kindref="compound">id</ref>, <ref refid="structlava_1_1block_1aebd0a7c9d3be269cd4749dbd41ec78f5" kindref="member">s_ptr</ref> &gt;</type>
        <definition>using lava::block::s_map =  std::map&lt;id, s_ptr&gt;</definition>
        <argsstring></argsstring>
        <name>s_map</name>
        <qualifiedname>lava::block::s_map</qualifiedname>
        <briefdescription>
<para>Map of blocks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/block/block.hpp" line="84" column="5" bodyfile="liblava/block/block.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structlava_1_1block_1ac8b9e081cd1ed1659385f4770a5b3893" prot="public" static="no">
        <type>std::vector&lt; <ref refid="structlava_1_1block_1ae30cc03dd2789f3b0c7ef2125dee013b" kindref="member">c_ptr</ref> &gt;</type>
        <definition>using lava::block::c_list =  std::vector&lt;c_ptr&gt;</definition>
        <argsstring></argsstring>
        <name>c_list</name>
        <qualifiedname>lava::block::c_list</qualifiedname>
        <briefdescription>
<para>List of blocks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/block/block.hpp" line="87" column="5" bodyfile="liblava/block/block.hpp" bodystart="87" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structlava_1_1block_1a3209a5db6610c1006db0bcc52b756cc3" prot="private" static="no" mutable="no">
        <type><ref refid="structlava_1_1device_1a6f7d378ef30e7bf1cd4fe208de859250" kindref="member">device::ptr</ref></type>
        <definition>device::ptr lava::block::m_device</definition>
        <argsstring></argsstring>
        <name>m_device</name>
        <qualifiedname>lava::block::m_device</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
<para>Vulkan device. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/block/block.hpp" line="245" column="17" bodyfile="liblava/block/block.hpp" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlava_1_1block_1a276945a91885e793789fc5e6289357ce" prot="private" static="no" mutable="no">
        <type><ref refid="types_8hpp_1a2a40eb7fccb1ebcfd58d6d4b7a078e5c" kindref="member">index</ref></type>
        <definition>index lava::block::m_current_frame</definition>
        <argsstring></argsstring>
        <name>m_current_frame</name>
        <qualifiedname>lava::block::m_current_frame</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
<para>Current frame index. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/block/block.hpp" line="248" column="11" bodyfile="liblava/block/block.hpp" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlava_1_1block_1a63dfe6b6b2d1c5c7ae4b791f029990bd" prot="private" static="no" mutable="no">
        <type><ref refid="base_2base_8hpp_1afe1ce1f608bd72e59916382d9c3cf615" kindref="member">VkCommandPools</ref></type>
        <definition>VkCommandPools lava::block::m_cmd_pools</definition>
        <argsstring></argsstring>
        <name>m_cmd_pools</name>
        <qualifiedname>lava::block::m_cmd_pools</qualifiedname>
        <initializer>= {}</initializer>
        <briefdescription>
<para>Command pools. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/block/block.hpp" line="251" column="20" bodyfile="liblava/block/block.hpp" bodystart="251" bodyend="251"/>
      </memberdef>
      <memberdef kind="variable" id="structlava_1_1block_1ae830cf9ff7ec7c676bf25a9f5c1e3a8f" prot="private" static="no" mutable="no">
        <type><ref refid="structlava_1_1command_1ad9c87f65181226619252146f936d4a2f" kindref="member">command::s_map</ref></type>
        <definition>command::s_map lava::block::m_commands</definition>
        <argsstring></argsstring>
        <name>m_commands</name>
        <qualifiedname>lava::block::m_commands</qualifiedname>
        <briefdescription>
<para>Map of commands. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/block/block.hpp" line="254" column="20" bodyfile="liblava/block/block.hpp" bodystart="254" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlava_1_1block_1a197fd55dff5906d3a36dc38783ad5ac6" prot="private" static="no" mutable="no">
        <type><ref refid="structlava_1_1command_1a0b3001d7f3be692a50bbf537a59ffeb2" kindref="member">command::c_list</ref></type>
        <definition>command::c_list lava::block::m_cmd_order</definition>
        <argsstring></argsstring>
        <name>m_cmd_order</name>
        <qualifiedname>lava::block::m_cmd_order</qualifiedname>
        <briefdescription>
<para>Ordered list of commands. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/block/block.hpp" line="257" column="21" bodyfile="liblava/block/block.hpp" bodystart="257" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structlava_1_1block_1af59243ac0dccc0df36ac159be1987de0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlava_1_1block_1aebd0a7c9d3be269cd4749dbd41ec78f5" kindref="member">s_ptr</ref></type>
        <definition>static s_ptr lava::block::make</definition>
        <argsstring>()</argsstring>
        <name>make</name>
        <qualifiedname>lava::block::make</qualifiedname>
        <briefdescription>
<para>Make a new block. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>s_ptr Shared pointer to block </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/block/block.hpp" line="93" column="18" bodyfile="liblava/block/block.hpp" bodystart="93" bodyend="95"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structlava_1_1block_1ac3392a022afd4387a9a5c17aec8a1139" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>lava::block::~block</definition>
        <argsstring>()</argsstring>
        <name>~block</name>
        <qualifiedname>lava::block::~block</qualifiedname>
        <briefdescription>
<para>Destroy the block. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/block/block.hpp" line="100" column="5" bodyfile="liblava/block/block.hpp" bodystart="100" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1block_1a90e2ee2da194d25b073986c2b375fe4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lava::block::create</definition>
        <argsstring>(device::ptr device, index frame_count, index queue_family)</argsstring>
        <name>create</name>
        <qualifiedname>lava::block::create</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1device_1a6f7d378ef30e7bf1cd4fe208de859250" kindref="member">device::ptr</ref></type>
          <declname>device</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a2a40eb7fccb1ebcfd58d6d4b7a078e5c" kindref="member">index</ref></type>
          <declname>frame_count</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a2a40eb7fccb1ebcfd58d6d4b7a078e5c" kindref="member">index</ref></type>
          <declname>queue_family</declname>
        </param>
        <briefdescription>
<para>Create a new block. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>Vulkan device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frame_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of frames </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>queue_family</parametername>
</parameternamelist>
<parameterdescription>
<para>Queue family index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Create was successful or failed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/block/block.hpp" line="111" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1block_1a5875f397c600f70f66d205793777d533" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lava::block::destroy</definition>
        <argsstring>()</argsstring>
        <name>destroy</name>
        <qualifiedname>lava::block::destroy</qualifiedname>
        <briefdescription>
<para>Destroy the block. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/block/block.hpp" line="118" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1block_1a2d33dd787828f5fdb976df93cfba5660" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8hpp_1a2a40eb7fccb1ebcfd58d6d4b7a078e5c" kindref="member">index</ref></type>
        <definition>index lava::block::get_frame_count</definition>
        <argsstring>() const</argsstring>
        <name>get_frame_count</name>
        <qualifiedname>lava::block::get_frame_count</qualifiedname>
        <briefdescription>
<para>Get the frame count. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>index Number of frames </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/block/block.hpp" line="124" column="11" bodyfile="liblava/block/block.hpp" bodystart="124" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1block_1a15ddf43bfcdf5e3524ea28ca1495e5b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structlava_1_1id" kindref="compound">id</ref></type>
        <definition>id lava::block::add_cmd</definition>
        <argsstring>(command::process_func func, bool active=true)</argsstring>
        <name>add_cmd</name>
        <qualifiedname>lava::block::add_cmd</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1command_1aea5fb742f88010683d2ea34a1c81bb76" kindref="member">command::process_func</ref></type>
          <declname>func</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>active</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="structlava_1_1block_1acb14766b92fb411a8b9dc5adab469084" kindref="member">add_command</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/block/block.hpp" line="131" column="8"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1block_1acb14766b92fb411a8b9dc5adab469084" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlava_1_1id" kindref="compound">id</ref></type>
        <definition>id lava::block::add_command</definition>
        <argsstring>(command::process_func func, bool active=true)</argsstring>
        <name>add_command</name>
        <qualifiedname>lava::block::add_command</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1command_1aea5fb742f88010683d2ea34a1c81bb76" kindref="member">command::process_func</ref></type>
          <declname>func</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>active</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Add a command. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>func</parametername>
</parameternamelist>
<parameterdescription>
<para>Command function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>active</parametername>
</parameternamelist>
<parameterdescription>
<para>Active state </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>id Command id </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/block/block.hpp" line="139" column="8" bodyfile="liblava/block/block.hpp" bodystart="139" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1block_1afdda663d3950e15bdaea82d0c303ffba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lava::block::remove_cmd</definition>
        <argsstring>(id::ref cmd_id)</argsstring>
        <name>remove_cmd</name>
        <qualifiedname>lava::block::remove_cmd</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1id_1a226df789a94177f765bdcaac2988eda0" kindref="member">id::ref</ref></type>
          <declname>cmd_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="structlava_1_1block_1acb560ae2445f1610bfc7155d3a81d7c6" kindref="member">remove_command</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/block/block.hpp" line="146" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1block_1acb560ae2445f1610bfc7155d3a81d7c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::block::remove_command</definition>
        <argsstring>(id::ref cmd_id)</argsstring>
        <name>remove_command</name>
        <qualifiedname>lava::block::remove_command</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1id_1a226df789a94177f765bdcaac2988eda0" kindref="member">id::ref</ref></type>
          <declname>cmd_id</declname>
        </param>
        <briefdescription>
<para>Remove the command. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmd_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Command id </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/block/block.hpp" line="152" column="10" bodyfile="liblava/block/block.hpp" bodystart="152" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1block_1a1ba35820f45a6702cdab60ea471bf080" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lava::block::process</definition>
        <argsstring>(index frame)</argsstring>
        <name>process</name>
        <qualifiedname>lava::block::process</qualifiedname>
        <param>
          <type><ref refid="types_8hpp_1a2a40eb7fccb1ebcfd58d6d4b7a078e5c" kindref="member">index</ref></type>
          <declname>frame</declname>
        </param>
        <briefdescription>
<para>Process the block. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>frame</parametername>
</parameternamelist>
<parameterdescription>
<para>Frame index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Process was successful or aborted </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/block/block.hpp" line="161" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1block_1ac6132a8f9bca3e90648c35f22eaa49fb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8hpp_1a2a40eb7fccb1ebcfd58d6d4b7a078e5c" kindref="member">index</ref></type>
        <definition>index lava::block::get_current_frame</definition>
        <argsstring>() const</argsstring>
        <name>get_current_frame</name>
        <qualifiedname>lava::block::get_current_frame</qualifiedname>
        <briefdescription>
<para>Get the current frame. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>index Current frame </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/block/block.hpp" line="167" column="11" bodyfile="liblava/block/block.hpp" bodystart="167" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1block_1a79bb818384221484733eb1b372e6b9e5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>VkCommandBuffer</type>
        <definition>VkCommandBuffer lava::block::get_command_buffer</definition>
        <argsstring>(id::ref cmd_id) const</argsstring>
        <name>get_command_buffer</name>
        <qualifiedname>lava::block::get_command_buffer</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1id_1a226df789a94177f765bdcaac2988eda0" kindref="member">id::ref</ref></type>
          <declname>cmd_id</declname>
        </param>
        <briefdescription>
<para>Get the command buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmd_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Command id </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>VkCommandBuffer Vulkan command buffer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/block/block.hpp" line="176" column="21" bodyfile="liblava/block/block.hpp" bodystart="176" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1block_1a7bfec0344646503eeb17ea402080d59c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>VkCommandBuffer</type>
        <definition>VkCommandBuffer lava::block::get_command_buffer</definition>
        <argsstring>(id::ref cmd_id, index frame) const</argsstring>
        <name>get_command_buffer</name>
        <qualifiedname>lava::block::get_command_buffer</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1id_1a226df789a94177f765bdcaac2988eda0" kindref="member">id::ref</ref></type>
          <declname>cmd_id</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a2a40eb7fccb1ebcfd58d6d4b7a078e5c" kindref="member">index</ref></type>
          <declname>frame</declname>
        </param>
        <briefdescription>
<para>Get the command buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmd_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Command id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frame</parametername>
</parameternamelist>
<parameterdescription>
<para>Frame index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>VkCommandBuffer Vulkan command buffer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/block/block.hpp" line="186" column="21" bodyfile="liblava/block/block.hpp" bodystart="186" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1block_1a78728f7d5abc5de61cce17ee2ead2f57" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="base_2base_8hpp_1ace97a755b9ed66f2467c625c05a29c0e" kindref="member">VkCommandBuffers</ref></type>
        <definition>VkCommandBuffers lava::block::collect_buffers</definition>
        <argsstring>()</argsstring>
        <name>collect_buffers</name>
        <qualifiedname>lava::block::collect_buffers</qualifiedname>
        <briefdescription>
<para>Collect the buffers. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>VkCommandBuffers List of Vulkan command buffers </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/block/block.hpp" line="194" column="22" bodyfile="liblava/block/block.hpp" bodystart="194" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1block_1ad962cd9012179be009da8bdade12bf57" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlava_1_1command_1ad9c87f65181226619252146f936d4a2f" kindref="member">command::s_map</ref> const &amp;</type>
        <definition>command::s_map const  &amp; lava::block::get_commands</definition>
        <argsstring>() const</argsstring>
        <name>get_commands</name>
        <qualifiedname>lava::block::get_commands</qualifiedname>
        <briefdescription>
<para>Get the commands. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="structlava_1_1command_1ad9c87f65181226619252146f936d4a2f" kindref="member">command::s_map</ref> const&amp; Map of commands </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/block/block.hpp" line="208" column="26" bodyfile="liblava/block/block.hpp" bodystart="208" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1block_1a7a05921272711863394d162fe2cb3983" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlava_1_1command_1a0b3001d7f3be692a50bbf537a59ffeb2" kindref="member">command::c_list</ref> const &amp;</type>
        <definition>command::c_list const  &amp; lava::block::get_cmd_order</definition>
        <argsstring>() const</argsstring>
        <name>get_cmd_order</name>
        <qualifiedname>lava::block::get_cmd_order</qualifiedname>
        <briefdescription>
<para>Get the cmd order. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="structlava_1_1command_1a0b3001d7f3be692a50bbf537a59ffeb2" kindref="member">command::c_list</ref> const&amp; List of commands </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/block/block.hpp" line="216" column="27" bodyfile="liblava/block/block.hpp" bodystart="216" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1block_1ab18e296c08b487afea2e1f1ddb679b41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lava::block::activated</definition>
        <argsstring>(id::ref cmd_id)</argsstring>
        <name>activated</name>
        <qualifiedname>lava::block::activated</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1id_1a226df789a94177f765bdcaac2988eda0" kindref="member">id::ref</ref></type>
          <declname>cmd_id</declname>
        </param>
        <briefdescription>
<para>Check if command is activated. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmd_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Command id </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Command is active or not </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/block/block.hpp" line="225" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1block_1a61dd13bfe64d3715353dd2b1f02718f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lava::block::set_active</definition>
        <argsstring>(id::ref cmd_id, bool active=true)</argsstring>
        <name>set_active</name>
        <qualifiedname>lava::block::set_active</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1id_1a226df789a94177f765bdcaac2988eda0" kindref="member">id::ref</ref></type>
          <declname>cmd_id</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>active</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Set the command active. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmd_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Command id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>active</parametername>
</parameternamelist>
<parameterdescription>
<para>Active state </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Set was successful or failed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/block/block.hpp" line="233" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1block_1ac1ec06d85e3e4b44a7954a1ba38eb840" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlava_1_1device_1a6f7d378ef30e7bf1cd4fe208de859250" kindref="member">device::ptr</ref></type>
        <definition>device::ptr lava::block::get_device</definition>
        <argsstring>()</argsstring>
        <name>get_device</name>
        <qualifiedname>lava::block::get_device</qualifiedname>
        <briefdescription>
<para>Get the device. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="structlava_1_1device_1a6f7d378ef30e7bf1cd4fe208de859250" kindref="member">device::ptr</ref> Vulkan device </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/block/block.hpp" line="239" column="17" bodyfile="liblava/block/block.hpp" bodystart="239" bodyend="241"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Block of commands. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>lava::block</label>
        <link refid="structlava_1_1block"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>lava::entity</label>
        <link refid="structlava_1_1entity"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>lava::interface</label>
        <link refid="structlava_1_1interface"/>
      </node>
      <node id="3">
        <label>lava::no_copy_no_move</label>
        <link refid="structlava_1_1no__copy__no__move"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>lava::block</label>
        <link refid="structlava_1_1block"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>lava::entity</label>
        <link refid="structlava_1_1entity"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>lava::interface</label>
        <link refid="structlava_1_1interface"/>
      </node>
      <node id="3">
        <label>lava::no_copy_no_move</label>
        <link refid="structlava_1_1no__copy__no__move"/>
      </node>
    </collaborationgraph>
    <location file="liblava/block/block.hpp" line="73" column="1" bodyfile="liblava/block/block.hpp" bodystart="73" bodyend="258"/>
    <listofallmembers>
      <member refid="structlava_1_1block_1ab18e296c08b487afea2e1f1ddb679b41" prot="public" virt="non-virtual"><scope>lava::block</scope><name>activated</name></member>
      <member refid="structlava_1_1block_1a15ddf43bfcdf5e3524ea28ca1495e5b9" prot="public" virt="non-virtual"><scope>lava::block</scope><name>add_cmd</name></member>
      <member refid="structlava_1_1block_1acb14766b92fb411a8b9dc5adab469084" prot="public" virt="non-virtual"><scope>lava::block</scope><name>add_command</name></member>
      <member refid="structlava_1_1block_1ac8b9e081cd1ed1659385f4770a5b3893" prot="public" virt="non-virtual"><scope>lava::block</scope><name>c_list</name></member>
      <member refid="structlava_1_1block_1ae30cc03dd2789f3b0c7ef2125dee013b" prot="public" virt="non-virtual"><scope>lava::block</scope><name>c_ptr</name></member>
      <member refid="structlava_1_1block_1a78728f7d5abc5de61cce17ee2ead2f57" prot="public" virt="non-virtual"><scope>lava::block</scope><name>collect_buffers</name></member>
      <member refid="structlava_1_1block_1a90e2ee2da194d25b073986c2b375fe4e" prot="public" virt="non-virtual"><scope>lava::block</scope><name>create</name></member>
      <member refid="structlava_1_1block_1a5875f397c600f70f66d205793777d533" prot="public" virt="non-virtual"><scope>lava::block</scope><name>destroy</name></member>
      <member refid="structlava_1_1entity_1a39066de3954adf265c61c28f0a3b521c" prot="public" virt="non-virtual"><scope>lava::block</scope><name>entity</name></member>
      <member refid="structlava_1_1block_1a7a05921272711863394d162fe2cb3983" prot="public" virt="non-virtual"><scope>lava::block</scope><name>get_cmd_order</name></member>
      <member refid="structlava_1_1block_1a79bb818384221484733eb1b372e6b9e5" prot="public" virt="non-virtual"><scope>lava::block</scope><name>get_command_buffer</name></member>
      <member refid="structlava_1_1block_1a7bfec0344646503eeb17ea402080d59c" prot="public" virt="non-virtual"><scope>lava::block</scope><name>get_command_buffer</name></member>
      <member refid="structlava_1_1block_1ad962cd9012179be009da8bdade12bf57" prot="public" virt="non-virtual"><scope>lava::block</scope><name>get_commands</name></member>
      <member refid="structlava_1_1block_1ac6132a8f9bca3e90648c35f22eaa49fb" prot="public" virt="non-virtual"><scope>lava::block</scope><name>get_current_frame</name></member>
      <member refid="structlava_1_1block_1ac1ec06d85e3e4b44a7954a1ba38eb840" prot="public" virt="non-virtual"><scope>lava::block</scope><name>get_device</name></member>
      <member refid="structlava_1_1block_1a2d33dd787828f5fdb976df93cfba5660" prot="public" virt="non-virtual"><scope>lava::block</scope><name>get_frame_count</name></member>
      <member refid="structlava_1_1entity_1adfe6db1cb4d47cd34c36d3225e3571b7" prot="public" virt="non-virtual"><scope>lava::block</scope><name>get_id</name></member>
      <member refid="structlava_1_1block_1a197fd55dff5906d3a36dc38783ad5ac6" prot="private" virt="non-virtual"><scope>lava::block</scope><name>m_cmd_order</name></member>
      <member refid="structlava_1_1block_1a63dfe6b6b2d1c5c7ae4b791f029990bd" prot="private" virt="non-virtual"><scope>lava::block</scope><name>m_cmd_pools</name></member>
      <member refid="structlava_1_1block_1ae830cf9ff7ec7c676bf25a9f5c1e3a8f" prot="private" virt="non-virtual"><scope>lava::block</scope><name>m_commands</name></member>
      <member refid="structlava_1_1block_1a276945a91885e793789fc5e6289357ce" prot="private" virt="non-virtual"><scope>lava::block</scope><name>m_current_frame</name></member>
      <member refid="structlava_1_1block_1a3209a5db6610c1006db0bcc52b756cc3" prot="private" virt="non-virtual"><scope>lava::block</scope><name>m_device</name></member>
      <member refid="structlava_1_1block_1af59243ac0dccc0df36ac159be1987de0" prot="public" virt="non-virtual"><scope>lava::block</scope><name>make</name></member>
      <member refid="structlava_1_1no__copy__no__move_1ac97369ee1b1a70996ab3b9b24bf26432" prot="public" virt="non-virtual"><scope>lava::block</scope><name>no_copy_no_move</name></member>
      <member refid="structlava_1_1no__copy__no__move_1a7942908379614cbb8d6260192d76347c" prot="public" virt="non-virtual"><scope>lava::block</scope><name>no_copy_no_move</name></member>
      <member refid="structlava_1_1no__copy__no__move_1aa3211995685035c9ca4d0a3a7e4b5ac8" prot="public" virt="non-virtual"><scope>lava::block</scope><name>operator=</name></member>
      <member refid="structlava_1_1block_1a1ba35820f45a6702cdab60ea471bf080" prot="public" virt="non-virtual"><scope>lava::block</scope><name>process</name></member>
      <member refid="structlava_1_1block_1a18c827550b419bfe686fcef78c65892e" prot="public" virt="non-virtual"><scope>lava::block</scope><name>ptr</name></member>
      <member refid="structlava_1_1block_1afdda663d3950e15bdaea82d0c303ffba" prot="public" virt="non-virtual"><scope>lava::block</scope><name>remove_cmd</name></member>
      <member refid="structlava_1_1block_1acb560ae2445f1610bfc7155d3a81d7c6" prot="public" virt="non-virtual"><scope>lava::block</scope><name>remove_command</name></member>
      <member refid="structlava_1_1block_1afa1a9c5b31fcfcccf2467eac19d26f9c" prot="public" virt="non-virtual"><scope>lava::block</scope><name>s_map</name></member>
      <member refid="structlava_1_1block_1aebd0a7c9d3be269cd4749dbd41ec78f5" prot="public" virt="non-virtual"><scope>lava::block</scope><name>s_ptr</name></member>
      <member refid="structlava_1_1block_1a61dd13bfe64d3715353dd2b1f02718f9" prot="public" virt="non-virtual"><scope>lava::block</scope><name>set_active</name></member>
      <member refid="structlava_1_1block_1ac3392a022afd4387a9a5c17aec8a1139" prot="public" virt="non-virtual"><scope>lava::block</scope><name>~block</name></member>
      <member refid="structlava_1_1interface_1a9b6fe12d71f6da5dea89d44c62a5a046" prot="public" virt="virtual"><scope>lava::block</scope><name>~interface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
