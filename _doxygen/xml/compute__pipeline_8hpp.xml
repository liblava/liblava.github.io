<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="compute__pipeline_8hpp" kind="file" language="C++">
    <compoundname>compute_pipeline.hpp</compoundname>
    <includes refid="pipeline_8hpp" local="yes">liblava/block/pipeline.hpp</includes>
    <includedby refid="block_8hpp" local="yes">liblava/block.hpp</includedby>
    <incdepgraph>
      <node id="8">
        <label>liblava/base/base.hpp</label>
        <link refid="base_2base_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>liblava/base/device.hpp</label>
        <link refid="device_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>liblava/base/device_table.hpp</label>
        <link refid="device__table_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>liblava/base/memory.hpp</label>
        <link refid="memory_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>liblava/base/queue.hpp</label>
        <link refid="queue_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>liblava/block/compute_pipeline.hpp</label>
        <link refid="compute__pipeline_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>liblava/block/descriptor.hpp</label>
        <link refid="descriptor_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>liblava/block/pipeline.hpp</label>
        <link refid="pipeline_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>liblava/block/pipeline_layout.hpp</label>
        <link refid="pipeline__layout_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>liblava/core/data.hpp</label>
        <link refid="data_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>liblava/core/id.hpp</label>
        <link refid="id_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>liblava/core/types.hpp</label>
        <link refid="types_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>liblava/core/version.hpp</label>
        <link refid="version_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>liblava/util/math.hpp</label>
        <link refid="math_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>atomic</label>
      </node>
      <node id="12">
        <label>cstdint</label>
      </node>
      <node id="29">
        <label>deque</label>
      </node>
      <node id="13">
        <label>functional</label>
      </node>
      <node id="20">
        <label>glm/glm.hpp</label>
      </node>
      <node id="21">
        <label>glm/gtc/matrix_transform.hpp</label>
      </node>
      <node id="22">
        <label>glm/gtc/type_ptr.hpp</label>
      </node>
      <node id="11">
        <label>liblava/core/def.hpp</label>
      </node>
      <node id="25">
        <label>liblava/fwd.hpp</label>
      </node>
      <node id="14">
        <label>map</label>
      </node>
      <node id="27">
        <label>memory</label>
      </node>
      <node id="34">
        <label>mutex</label>
      </node>
      <node id="19">
        <label>picosha2.h</label>
      </node>
      <node id="35">
        <label>set</label>
      </node>
      <node id="15">
        <label>string</label>
      </node>
      <node id="31">
        <label>string.h</label>
      </node>
      <node id="16">
        <label>string_view</label>
      </node>
      <node id="17">
        <label>vector</label>
      </node>
      <node id="26">
        <label>vk_mem_alloc.h</label>
      </node>
      <node id="24">
        <label>volk.h</label>
      </node>
      <node id="23">
        <label>vulkan/vulkan.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>liblava/app.hpp</label>
        <link refid="app_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>liblava/app/app.hpp</label>
        <link refid="app_2app_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>liblava/block.hpp</label>
        <link refid="block_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>liblava/block/compute_pipeline.hpp</label>
        <link refid="compute__pipeline_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>liblava/engine.hpp</label>
        <link refid="engine_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>liblava/engine/engine.hpp</label>
        <link refid="engine_2engine_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>liblava/lava.hpp</label>
        <link refid="lava_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>liblava/test.hpp</label>
        <link refid="test_8hpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structlava_1_1compute__pipeline" prot="public">lava::compute_pipeline</innerclass>
    <innernamespace refid="namespacelava">lava</innernamespace>
    <briefdescription>
<para>Compute pipeline. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="authors"><para>Lava Block OÃœ and contributors </para>
</simplesect>
<simplesect kind="copyright"><para>Copyright (c) 2018-present, MIT License </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pipeline_8hpp" kindref="compound">liblava/block/pipeline.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">lava<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="structlava_1_1compute__pipeline" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlava_1_1compute__pipeline" kindref="compound">compute_pipeline</ref><sp/>:<sp/><ref refid="structlava_1_1pipeline" kindref="compound">pipeline</ref><sp/>{</highlight></codeline>
<codeline lineno="19" refid="structlava_1_1compute__pipeline_1ae8fba0dfd11efb20667131a53b53918f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structlava_1_1compute__pipeline_1ae8fba0dfd11efb20667131a53b53918f" kindref="member">s_ptr</ref><sp/>=<sp/>std::shared_ptr&lt;compute_pipeline&gt;;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="structlava_1_1compute__pipeline_1a33901cde9309728a619f73f50a088fa9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structlava_1_1compute__pipeline_1a33901cde9309728a619f73f50a088fa9" kindref="member">s_map</ref><sp/>=<sp/>std::map&lt;id,<sp/>s_ptr&gt;;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="structlava_1_1compute__pipeline_1a6a9c746d5846cafa94a55e6e54e5536b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structlava_1_1compute__pipeline_1a6a9c746d5846cafa94a55e6e54e5536b" kindref="member">s_list</ref><sp/>=<sp/>std::vector&lt;s_ptr&gt;;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="structlava_1_1compute__pipeline_1a68ba75889ccd5fc123df93c7dce69748" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structlava_1_1compute__pipeline_1ae8fba0dfd11efb20667131a53b53918f" kindref="member">s_ptr</ref><sp/><ref refid="structlava_1_1compute__pipeline_1a68ba75889ccd5fc123df93c7dce69748" kindref="member">make</ref>(<ref refid="structlava_1_1device" kindref="compound">device::ptr</ref><sp/><ref refid="structlava_1_1device" kindref="compound">device</ref>,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkPipelineCache<sp/>pipeline_cache<sp/>=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_shared&lt;compute_pipeline&gt;(<ref refid="structlava_1_1device" kindref="compound">device</ref>,<sp/>pipeline_cache);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structlava_1_1pipeline_1a532e33a3caacd4f71ba16d26111a0c5b" kindref="member">pipeline::pipeline</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="structlava_1_1compute__pipeline_1a7be06c2bd664c103661e4848f1bc2854" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structlava_1_1compute__pipeline_1a7be06c2bd664c103661e4848f1bc2854" kindref="member">bind</ref>(VkCommandBuffer<sp/>cmdBuffer)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="structlava_1_1compute__pipeline_1aab1a488ab2989de7d24be27d92902e1a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structlava_1_1compute__pipeline_1aab1a488ab2989de7d24be27d92902e1a" kindref="member">set_shader_stage</ref>(<ref refid="structlava_1_1c__data_1af79805daac5977755e5636b86b97c9d6" kindref="member">c_data::ref</ref><sp/><ref refid="structlava_1_1data" kindref="compound">data</ref>,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkShaderStageFlagBits<sp/><ref refid="structlava_1_1stage" kindref="compound">stage</ref>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="structlava_1_1compute__pipeline_1a3e6d479c2feb57b00f2ac16ba1a1e37a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structlava_1_1compute__pipeline_1a3e6d479c2feb57b00f2ac16ba1a1e37a" kindref="member">set</ref>(shader_stage::s_ptr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="structlava_1_1stage" kindref="compound">stage</ref>)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_shader_stage<sp/>=<sp/><ref refid="structlava_1_1stage" kindref="compound">stage</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="structlava_1_1compute__pipeline_1a142115babe5cd3924f277f0515e98e54" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>shader_stage::s_ptr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="structlava_1_1compute__pipeline_1a142115babe5cd3924f277f0515e98e54" kindref="member">get_shader_stage</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_shader_stage;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="structlava_1_1compute__pipeline_1a63ae45c6b38d4b07d57d3f5ace6e528b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structlava_1_1compute__pipeline_1a63ae45c6b38d4b07d57d3f5ace6e528b" kindref="member">copy_to</ref>(<ref refid="structlava_1_1compute__pipeline" kindref="compound">compute_pipeline</ref>*<sp/>target)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="structlava_1_1compute__pipeline_1a654ed7e149bedc432734be580211391f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structlava_1_1compute__pipeline_1a654ed7e149bedc432734be580211391f" kindref="member">copy_from</ref>(<ref refid="structlava_1_1compute__pipeline_1ae8fba0dfd11efb20667131a53b53918f" kindref="member">s_ptr</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>source)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source-&gt;copy_to(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setup()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>teardown()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>shader_stage::s_ptr<sp/>m_shader_stage;</highlight></codeline>
<codeline lineno="100"><highlight class="normal">};</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>lava</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="liblava/block/compute_pipeline.hpp"/>
  </compounddef>
</doxygen>
