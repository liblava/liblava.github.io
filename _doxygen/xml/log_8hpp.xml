<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="log_8hpp" kind="file" language="C++">
    <compoundname>log.hpp</compoundname>
    <includes refid="version_8hpp" local="yes">liblava/core/version.hpp</includes>
    <includes local="yes">spdlog/sinks/basic_file_sink.h</includes>
    <includes local="yes">spdlog/sinks/stdout_color_sinks.h</includes>
    <includes local="yes">spdlog/spdlog.h</includes>
    <includes local="no">memory</includes>
    <includedby refid="frame_2frame_8hpp" local="yes">liblava/frame/frame.hpp</includedby>
    <includedby refid="mesh_8hpp" local="yes">liblava/resource/mesh.hpp</includedby>
    <includedby refid="util_8hpp" local="yes">liblava/util.hpp</includedby>
    <incdepgraph>
      <node id="3">
        <label>liblava/core/types.hpp</label>
        <link refid="types_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>liblava/core/version.hpp</label>
        <link refid="version_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>liblava/util/log.hpp</label>
        <link refid="log_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>cstdint</label>
      </node>
      <node id="6">
        <label>functional</label>
      </node>
      <node id="4">
        <label>liblava/core/def.hpp</label>
      </node>
      <node id="7">
        <label>map</label>
      </node>
      <node id="14">
        <label>memory</label>
      </node>
      <node id="11">
        <label>spdlog/sinks/basic_file_sink.h</label>
      </node>
      <node id="12">
        <label>spdlog/sinks/stdout_color_sinks.h</label>
      </node>
      <node id="13">
        <label>spdlog/spdlog.h</label>
      </node>
      <node id="8">
        <label>string</label>
      </node>
      <node id="9">
        <label>string_view</label>
      </node>
      <node id="10">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>liblava/app.hpp</label>
        <link refid="app_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>liblava/app/app.hpp</label>
        <link refid="app_2app_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>liblava/app/benchmark.hpp</label>
        <link refid="benchmark_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>liblava/asset.hpp</label>
        <link refid="asset_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>liblava/asset/load_mesh.hpp</label>
        <link refid="load__mesh_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>liblava/engine.hpp</label>
        <link refid="engine_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>liblava/engine/engine.hpp</label>
        <link refid="engine_2engine_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>liblava/engine/producer.hpp</label>
        <link refid="producer_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>liblava/frame.hpp</label>
        <link refid="frame_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>liblava/frame/frame.hpp</label>
        <link refid="frame_2frame_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>liblava/lava.hpp</label>
        <link refid="lava_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>liblava/resource.hpp</label>
        <link refid="resource_8hpp"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>liblava/resource/mesh.hpp</label>
        <link refid="mesh_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>liblava/test.hpp</label>
        <link refid="test_8hpp"/>
      </node>
      <node id="16">
        <label>liblava/util.hpp</label>
        <link refid="util_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>liblava/util/log.hpp</label>
        <link refid="log_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structlava_1_1log_1_1config" prot="public">lava::log::config</innerclass>
    <innerclass refid="structlava_1_1global__logger" prot="public">lava::global_logger</innerclass>
    <innernamespace refid="namespacelava">lava</innernamespace>
    <innernamespace refid="namespacelava_1_1log">lava::log</innernamespace>
    <briefdescription>
<para>Logging. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="authors"><para>Lava Block OÃœ and contributors </para>
</simplesect>
<simplesect kind="copyright"><para>Copyright (c) 2018-present, MIT License </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="version_8hpp" kindref="compound">liblava/core/version.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;spdlog/sinks/basic_file_sink.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;spdlog/sinks/stdout_color_sinks.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;spdlog/spdlog.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">lava<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="log_8hpp_1a7b6c44303d3171ad98904b82bed1e31c" refkind="member"><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="log_8hpp_1a7b6c44303d3171ad98904b82bed1e31c" kindref="member">s_logger</ref><sp/>=<sp/>std::shared_ptr&lt;spdlog::logger&gt;;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="log_8hpp_1a3ca352b083878c2d3ee5dd4f4f962aad" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="base_2base_8hpp_1a7f77a3e2fd6478b5d5c013607ec5bd8b" kindref="member">to_string</ref>(<ref refid="types_8hpp_1a01c2a7bfa24e7ea76ef5a79d8d4daaf6" kindref="member">string_ref</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/><ref refid="types_8hpp_1a01c2a7bfa24e7ea76ef5a79d8d4daaf6" kindref="member">string_ref</ref><sp/><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref>)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;{}<sp/>|<sp/>{}&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="log_8hpp_1ac41fac4ee2ecb104b6926f9be25f8899" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="base_2base_8hpp_1a7f77a3e2fd6478b5d5c013607ec5bd8b" kindref="member">to_string</ref>(<ref refid="structlava_1_1semantic__version" kindref="compound">sem_version</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="structlava_1_1version" kindref="compound">version</ref>)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;{}.{}.{}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structlava_1_1version" kindref="compound">version</ref>.major,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structlava_1_1version" kindref="compound">version</ref>.minor,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structlava_1_1version" kindref="compound">version</ref>.patch);</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="log_8hpp_1a1e63caa365cd3250553ab7454c81049b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="log_8hpp_1a1e63caa365cd3250553ab7454c81049b" kindref="member">semantic_version_string</ref>()<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="base_2base_8hpp_1a7f77a3e2fd6478b5d5c013607ec5bd8b" kindref="member">to_string</ref>(<ref refid="structlava_1_1semantic__version" kindref="compound">sem_version</ref>{});</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="log_8hpp_1ad0b162fbb13cc0d41cdd3770dee314f0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="log_8hpp_1ad0b162fbb13cc0d41cdd3770dee314f0" kindref="member">sem_version_string</ref>()<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="log_8hpp_1a1e63caa365cd3250553ab7454c81049b" kindref="member">semantic_version_string</ref>();</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="log_8hpp_1abf34deddbe7ec13bdbef030763c4d222" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref><sp/><ref refid="base_2base_8hpp_1a7f77a3e2fd6478b5d5c013607ec5bd8b" kindref="member">to_string</ref>(<ref refid="version_8hpp_1a592fe41d299f08f625229ef52f7fe331" kindref="member">version_stage</ref><sp/><ref refid="structlava_1_1stage" kindref="compound">stage</ref>)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="structlava_1_1stage" kindref="compound">stage</ref>)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>version_stage::preview:</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;preview&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>version_stage::alpha:</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;alpha&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>version_stage::beta:</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;beta&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>version_stage::rc:</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;rc&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="log_8hpp_1abefb8ca281e429dedfa8c43d9ae711c9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="base_2base_8hpp_1a7f77a3e2fd6478b5d5c013607ec5bd8b" kindref="member">to_string</ref>(<ref refid="structlava_1_1version" kindref="compound">version</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="structlava_1_1version" kindref="compound">version</ref>)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>stage_str<sp/>=<sp/><ref refid="base_2base_8hpp_1a7f77a3e2fd6478b5d5c013607ec5bd8b" kindref="member">to_string</ref>(<ref refid="structlava_1_1version" kindref="compound">version</ref>.<ref refid="structlava_1_1version_1a13275affeb3eab2a3ebaba8d83963c96" kindref="member">stage</ref>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="structlava_1_1version" kindref="compound">version</ref>.<ref refid="structlava_1_1version_1a817115e00a7f27e48fdcbfd7ba8d83e1" kindref="member">rev</ref><sp/>&gt;<sp/>1)<sp/>&amp;&amp;<sp/>(<ref refid="structlava_1_1version" kindref="compound">version</ref>.<ref refid="structlava_1_1version_1a13275affeb3eab2a3ebaba8d83963c96" kindref="member">stage</ref><sp/>!=<sp/>version_stage::release))</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stage_str<sp/>+=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="structlava_1_1version" kindref="compound">version</ref>.<ref refid="structlava_1_1version_1a817115e00a7f27e48fdcbfd7ba8d83e1" kindref="member">rev</ref>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structlava_1_1version" kindref="compound">version</ref>.<ref refid="structlava_1_1version_1a6e395fd7887aae1d7b1f85186a2b0239" kindref="member">release</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stage_str.empty())</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="structlava_1_1version" kindref="compound">version</ref>.<ref refid="structlava_1_1version_1a6a95b2aa49453a7aef7434a289eff893" kindref="member">year</ref>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;{}<sp/>{}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structlava_1_1version" kindref="compound">version</ref>.<ref refid="structlava_1_1version_1a6a95b2aa49453a7aef7434a289eff893" kindref="member">year</ref>,<sp/>stage_str);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;{}.{}<sp/>{}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structlava_1_1version" kindref="compound">version</ref>.<ref refid="structlava_1_1version_1a6a95b2aa49453a7aef7434a289eff893" kindref="member">year</ref>,<sp/><ref refid="structlava_1_1version" kindref="compound">version</ref>.<ref refid="structlava_1_1version_1a6e395fd7887aae1d7b1f85186a2b0239" kindref="member">release</ref>,<sp/>stage_str);</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="log_8hpp_1a24f4d3b66a3cd12bc3ff3a57228764d6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="log_8hpp_1a24f4d3b66a3cd12bc3ff3a57228764d6" kindref="member">version_string</ref>()<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="base_2base_8hpp_1a7f77a3e2fd6478b5d5c013607ec5bd8b" kindref="member">to_string</ref>(<ref refid="structlava_1_1version" kindref="compound">version</ref>{});</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">log<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="structlava_1_1log_1_1config" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlava_1_1log_1_1config" kindref="compound">config</ref><sp/>{</highlight></codeline>
<codeline lineno="114" refid="structlava_1_1log_1_1config_1ae64ecf4aa7602d399ab6794d60825cdb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref><sp/><ref refid="structlava_1_1log_1_1config_1ae64ecf4aa7602d399ab6794d60825cdb" kindref="member">logger</ref><sp/>=<sp/><ref refid="types_8hpp_1aa6f0dfe4257894c2b7439582eeea0bec" kindref="member">_lava_</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="structlava_1_1log_1_1config_1add14f7f5f78aee1156f59bde73e3692e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref><sp/><ref refid="structlava_1_1file" kindref="compound">file</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;lava.log&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="structlava_1_1log_1_1config_1ae2419bcffd31d5dcf102636bfc109c1a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8hpp_1a7e5d7f16aff5126a54243302372b43b1" kindref="member">i32</ref><sp/><ref refid="structlava_1_1log_1_1config_1ae2419bcffd31d5dcf102636bfc109c1a" kindref="member">level</ref><sp/>=<sp/><ref refid="types_8hpp_1a276426bd2813c3fc0cb1c6bf20a8cbae" kindref="member">undef</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="structlava_1_1log_1_1config_1a76b4bc49bc5ed2cf9ca0a45fc06157d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structlava_1_1log_1_1config_1a76b4bc49bc5ed2cf9ca0a45fc06157d3" kindref="member">debug</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="log_8hpp_1a25e633069683662327aa1a0191a16aac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="log_8hpp_1a7b6c44303d3171ad98904b82bed1e31c" kindref="member">s_logger</ref><sp/><ref refid="log_8hpp_1a25e633069683662327aa1a0191a16aac" kindref="member">setup</ref>(<ref refid="structlava_1_1log_1_1config" kindref="compound">config</ref><sp/><ref refid="structlava_1_1log_1_1config" kindref="compound">config</ref><sp/>=<sp/>{})<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config.debug)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>log<sp/>=<sp/>spdlog::stdout_color_mt(config.logger);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log-&gt;set_level((config.level<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>spdlog::level::debug</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(spdlog::level::level_enum)config.level);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>log;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>log<sp/>=<sp/>spdlog::basic_logger_mt(config.logger,<sp/>config.file);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log-&gt;set_level((config.level<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>spdlog::level::warn</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(spdlog::level::level_enum)config.level);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>log;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="log_8hpp_1a4a1844c39cdc4874a66f1a2857ae4e3c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="log_8hpp_1a4a1844c39cdc4874a66f1a2857ae4e3c" kindref="member">teardown</ref>(<ref refid="structlava_1_1log_1_1config" kindref="compound">config</ref><sp/><ref refid="structlava_1_1log_1_1config" kindref="compound">config</ref><sp/>=<sp/>{})<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::drop(config.logger);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>log</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="structlava_1_1global__logger" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlava_1_1global__logger" kindref="compound">global_logger</ref><sp/>{</highlight></codeline>
<codeline lineno="165" refid="structlava_1_1global__logger_1af8d156d01533ef0140fce79a27421c6f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structlava_1_1global__logger" kindref="compound">global_logger</ref>&amp;<sp/><ref refid="structlava_1_1global__logger_1af8d156d01533ef0140fce79a27421c6f" kindref="member">singleton</ref>()<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structlava_1_1global__logger" kindref="compound">global_logger</ref><sp/><ref refid="structlava_1_1global__logger" kindref="compound">global_logger</ref>;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structlava_1_1global__logger" kindref="compound">global_logger</ref>;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="structlava_1_1global__logger_1a5f86ea15f4aa7f6592646e383c518c38" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="log_8hpp_1a7b6c44303d3171ad98904b82bed1e31c" kindref="member">s_logger</ref><sp/><ref refid="structlava_1_1global__logger_1a5f86ea15f4aa7f6592646e383c518c38" kindref="member">get</ref>()<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_logger;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="structlava_1_1global__logger_1a755b417a7fe15cc8c36a52b293946bf7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structlava_1_1global__logger_1a755b417a7fe15cc8c36a52b293946bf7" kindref="member">set</ref>(<ref refid="log_8hpp_1a7b6c44303d3171ad98904b82bed1e31c" kindref="member">lava::s_logger</ref><sp/>l)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_logger<sp/>=<sp/>l;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="structlava_1_1global__logger_1a0b0815f56c6589a45b51cd2d254080b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structlava_1_1global__logger_1a0b0815f56c6589a45b51cd2d254080b5" kindref="member">reset</ref>()<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_logger<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="log_8hpp_1a7b6c44303d3171ad98904b82bed1e31c" kindref="member">s_logger</ref><sp/>m_logger;</highlight></codeline>
<codeline lineno="196"><highlight class="normal">};</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="log_8hpp_1a10ae1b412d16ce204d8bc594ae6a171f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="log_8hpp_1a7b6c44303d3171ad98904b82bed1e31c" kindref="member">s_logger</ref><sp/><ref refid="log_8hpp_1a10ae1b412d16ce204d8bc594ae6a171f" kindref="member">logger</ref>()<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structlava_1_1global__logger_1af8d156d01533ef0140fce79a27421c6f" kindref="member">global_logger::singleton</ref>().<ref refid="structlava_1_1global__logger_1a5f86ea15f4aa7f6592646e383c518c38" kindref="member">get</ref>();</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>lava</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="liblava/util/log.hpp"/>
  </compounddef>
</doxygen>
