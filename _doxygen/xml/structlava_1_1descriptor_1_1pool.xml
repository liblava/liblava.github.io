<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="structlava_1_1descriptor_1_1pool" kind="struct" language="C++" prot="public">
    <compoundname>lava::descriptor::pool</compoundname>
    <basecompoundref refid="structlava_1_1entity" prot="public" virt="non-virtual">lava::entity</basecompoundref>
    <includes refid="descriptor_8hpp" local="no">descriptor.hpp</includes>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structlava_1_1descriptor_1_1pool_1a44d81b372dba82bb4d33a442cad51bd7" prot="public" static="no">
        <type>std::shared_ptr&lt; <ref refid="structlava_1_1descriptor_1_1pool" kindref="compound">pool</ref> &gt;</type>
        <definition>using lava::descriptor::pool::s_ptr =  std::shared_ptr&lt;pool&gt;</definition>
        <argsstring></argsstring>
        <name>s_ptr</name>
        <qualifiedname>lava::descriptor::pool::s_ptr</qualifiedname>
        <briefdescription>
<para>Shared pointer to pool. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/block/descriptor.hpp" line="103" column="9" bodyfile="liblava/block/descriptor.hpp" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structlava_1_1descriptor_1_1pool_1aed9b058c9e6ae86c113457865ed73574" prot="public" static="no">
        <type>std::vector&lt; <ref refid="structlava_1_1descriptor_1_1pool_1a44d81b372dba82bb4d33a442cad51bd7" kindref="member">s_ptr</ref> &gt;</type>
        <definition>using lava::descriptor::pool::s_list =  std::vector&lt;s_ptr&gt;</definition>
        <argsstring></argsstring>
        <name>s_list</name>
        <qualifiedname>lava::descriptor::pool::s_list</qualifiedname>
        <briefdescription>
<para>List of pools. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/block/descriptor.hpp" line="106" column="9" bodyfile="liblava/block/descriptor.hpp" bodystart="106" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structlava_1_1descriptor_1_1pool_1ad8198d81d79354074d8b39fdb55ccf9e" prot="private" static="no" mutable="no">
        <type><ref refid="structlava_1_1device_1a6f7d378ef30e7bf1cd4fe208de859250" kindref="member">device::ptr</ref></type>
        <definition>device::ptr lava::descriptor::pool::m_device</definition>
        <argsstring></argsstring>
        <name>m_device</name>
        <qualifiedname>lava::descriptor::pool::m_device</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
<para>Vulkan device. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/block/descriptor.hpp" line="169" column="21" bodyfile="liblava/block/descriptor.hpp" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlava_1_1descriptor_1_1pool_1a529ce9e78cb6483171ae9abd8e2e7698" prot="private" static="no" mutable="no">
        <type>VkDescriptorPool</type>
        <definition>VkDescriptorPool lava::descriptor::pool::m_vk_pool</definition>
        <argsstring></argsstring>
        <name>m_vk_pool</name>
        <qualifiedname>lava::descriptor::pool::m_vk_pool</qualifiedname>
        <initializer>= VK_NULL_HANDLE</initializer>
        <briefdescription>
<para>Vulkan descriptor pool. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/block/descriptor.hpp" line="172" column="26" bodyfile="liblava/block/descriptor.hpp" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlava_1_1descriptor_1_1pool_1a6ba2506f5a2d3fea5787f901c7e8c2b0" prot="private" static="no" mutable="no">
        <type><ref refid="base_2base_8hpp_1aeec9e5c423fdc50bd10ba2d59d347080" kindref="member">VkDescriptorPoolSizes</ref></type>
        <definition>VkDescriptorPoolSizes lava::descriptor::pool::m_sizes</definition>
        <argsstring></argsstring>
        <name>m_sizes</name>
        <qualifiedname>lava::descriptor::pool::m_sizes</qualifiedname>
        <briefdescription>
<para>Descritpr pool sizes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/block/descriptor.hpp" line="175" column="31" bodyfile="liblava/block/descriptor.hpp" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlava_1_1descriptor_1_1pool_1a0976fcc9e96885c770d3373c40240341" prot="private" static="no" mutable="no">
        <type><ref refid="types_8hpp_1ae3c4bbc50dd4583ab0df2c24c49a49c9" kindref="member">ui32</ref></type>
        <definition>ui32 lava::descriptor::pool::m_max</definition>
        <argsstring></argsstring>
        <name>m_max</name>
        <qualifiedname>lava::descriptor::pool::m_max</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
<para>Number of pools. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/block/descriptor.hpp" line="178" column="14" bodyfile="liblava/block/descriptor.hpp" bodystart="178" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structlava_1_1descriptor_1_1pool_1ae5ae777ccd9b5426f1d62837f48af48e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlava_1_1descriptor_1_1pool_1a44d81b372dba82bb4d33a442cad51bd7" kindref="member">s_ptr</ref></type>
        <definition>static s_ptr lava::descriptor::pool::make</definition>
        <argsstring>()</argsstring>
        <name>make</name>
        <qualifiedname>lava::descriptor::pool::make</qualifiedname>
        <briefdescription>
<para>Make a new descriptor pool. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>s_ptr Shared pointer to descriptor pool </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/block/descriptor.hpp" line="112" column="22" bodyfile="liblava/block/descriptor.hpp" bodystart="112" bodyend="114"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structlava_1_1descriptor_1_1pool_1a00f73718126014975eb00c14209e26fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lava::descriptor::pool::create</definition>
        <argsstring>(device::ptr device, VkDescriptorPoolSizesRef sizes, ui32 max=1, VkDescriptorPoolCreateFlags flags=VK_DESCRIPTOR_POOL_CREATE_FREE_DESCRIPTOR_SET_BIT)</argsstring>
        <name>create</name>
        <qualifiedname>lava::descriptor::pool::create</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1device_1a6f7d378ef30e7bf1cd4fe208de859250" kindref="member">device::ptr</ref></type>
          <declname>device</declname>
        </param>
        <param>
          <type><ref refid="base_2base_8hpp_1a425746916ff6402a4032061a5e0e7da3" kindref="member">VkDescriptorPoolSizesRef</ref></type>
          <declname>sizes</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1ae3c4bbc50dd4583ab0df2c24c49a49c9" kindref="member">ui32</ref></type>
          <declname>max</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>VkDescriptorPoolCreateFlags</type>
          <declname>flags</declname>
          <defval>VK_DESCRIPTOR_POOL_CREATE_FREE_DESCRIPTOR_SET_BIT</defval>
        </param>
        <briefdescription>
<para>Create a new pool. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>Vulkan device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sizes</parametername>
</parameternamelist>
<parameterdescription>
<para>Descriptor pool sizes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of pools </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Create flags </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Create was successful or failed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/block/descriptor.hpp" line="124" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1descriptor_1_1pool_1a375fa5bdc6fff6ea736164e6d6bd2ee3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lava::descriptor::pool::destroy</definition>
        <argsstring>()</argsstring>
        <name>destroy</name>
        <qualifiedname>lava::descriptor::pool::destroy</qualifiedname>
        <briefdescription>
<para>Destroy the pool. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/block/descriptor.hpp" line="133" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1descriptor_1_1pool_1aa1ae09b79718b6405e8934ade1df42ba" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>VkDescriptorPool</type>
        <definition>VkDescriptorPool lava::descriptor::pool::get</definition>
        <argsstring>() const</argsstring>
        <name>get</name>
        <qualifiedname>lava::descriptor::pool::get</qualifiedname>
        <briefdescription>
<para>Get the descriptor pool. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>VkDescriptorPool Vulkan descriptor pool </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/block/descriptor.hpp" line="139" column="26" bodyfile="liblava/block/descriptor.hpp" bodystart="139" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1descriptor_1_1pool_1ac7c4786d9bf7e28a3102c44687433c6d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlava_1_1device_1a6f7d378ef30e7bf1cd4fe208de859250" kindref="member">device::ptr</ref></type>
        <definition>device::ptr lava::descriptor::pool::get_device</definition>
        <argsstring>()</argsstring>
        <name>get_device</name>
        <qualifiedname>lava::descriptor::pool::get_device</qualifiedname>
        <briefdescription>
<para>Get the device. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="structlava_1_1device_1a6f7d378ef30e7bf1cd4fe208de859250" kindref="member">device::ptr</ref> Vulkan device </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/block/descriptor.hpp" line="147" column="21" bodyfile="liblava/block/descriptor.hpp" bodystart="147" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1descriptor_1_1pool_1ad48346a8fa6ba65c9cab3a03a8d1b9a9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="base_2base_8hpp_1aeec9e5c423fdc50bd10ba2d59d347080" kindref="member">VkDescriptorPoolSizes</ref> const &amp;</type>
        <definition>VkDescriptorPoolSizes const  &amp; lava::descriptor::pool::get_sizes</definition>
        <argsstring>() const</argsstring>
        <name>get_sizes</name>
        <qualifiedname>lava::descriptor::pool::get_sizes</qualifiedname>
        <briefdescription>
<para>Get the sizes. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>VkDescriptorPoolSizes const&amp; Descriptor pool sizes </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/block/descriptor.hpp" line="155" column="37" bodyfile="liblava/block/descriptor.hpp" bodystart="155" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1descriptor_1_1pool_1a87259c5f443b4b4ae39382a0485a71d4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8hpp_1ae3c4bbc50dd4583ab0df2c24c49a49c9" kindref="member">ui32</ref></type>
        <definition>ui32 lava::descriptor::pool::get_max</definition>
        <argsstring>() const</argsstring>
        <name>get_max</name>
        <qualifiedname>lava::descriptor::pool::get_max</qualifiedname>
        <briefdescription>
<para>Get the max. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>ui32 Number of pools </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/block/descriptor.hpp" line="163" column="14" bodyfile="liblava/block/descriptor.hpp" bodystart="163" bodyend="165"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Descriptor pool. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>lava::descriptor::pool</label>
        <link refid="structlava_1_1descriptor_1_1pool"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>lava::entity</label>
        <link refid="structlava_1_1entity"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>lava::interface</label>
        <link refid="structlava_1_1interface"/>
      </node>
      <node id="3">
        <label>lava::no_copy_no_move</label>
        <link refid="structlava_1_1no__copy__no__move"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>lava::descriptor::pool</label>
        <link refid="structlava_1_1descriptor_1_1pool"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>lava::entity</label>
        <link refid="structlava_1_1entity"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>lava::interface</label>
        <link refid="structlava_1_1interface"/>
      </node>
      <node id="3">
        <label>lava::no_copy_no_move</label>
        <link refid="structlava_1_1no__copy__no__move"/>
      </node>
    </collaborationgraph>
    <location file="liblava/block/descriptor.hpp" line="101" column="5" bodyfile="liblava/block/descriptor.hpp" bodystart="101" bodyend="179"/>
    <listofallmembers>
      <member refid="structlava_1_1descriptor_1_1pool_1a00f73718126014975eb00c14209e26fe" prot="public" virt="non-virtual"><scope>lava::descriptor::pool</scope><name>create</name></member>
      <member refid="structlava_1_1descriptor_1_1pool_1a375fa5bdc6fff6ea736164e6d6bd2ee3" prot="public" virt="non-virtual"><scope>lava::descriptor::pool</scope><name>destroy</name></member>
      <member refid="structlava_1_1entity_1a39066de3954adf265c61c28f0a3b521c" prot="public" virt="non-virtual"><scope>lava::descriptor::pool</scope><name>entity</name></member>
      <member refid="structlava_1_1descriptor_1_1pool_1aa1ae09b79718b6405e8934ade1df42ba" prot="public" virt="non-virtual"><scope>lava::descriptor::pool</scope><name>get</name></member>
      <member refid="structlava_1_1descriptor_1_1pool_1ac7c4786d9bf7e28a3102c44687433c6d" prot="public" virt="non-virtual"><scope>lava::descriptor::pool</scope><name>get_device</name></member>
      <member refid="structlava_1_1entity_1adfe6db1cb4d47cd34c36d3225e3571b7" prot="public" virt="non-virtual"><scope>lava::descriptor::pool</scope><name>get_id</name></member>
      <member refid="structlava_1_1descriptor_1_1pool_1a87259c5f443b4b4ae39382a0485a71d4" prot="public" virt="non-virtual"><scope>lava::descriptor::pool</scope><name>get_max</name></member>
      <member refid="structlava_1_1descriptor_1_1pool_1ad48346a8fa6ba65c9cab3a03a8d1b9a9" prot="public" virt="non-virtual"><scope>lava::descriptor::pool</scope><name>get_sizes</name></member>
      <member refid="structlava_1_1descriptor_1_1pool_1ad8198d81d79354074d8b39fdb55ccf9e" prot="private" virt="non-virtual"><scope>lava::descriptor::pool</scope><name>m_device</name></member>
      <member refid="structlava_1_1descriptor_1_1pool_1a0976fcc9e96885c770d3373c40240341" prot="private" virt="non-virtual"><scope>lava::descriptor::pool</scope><name>m_max</name></member>
      <member refid="structlava_1_1descriptor_1_1pool_1a6ba2506f5a2d3fea5787f901c7e8c2b0" prot="private" virt="non-virtual"><scope>lava::descriptor::pool</scope><name>m_sizes</name></member>
      <member refid="structlava_1_1descriptor_1_1pool_1a529ce9e78cb6483171ae9abd8e2e7698" prot="private" virt="non-virtual"><scope>lava::descriptor::pool</scope><name>m_vk_pool</name></member>
      <member refid="structlava_1_1descriptor_1_1pool_1ae5ae777ccd9b5426f1d62837f48af48e" prot="public" virt="non-virtual"><scope>lava::descriptor::pool</scope><name>make</name></member>
      <member refid="structlava_1_1no__copy__no__move_1ac97369ee1b1a70996ab3b9b24bf26432" prot="public" virt="non-virtual"><scope>lava::descriptor::pool</scope><name>no_copy_no_move</name></member>
      <member refid="structlava_1_1no__copy__no__move_1a7942908379614cbb8d6260192d76347c" prot="public" virt="non-virtual"><scope>lava::descriptor::pool</scope><name>no_copy_no_move</name></member>
      <member refid="structlava_1_1no__copy__no__move_1aa3211995685035c9ca4d0a3a7e4b5ac8" prot="public" virt="non-virtual"><scope>lava::descriptor::pool</scope><name>operator=</name></member>
      <member refid="structlava_1_1descriptor_1_1pool_1aed9b058c9e6ae86c113457865ed73574" prot="public" virt="non-virtual"><scope>lava::descriptor::pool</scope><name>s_list</name></member>
      <member refid="structlava_1_1descriptor_1_1pool_1a44d81b372dba82bb4d33a442cad51bd7" prot="public" virt="non-virtual"><scope>lava::descriptor::pool</scope><name>s_ptr</name></member>
      <member refid="structlava_1_1interface_1a9b6fe12d71f6da5dea89d44c62a5a046" prot="public" virt="virtual"><scope>lava::descriptor::pool</scope><name>~interface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
