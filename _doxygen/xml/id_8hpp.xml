<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="id_8hpp" kind="file" language="C++">
    <compoundname>id.hpp</compoundname>
    <includes refid="types_8hpp" local="yes">liblava/core/types.hpp</includes>
    <includes local="no">atomic</includes>
    <includes local="no">deque</includes>
    <includes local="no">memory</includes>
    <includes local="no">mutex</includes>
    <includes local="no">set</includes>
    <includedby refid="device_8hpp" local="yes">liblava/base/device.hpp</includedby>
    <includedby refid="core_8hpp" local="yes">liblava/core.hpp</includedby>
    <includedby refid="gamepad_8hpp" local="yes">liblava/frame/gamepad.hpp</includedby>
    <includedby refid="input_8hpp" local="yes">liblava/frame/input.hpp</includedby>
    <includedby refid="layer_8hpp" local="yes">liblava/util/layer.hpp</includedby>
    <includedby refid="thread_8hpp" local="yes">liblava/util/thread.hpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>liblava/core/id.hpp</label>
        <link refid="id_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>liblava/core/types.hpp</label>
        <link refid="types_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>atomic</label>
      </node>
      <node id="4">
        <label>cstdint</label>
      </node>
      <node id="11">
        <label>deque</label>
      </node>
      <node id="5">
        <label>functional</label>
      </node>
      <node id="3">
        <label>liblava/core/def.hpp</label>
      </node>
      <node id="6">
        <label>map</label>
      </node>
      <node id="12">
        <label>memory</label>
      </node>
      <node id="13">
        <label>mutex</label>
      </node>
      <node id="14">
        <label>set</label>
      </node>
      <node id="7">
        <label>string</label>
      </node>
      <node id="8">
        <label>string_view</label>
      </node>
      <node id="9">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="10">
        <label>liblava/app.hpp</label>
        <link refid="app_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>liblava/app/app.hpp</label>
        <link refid="app_2app_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>liblava/app/benchmark.hpp</label>
        <link refid="benchmark_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>liblava/app/camera.hpp</label>
        <link refid="camera_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>liblava/app/config.hpp</label>
        <link refid="config_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>liblava/app/forward_shading.hpp</label>
        <link refid="forward__shading_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>liblava/app/imgui.hpp</label>
        <link refid="imgui_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>liblava/asset.hpp</label>
        <link refid="asset_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>liblava/asset/load_image.hpp</label>
        <link refid="load__image_8hpp"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>liblava/asset/load_mesh.hpp</label>
        <link refid="load__mesh_8hpp"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>liblava/asset/load_texture.hpp</label>
        <link refid="load__texture_8hpp"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>liblava/asset/write_image.hpp</label>
        <link refid="write__image_8hpp"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>liblava/base.hpp</label>
        <link refid="base_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>liblava/base/device.hpp</label>
        <link refid="device_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>liblava/base/instance.hpp</label>
        <link refid="instance_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>liblava/base/physical_device.hpp</label>
        <link refid="physical__device_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>liblava/base/platform.hpp</label>
        <link refid="platform_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>liblava/block.hpp</label>
        <link refid="block_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>liblava/block/block.hpp</label>
        <link refid="block_2block_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>liblava/block/compute_pipeline.hpp</label>
        <link refid="compute__pipeline_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>liblava/block/descriptor.hpp</label>
        <link refid="descriptor_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>liblava/block/pipeline.hpp</label>
        <link refid="pipeline_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>liblava/block/pipeline_layout.hpp</label>
        <link refid="pipeline__layout_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>liblava/block/render_pass.hpp</label>
        <link refid="render__pass_8hpp"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>liblava/block/render_pipeline.hpp</label>
        <link refid="render__pipeline_8hpp"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>liblava/block/subpass.hpp</label>
        <link refid="subpass_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>liblava/core.hpp</label>
        <link refid="core_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>liblava/core/id.hpp</label>
        <link refid="id_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>liblava/engine.hpp</label>
        <link refid="engine_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>liblava/engine/engine.hpp</label>
        <link refid="engine_2engine_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>liblava/engine/producer.hpp</label>
        <link refid="producer_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>liblava/frame.hpp</label>
        <link refid="frame_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>liblava/frame/frame.hpp</label>
        <link refid="frame_2frame_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>liblava/frame/gamepad.hpp</label>
        <link refid="gamepad_8hpp"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>liblava/frame/input.hpp</label>
        <link refid="input_8hpp"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>liblava/frame/render_target.hpp</label>
        <link refid="render__target_8hpp"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>liblava/frame/renderer.hpp</label>
        <link refid="renderer_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>liblava/frame/swapchain.hpp</label>
        <link refid="swapchain_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>liblava/frame/window.hpp</label>
        <link refid="window_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>liblava/lava.hpp</label>
        <link refid="lava_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>liblava/resource.hpp</label>
        <link refid="resource_8hpp"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>liblava/resource/buffer.hpp</label>
        <link refid="buffer_8hpp"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>liblava/resource/format.hpp</label>
        <link refid="format_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>liblava/resource/image.hpp</label>
        <link refid="image_8hpp"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>liblava/resource/mesh.hpp</label>
        <link refid="mesh_8hpp"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>liblava/resource/texture.hpp</label>
        <link refid="texture_8hpp"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>liblava/test.hpp</label>
        <link refid="test_8hpp"/>
      </node>
      <node id="49">
        <label>liblava/util.hpp</label>
        <link refid="util_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>liblava/util/layer.hpp</label>
        <link refid="layer_8hpp"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>liblava/util/telegram.hpp</label>
        <link refid="telegram_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>liblava/util/thread.hpp</label>
        <link refid="thread_8hpp"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structlava_1_1id" prot="public">lava::id</innerclass>
    <innerclass refid="structlava_1_1ids" prot="public">lava::ids</innerclass>
    <innerclass refid="structlava_1_1id__listeners" prot="public">lava::id_listeners</innerclass>
    <innerclass refid="structlava_1_1entity" prot="public">lava::entity</innerclass>
    <innerclass refid="structlava_1_1id__registry" prot="public">lava::id_registry</innerclass>
    <innernamespace refid="namespacelava">lava</innernamespace>
    <briefdescription>
<para>Object Identification. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="authors"><para>Lava Block OÜ and contributors </para>
</simplesect>
<simplesect kind="copyright"><para>Copyright (c) 2018-present, MIT License </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="types_8hpp" kindref="compound">liblava/core/types.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;atomic&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;deque&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mutex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">lava<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="structlava_1_1id" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlava_1_1id" kindref="compound">id</ref><sp/>{</highlight></codeline>
<codeline lineno="24" refid="structlava_1_1id_1a226df789a94177f765bdcaac2988eda0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structlava_1_1id_1a226df789a94177f765bdcaac2988eda0" kindref="member">ref</ref><sp/>=<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="structlava_1_1id_1a5681d138e316875b5c91f34110f6b7ca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structlava_1_1id_1a5681d138e316875b5c91f34110f6b7ca" kindref="member">set</ref><sp/>=<sp/>std::set&lt;id&gt;;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="structlava_1_1id_1a8cb3dbbd2611027c0b2b095db094bb81" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structlava_1_1id_1a8cb3dbbd2611027c0b2b095db094bb81" kindref="member">set_ref</ref><sp/>=<sp/><ref refid="structlava_1_1id_1a5681d138e316875b5c91f34110f6b7ca" kindref="member">set</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="structlava_1_1id_1a76fc344f9c0b634c58611fb0a73528dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structlava_1_1id_1a76fc344f9c0b634c58611fb0a73528dd" kindref="member">list</ref><sp/>=<sp/>std::vector&lt;id&gt;;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="structlava_1_1id_1a454b3ed8f4e34c06cef590e45bdd6f45" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structlava_1_1id_1a454b3ed8f4e34c06cef590e45bdd6f45" kindref="member">map</ref><sp/>=<sp/>std::map&lt;id,<sp/>id&gt;;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="structlava_1_1id_1a8328204a339b365090eb0c68a31560f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structlava_1_1id_1a8328204a339b365090eb0c68a31560f1" kindref="member">index_map</ref><sp/>=<sp/>std::map&lt;id,<sp/>index&gt;;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="structlava_1_1id_1a5a8dc3a1db21f6e29cb4518f465b1bb3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structlava_1_1id_1a5a8dc3a1db21f6e29cb4518f465b1bb3" kindref="member">string_map</ref><sp/>=<sp/>std::map&lt;id,<sp/>string&gt;;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="structlava_1_1id_1a1caf19994deda21262dac41097b54de3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlava_1_1id_1a1caf19994deda21262dac41097b54de3" kindref="member">id</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="structlava_1_1id_1a18c9a54cc887849df0195bd9a3a03c2a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlava_1_1id_1a18c9a54cc887849df0195bd9a3a03c2a" kindref="member">id</ref>(<ref refid="types_8hpp_1a2a40eb7fccb1ebcfd58d6d4b7a078e5c" kindref="member">index</ref><sp/><ref refid="structlava_1_1id_1a8dd9c3002186af2d2d15d778238e488a" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="structlava_1_1id_1a8dd9c3002186af2d2d15d778238e488a" kindref="member">value</ref>(<ref refid="structlava_1_1id_1a8dd9c3002186af2d2d15d778238e488a" kindref="member">value</ref>)<sp/>{}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="structlava_1_1id_1a8dd9c3002186af2d2d15d778238e488a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="types_8hpp_1a2a40eb7fccb1ebcfd58d6d4b7a078e5c" kindref="member">index</ref><sp/><ref refid="structlava_1_1id_1a8dd9c3002186af2d2d15d778238e488a" kindref="member">value</ref><sp/>=<sp/><ref refid="types_8hpp_1a90deae5aeca0497b3b7e6c6316ac5105" kindref="member">no_index</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="structlava_1_1id_1ade2d3cd5e892b75c94c8028c75e72c71" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structlava_1_1id_1ade2d3cd5e892b75c94c8028c75e72c71" kindref="member">valid</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structlava_1_1id_1a8dd9c3002186af2d2d15d778238e488a" kindref="member">value</ref><sp/>!=<sp/><ref refid="types_8hpp_1a90deae5aeca0497b3b7e6c6316ac5105" kindref="member">no_index</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="structlava_1_1id_1ab9fd67ed78ec6d91cb691d850fe21815" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="structlava_1_1id_1ab9fd67ed78ec6d91cb691d850fe21815" kindref="member">to_string</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::to_string(<ref refid="structlava_1_1id_1a8dd9c3002186af2d2d15d778238e488a" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="structlava_1_1id_1a576815d2775ff7d95a746322d50f9c57" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structlava_1_1id_1a576815d2775ff7d95a746322d50f9c57" kindref="member">invalidate</ref>()<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="structlava_1_1id_1a11620ef3741fe0f21f47aa5d21da131f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="structlava_1_1id_1a11620ef3741fe0f21f47aa5d21da131f" kindref="member">operator&lt;=&gt;</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">};</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="id_8hpp_1a2d3147f9bf9e67cdbc6ac4a2f39d13b6" refkind="member"><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="id_8hpp_1a2d3147f9bf9e67cdbc6ac4a2f39d13b6" kindref="member">string_id_map</ref><sp/>=<sp/>std::map&lt;string,<sp/>id&gt;;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="id_8hpp_1aa17c8404456cc4dbfea9a0762a615de5" refkind="member"><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="id_8hpp_1aa17c8404456cc4dbfea9a0762a615de5" kindref="member">undef_id</ref><sp/>=<sp/><ref refid="structlava_1_1id" kindref="compound">id</ref>();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="id_8hpp_1afddb4bf323e954e08ff48b8514cb573e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/><ref refid="id_8hpp_1afddb4bf323e954e08ff48b8514cb573e" kindref="member">to_id</ref>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="types_8hpp_1a2a40eb7fccb1ebcfd58d6d4b7a078e5c" kindref="member">index</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(value)};</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="structlava_1_1ids" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlava_1_1ids" kindref="compound">ids</ref><sp/>{</highlight></codeline>
<codeline lineno="111" refid="structlava_1_1ids_1a6ac8629822301912e5ba3f9f787a1d40" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structlava_1_1ids" kindref="compound">ids</ref>&amp;<sp/><ref refid="structlava_1_1ids_1a6ac8629822301912e5ba3f9f787a1d40" kindref="member">instance</ref>()<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structlava_1_1ids" kindref="compound">ids</ref><sp/><ref refid="structlava_1_1ids" kindref="compound">ids</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structlava_1_1ids" kindref="compound">ids</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="structlava_1_1ids_1a7dddb91a681d2250c2b8f8f89e64eadb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/><ref refid="structlava_1_1ids_1a7dddb91a681d2250c2b8f8f89e64eadb" kindref="member">next</ref>()<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{++m_next};</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>std::atomic&lt;index&gt;<sp/>m_next<sp/>=<sp/>{<ref refid="types_8hpp_1a90deae5aeca0497b3b7e6c6316ac5105" kindref="member">no_index</ref>};</highlight></codeline>
<codeline lineno="127"><highlight class="normal">};</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="137" refid="id_8hpp_1a41a466c284bc15c02b328e694b8ea3da" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/><ref refid="id_8hpp_1a41a466c284bc15c02b328e694b8ea3da" kindref="member">add_id_map</ref>(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;id,<sp/>T&gt;&amp;<sp/>map)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>next<sp/>=<sp/><ref refid="structlava_1_1ids_1a6ac8629822301912e5ba3f9f787a1d40" kindref="member">ids::instance</ref>().<ref refid="structlava_1_1ids_1a7dddb91a681d2250c2b8f8f89e64eadb" kindref="member">next</ref>();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>map.emplace(next,<sp/>std::move(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>next;</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="152" refid="id_8hpp_1aecb510e0885f800ae029d60aa3c9e131" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="id_8hpp_1aecb510e0885f800ae029d60aa3c9e131" kindref="member">remove_id_map</ref>(<ref refid="structlava_1_1id_1a226df789a94177f765bdcaac2988eda0" kindref="member">id::ref</ref><sp/>object_id,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;id,<sp/>T&gt;&amp;<sp/>map)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!map.count(object_id))</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>map.erase(object_id);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="167" refid="structlava_1_1id__listeners" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlava_1_1id__listeners" kindref="compound">id_listeners</ref><sp/>{</highlight></codeline>
<codeline lineno="173" refid="structlava_1_1id__listeners_1acf4ca2ae9e29117f4e73aeaf193a18aa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/><ref refid="structlava_1_1id__listeners_1acf4ca2ae9e29117f4e73aeaf193a18aa" kindref="member">add</ref>(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T::func<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>listener)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="id_8hpp_1a41a466c284bc15c02b328e694b8ea3da" kindref="member">add_id_map</ref>(listener,<sp/>m_list);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="structlava_1_1id__listeners_1a6b0e6db05a239a3959f7f8587bc77a95" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structlava_1_1id__listeners_1a6b0e6db05a239a3959f7f8587bc77a95" kindref="member">remove</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">&amp;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="id_8hpp_1aecb510e0885f800ae029d60aa3c9e131" kindref="member">remove_id_map</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>m_list))</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">.invalidate();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="structlava_1_1id__listeners_1af4de5a83a8ddeb599bb464c2d6d185e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T::listeners<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="structlava_1_1id__listeners_1af4de5a83a8ddeb599bb464c2d6d185e1" kindref="member">get_list</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_list;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T::listeners<sp/>m_list<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="197"><highlight class="normal">};</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="structlava_1_1entity" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlava_1_1entity" kindref="compound">entity</ref><sp/>:<sp/><ref refid="structlava_1_1no__copy__no__move" kindref="compound">no_copy_no_move</ref>,<sp/><ref refid="structlava_1_1interface" kindref="compound">interface</ref><sp/>{</highlight></codeline>
<codeline lineno="206" refid="structlava_1_1entity_1a39066de3954adf265c61c28f0a3b521c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlava_1_1entity_1a39066de3954adf265c61c28f0a3b521c" kindref="member">entity</ref>()</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_id(<ref refid="structlava_1_1ids" kindref="compound">ids</ref>::<ref refid="structlava_1_1instance" kindref="compound">instance</ref>().next())<sp/>{}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="213" refid="structlava_1_1entity_1adfe6db1cb4d47cd34c36d3225e3571b7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlava_1_1id_1a226df789a94177f765bdcaac2988eda0" kindref="member">id::ref</ref><sp/><ref refid="structlava_1_1entity_1adfe6db1cb4d47cd34c36d3225e3571b7" kindref="member">get_id</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_id;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>m_id;</highlight></codeline>
<codeline lineno="220"><highlight class="normal">};</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Meta&gt;</highlight></codeline>
<codeline lineno="228" refid="structlava_1_1id__registry" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlava_1_1id__registry" kindref="compound">id_registry</ref><sp/>{</highlight></codeline>
<codeline lineno="230" refid="structlava_1_1id__registry_1aace8a32d21e2f7ae833d156314ec5234" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structlava_1_1id__registry_1aace8a32d21e2f7ae833d156314ec5234" kindref="member">s_ptr</ref><sp/>=<sp/>std::shared_ptr&lt;T&gt;;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="233" refid="structlava_1_1id__registry_1a485b50a5c6a7566d10d70675b002db70" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structlava_1_1id__registry_1a485b50a5c6a7566d10d70675b002db70" kindref="member">s_map</ref><sp/>=<sp/>std::map&lt;id,<sp/>s_ptr&gt;;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="236" refid="structlava_1_1id__registry_1aba3cc34d6a51590b48e6b611f48e04b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structlava_1_1id__registry_1aba3cc34d6a51590b48e6b611f48e04b2" kindref="member">meta_map</ref><sp/>=<sp/>std::map&lt;id,<sp/>Meta&gt;;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="243" refid="structlava_1_1id__registry_1a17f7cda234e50ef2b3baa76a4d3f4234" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/><ref refid="structlava_1_1id__registry_1a17f7cda234e50ef2b3baa76a4d3f4234" kindref="member">create</ref>(Meta<sp/>info<sp/>=<sp/>{})<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/>std::make_shared&lt;T&gt;();</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structlava_1_1id__registry_1a5b0bf79cb4c321728640787613735f3f" kindref="member">add</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>info);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">-&gt;get_id();</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="255" refid="structlava_1_1id__registry_1a5b0bf79cb4c321728640787613735f3f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structlava_1_1id__registry_1a5b0bf79cb4c321728640787613735f3f" kindref="member">add</ref>(<ref refid="structlava_1_1id__registry_1aace8a32d21e2f7ae833d156314ec5234" kindref="member">s_ptr</ref><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Meta<sp/>info<sp/>=<sp/>{})<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_objects.emplace(object-&gt;get_id(),<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_meta.emplace(object-&gt;get_id(),<sp/>info);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="structlava_1_1id__registry_1a1ef7f586431ea57e7e1cd8046ce4e5d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structlava_1_1id__registry_1a1ef7f586431ea57e7e1cd8046ce4e5d7" kindref="member">exists</ref>(<ref refid="structlava_1_1id_1a226df789a94177f765bdcaac2988eda0" kindref="member">id::ref</ref><sp/>object_id)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_objects.count(object_id);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="275" refid="structlava_1_1id__registry_1ad307cb6ec788483366d6388424d78241" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlava_1_1id__registry_1aace8a32d21e2f7ae833d156314ec5234" kindref="member">s_ptr</ref><sp/><ref refid="structlava_1_1id__registry_1ad307cb6ec788483366d6388424d78241" kindref="member">get</ref>(<ref refid="structlava_1_1id_1a226df789a94177f765bdcaac2988eda0" kindref="member">id::ref</ref><sp/>object_id)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_objects.at(object_id);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="284" refid="structlava_1_1id__registry_1aa44e8196ff58f515776f7395779f3860" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Meta<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="structlava_1_1id__registry_1aa44e8196ff58f515776f7395779f3860" kindref="member">get_meta</ref>(<ref refid="structlava_1_1id_1a226df789a94177f765bdcaac2988eda0" kindref="member">id::ref</ref><sp/>object_id)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_meta.at(object_id);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="292" refid="structlava_1_1id__registry_1a34fdce0eeaec6102cc6d6447b2c1306f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlava_1_1id__registry_1a485b50a5c6a7566d10d70675b002db70" kindref="member">s_map</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="structlava_1_1id__registry_1a34fdce0eeaec6102cc6d6447b2c1306f" kindref="member">get_all</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_objects;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="300" refid="structlava_1_1id__registry_1abe1072366fcd4133bf88fe572c437c02" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlava_1_1id__registry_1aba3cc34d6a51590b48e6b611f48e04b2" kindref="member">meta_map</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="structlava_1_1id__registry_1abe1072366fcd4133bf88fe572c437c02" kindref="member">get_all_meta</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_meta;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="310" refid="structlava_1_1id__registry_1a538de7261d27bb2f3618fd955a59cfce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structlava_1_1id__registry_1a538de7261d27bb2f3618fd955a59cfce" kindref="member">update</ref>(<ref refid="structlava_1_1id_1a226df789a94177f765bdcaac2988eda0" kindref="member">id::ref</ref><sp/>object_id,</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Meta<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>meta)<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structlava_1_1id__registry_1a1ef7f586431ea57e7e1cd8046ce4e5d7" kindref="member">exists</ref>(object_id))</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_meta.at(object_id)<sp/>=<sp/>meta;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="323" refid="structlava_1_1id__registry_1a5f050d3ebb14fb5e3d2ba1e3afad1468" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structlava_1_1id__registry_1a5f050d3ebb14fb5e3d2ba1e3afad1468" kindref="member">remove</ref>(<ref refid="structlava_1_1id_1a226df789a94177f765bdcaac2988eda0" kindref="member">id::ref</ref><sp/>object_id)<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_objects.erase(object_id);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_meta.erase(object_id);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="331" refid="structlava_1_1id__registry_1a46dc3451b22f67ca87c551529565ace6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structlava_1_1id__registry_1a46dc3451b22f67ca87c551529565ace6" kindref="member">clear</ref>()<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_objects.clear();</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_meta.clear();</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlava_1_1id__registry_1a485b50a5c6a7566d10d70675b002db70" kindref="member">s_map</ref><sp/>m_objects;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlava_1_1id__registry_1aba3cc34d6a51590b48e6b611f48e04b2" kindref="member">meta_map</ref><sp/>m_meta;</highlight></codeline>
<codeline lineno="342"><highlight class="normal">};</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>lava</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="liblava/core/id.hpp"/>
  </compounddef>
</doxygen>
