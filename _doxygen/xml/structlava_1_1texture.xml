<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="structlava_1_1texture" kind="struct" language="C++" prot="public">
    <compoundname>lava::texture</compoundname>
    <basecompoundref refid="structlava_1_1entity" prot="public" virt="non-virtual">lava::entity</basecompoundref>
    <includes refid="texture_8hpp" local="no">texture.hpp</includes>
    <innerclass refid="structlava_1_1texture_1_1layer" prot="public">lava::texture::layer</innerclass>
    <innerclass refid="structlava_1_1texture_1_1mip__level" prot="public">lava::texture::mip_level</innerclass>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structlava_1_1texture_1a0fd62a3dd974f573e5134ed498140360" prot="public" static="no">
        <type>std::shared_ptr&lt; <ref refid="structlava_1_1texture" kindref="compound">texture</ref> &gt;</type>
        <definition>using lava::texture::s_ptr =  std::shared_ptr&lt;texture&gt;</definition>
        <argsstring></argsstring>
        <name>s_ptr</name>
        <qualifiedname>lava::texture::s_ptr</qualifiedname>
        <briefdescription>
<para>Shared pointer to texture. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/texture.hpp" line="44" column="5" bodyfile="liblava/resource/texture.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structlava_1_1texture_1a4f1289f05f15caedb3b30ca00a7fcc98" prot="public" static="no">
        <type>std::map&lt; <ref refid="structlava_1_1id" kindref="compound">id</ref>, <ref refid="structlava_1_1texture_1a0fd62a3dd974f573e5134ed498140360" kindref="member">s_ptr</ref> &gt;</type>
        <definition>using lava::texture::s_map =  std::map&lt;id, s_ptr&gt;</definition>
        <argsstring></argsstring>
        <name>s_map</name>
        <qualifiedname>lava::texture::s_map</qualifiedname>
        <briefdescription>
<para>Map of textures. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/texture.hpp" line="47" column="5" bodyfile="liblava/resource/texture.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structlava_1_1texture_1a9f623437ccf7341685d2bb370934abc0" prot="public" static="no">
        <type>std::vector&lt; <ref refid="structlava_1_1texture_1a0fd62a3dd974f573e5134ed498140360" kindref="member">s_ptr</ref> &gt;</type>
        <definition>using lava::texture::s_list =  std::vector&lt;s_ptr&gt;</definition>
        <argsstring></argsstring>
        <name>s_list</name>
        <qualifiedname>lava::texture::s_list</qualifiedname>
        <briefdescription>
<para>List of textures. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/texture.hpp" line="50" column="5" bodyfile="liblava/resource/texture.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structlava_1_1texture_1a844b325f69587b48297a9efb84c25c2b" prot="private" static="no" mutable="no">
        <type><ref refid="structlava_1_1image_1a3268e2cf1bd3e74a86e42ddf8255c8bc" kindref="member">image::s_ptr</ref></type>
        <definition>image::s_ptr lava::texture::m_img</definition>
        <argsstring></argsstring>
        <name>m_img</name>
        <qualifiedname>lava::texture::m_img</qualifiedname>
        <briefdescription>
<para>Texture image. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/texture.hpp" line="175" column="18" bodyfile="liblava/resource/texture.hpp" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlava_1_1texture_1a73bde78f013919a8641f0dfb362851ee" prot="private" static="no" mutable="no">
        <type><ref refid="texture_8hpp_1abdcbbefe88a74313afdf6bf806ff3ec5" kindref="member">texture_type</ref></type>
        <definition>texture_type lava::texture::m_type</definition>
        <argsstring></argsstring>
        <name>m_type</name>
        <qualifiedname>lava::texture::m_type</qualifiedname>
        <initializer>= texture_type::none</initializer>
        <briefdescription>
<para>Texture type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/texture.hpp" line="178" column="18" bodyfile="liblava/resource/texture.hpp" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlava_1_1texture_1a6d869cab604d9dcc2732629d6fe8e80e" prot="private" static="no" mutable="no">
        <type><ref refid="structlava_1_1texture_1_1layer_1a672f13a6f7ce463ca428a16688aa2f15" kindref="member">layer::list</ref></type>
        <definition>layer::list lava::texture::m_layers</definition>
        <argsstring></argsstring>
        <name>m_layers</name>
        <qualifiedname>lava::texture::m_layers</qualifiedname>
        <briefdescription>
<para>List of layers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/texture.hpp" line="181" column="17" bodyfile="liblava/resource/texture.hpp" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlava_1_1texture_1a7d6998056f4020b05614a0702eeb1d3f" prot="private" static="no" mutable="no">
        <type>VkSampler</type>
        <definition>VkSampler lava::texture::m_sampler</definition>
        <argsstring></argsstring>
        <name>m_sampler</name>
        <qualifiedname>lava::texture::m_sampler</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
<para>Texture sampler. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/texture.hpp" line="184" column="15" bodyfile="liblava/resource/texture.hpp" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlava_1_1texture_1acf1e7907646102105be76971f9f61f8b" prot="private" static="no" mutable="no">
        <type>VkDescriptorImageInfo</type>
        <definition>VkDescriptorImageInfo lava::texture::m_descriptor</definition>
        <argsstring></argsstring>
        <name>m_descriptor</name>
        <qualifiedname>lava::texture::m_descriptor</qualifiedname>
        <initializer>= {}</initializer>
        <briefdescription>
<para>Descriptor image information. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/texture.hpp" line="187" column="27" bodyfile="liblava/resource/texture.hpp" bodystart="187" bodyend="187"/>
      </memberdef>
      <memberdef kind="variable" id="structlava_1_1texture_1a57a8a3dc75f33e52d77162afae6b1bf8" prot="private" static="no" mutable="no">
        <type><ref refid="structlava_1_1buffer_1a0f51976de6893d420896e888899858a1" kindref="member">buffer::s_ptr</ref></type>
        <definition>buffer::s_ptr lava::texture::m_upload_buffer</definition>
        <argsstring></argsstring>
        <name>m_upload_buffer</name>
        <qualifiedname>lava::texture::m_upload_buffer</qualifiedname>
        <briefdescription>
<para>Upload buffer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/texture.hpp" line="190" column="19" bodyfile="liblava/resource/texture.hpp" bodystart="190" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structlava_1_1texture_1a2d3f56792bc5ccbb9d5083d4aee7046e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlava_1_1texture_1a0fd62a3dd974f573e5134ed498140360" kindref="member">s_ptr</ref></type>
        <definition>static s_ptr lava::texture::make</definition>
        <argsstring>()</argsstring>
        <name>make</name>
        <qualifiedname>lava::texture::make</qualifiedname>
        <briefdescription>
<para>Make a new texture. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>s_ptr Shared pointer to texture </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/texture.hpp" line="81" column="18" bodyfile="liblava/resource/texture.hpp" bodystart="81" bodyend="83"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structlava_1_1texture_1ac7b1de3714be5aebacbe85fb72cdfd51" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>lava::texture::~texture</definition>
        <argsstring>()</argsstring>
        <name>~texture</name>
        <qualifiedname>lava::texture::~texture</qualifiedname>
        <briefdescription>
<para>Destroy the texture. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/texture.hpp" line="88" column="5" bodyfile="liblava/resource/texture.hpp" bodystart="88" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1texture_1a9505f537fddc7012f2a0ff68a77270e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lava::texture::create</definition>
        <argsstring>(device::ptr device, uv2 size, VkFormat format, layer::list const &amp;layers={}, texture_type type=texture_type::tex_2d)</argsstring>
        <name>create</name>
        <qualifiedname>lava::texture::create</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1device_1a6f7d378ef30e7bf1cd4fe208de859250" kindref="member">device::ptr</ref></type>
          <declname>device</declname>
        </param>
        <param>
          <type><ref refid="math_8hpp_1ad63e913ea06491bbe4e45588b35587df" kindref="member">uv2</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type>VkFormat</type>
          <declname>format</declname>
        </param>
        <param>
          <type><ref refid="structlava_1_1texture_1_1layer_1a672f13a6f7ce463ca428a16688aa2f15" kindref="member">layer::list</ref> const &amp;</type>
          <declname>layers</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type><ref refid="texture_8hpp_1abdcbbefe88a74313afdf6bf806ff3ec5" kindref="member">texture_type</ref></type>
          <declname>type</declname>
          <defval>texture_type::tex_2d</defval>
        </param>
        <briefdescription>
<para>Create a new texture. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>Vulkan device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Texture size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>Texture format </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>layers</parametername>
</parameternamelist>
<parameterdescription>
<para>List of layers </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Texture type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Create was successful or failed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/texture.hpp" line="101" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1texture_1ae1c3c2004a6ca02160b608a301b2e160" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lava::texture::destroy</definition>
        <argsstring>()</argsstring>
        <name>destroy</name>
        <qualifiedname>lava::texture::destroy</qualifiedname>
        <briefdescription>
<para>Destroy the texture. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/texture.hpp" line="110" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1texture_1af21a7526b89f40386a2934a9f5516e3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lava::texture::upload</definition>
        <argsstring>(void const *data, size_t data_size)</argsstring>
        <name>upload</name>
        <qualifiedname>lava::texture::upload</qualifiedname>
        <param>
          <type>void const *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
          <declname>data_size</declname>
        </param>
        <briefdescription>
<para>Upload data to texture. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to upload </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Upload was successful or failed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/texture.hpp" line="118" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1texture_1a8fc881feb8a3dd38b2e87c67536a6f92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lava::texture::stage</definition>
        <argsstring>(VkCommandBuffer cmd_buffer)</argsstring>
        <name>stage</name>
        <qualifiedname>lava::texture::stage</qualifiedname>
        <param>
          <type>VkCommandBuffer</type>
          <declname>cmd_buffer</declname>
        </param>
        <briefdescription>
<para>Stage the texture. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmd_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Command buffer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Stage was successful or failed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/texture.hpp" line="126" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1texture_1a6f228749adea20729c5b99fb23e76acb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lava::texture::destroy_upload_buffer</definition>
        <argsstring>()</argsstring>
        <name>destroy_upload_buffer</name>
        <qualifiedname>lava::texture::destroy_upload_buffer</qualifiedname>
        <briefdescription>
<para>Destroy the upload buffer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/texture.hpp" line="131" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1texture_1aedc9aff17541d60c54128803fa979dbc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>VkDescriptorImageInfo const *</type>
        <definition>VkDescriptorImageInfo const  * lava::texture::get_descriptor_info</definition>
        <argsstring>() const</argsstring>
        <name>get_descriptor_info</name>
        <qualifiedname>lava::texture::get_descriptor_info</qualifiedname>
        <briefdescription>
<para>Get the descriptor information. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>VkDescriptorImageInfo const* Descriptor image information </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/texture.hpp" line="137" column="33" bodyfile="liblava/resource/texture.hpp" bodystart="137" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1texture_1ad113baa58c4605aa1741b1ff5fe58b55" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlava_1_1image_1a3268e2cf1bd3e74a86e42ddf8255c8bc" kindref="member">image::s_ptr</ref></type>
        <definition>image::s_ptr lava::texture::get_image</definition>
        <argsstring>()</argsstring>
        <name>get_image</name>
        <qualifiedname>lava::texture::get_image</qualifiedname>
        <briefdescription>
<para>Get the image of the texture. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="structlava_1_1image_1a3268e2cf1bd3e74a86e42ddf8255c8bc" kindref="member">image::s_ptr</ref> Shared pointer to image </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/texture.hpp" line="145" column="18" bodyfile="liblava/resource/texture.hpp" bodystart="145" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1texture_1a35451506c759d57af0d2889bec873874" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="math_8hpp_1ad63e913ea06491bbe4e45588b35587df" kindref="member">uv2</ref></type>
        <definition>uv2 lava::texture::get_size</definition>
        <argsstring>() const</argsstring>
        <name>get_size</name>
        <qualifiedname>lava::texture::get_size</qualifiedname>
        <briefdescription>
<para>Get the size of the texture. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>uv2 Texture size </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/texture.hpp" line="153" column="9" bodyfile="liblava/resource/texture.hpp" bodystart="153" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1texture_1a4853a34186a384e6610c6881e761e724" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="texture_8hpp_1abdcbbefe88a74313afdf6bf806ff3ec5" kindref="member">texture_type</ref></type>
        <definition>texture_type lava::texture::get_type</definition>
        <argsstring>() const</argsstring>
        <name>get_type</name>
        <qualifiedname>lava::texture::get_type</qualifiedname>
        <briefdescription>
<para>Get the type of the texture. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>texture_type Texture type </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/texture.hpp" line="161" column="18" bodyfile="liblava/resource/texture.hpp" bodystart="161" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1texture_1a7754c37f1bd439f925625ef7a8233b36" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>VkFormat</type>
        <definition>VkFormat lava::texture::get_format</definition>
        <argsstring>() const</argsstring>
        <name>get_format</name>
        <qualifiedname>lava::texture::get_format</qualifiedname>
        <briefdescription>
<para>Get the format of the texture. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>VkFormat Texture format </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/texture.hpp" line="169" column="14" bodyfile="liblava/resource/texture.hpp" bodystart="169" bodyend="171"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Texture. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>lava::entity</label>
        <link refid="structlava_1_1entity"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>lava::interface</label>
        <link refid="structlava_1_1interface"/>
      </node>
      <node id="3">
        <label>lava::no_copy_no_move</label>
        <link refid="structlava_1_1no__copy__no__move"/>
      </node>
      <node id="1">
        <label>lava::texture</label>
        <link refid="structlava_1_1texture"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>lava::entity</label>
        <link refid="structlava_1_1entity"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>lava::interface</label>
        <link refid="structlava_1_1interface"/>
      </node>
      <node id="3">
        <label>lava::no_copy_no_move</label>
        <link refid="structlava_1_1no__copy__no__move"/>
      </node>
      <node id="1">
        <label>lava::texture</label>
        <link refid="structlava_1_1texture"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="liblava/resource/texture.hpp" line="42" column="1" bodyfile="liblava/resource/texture.hpp" bodystart="42" bodyend="191"/>
    <listofallmembers>
      <member refid="structlava_1_1texture_1a9505f537fddc7012f2a0ff68a77270e4" prot="public" virt="non-virtual"><scope>lava::texture</scope><name>create</name></member>
      <member refid="structlava_1_1texture_1ae1c3c2004a6ca02160b608a301b2e160" prot="public" virt="non-virtual"><scope>lava::texture</scope><name>destroy</name></member>
      <member refid="structlava_1_1texture_1a6f228749adea20729c5b99fb23e76acb" prot="public" virt="non-virtual"><scope>lava::texture</scope><name>destroy_upload_buffer</name></member>
      <member refid="structlava_1_1entity_1a39066de3954adf265c61c28f0a3b521c" prot="public" virt="non-virtual"><scope>lava::texture</scope><name>entity</name></member>
      <member refid="structlava_1_1texture_1aedc9aff17541d60c54128803fa979dbc" prot="public" virt="non-virtual"><scope>lava::texture</scope><name>get_descriptor_info</name></member>
      <member refid="structlava_1_1texture_1a7754c37f1bd439f925625ef7a8233b36" prot="public" virt="non-virtual"><scope>lava::texture</scope><name>get_format</name></member>
      <member refid="structlava_1_1entity_1adfe6db1cb4d47cd34c36d3225e3571b7" prot="public" virt="non-virtual"><scope>lava::texture</scope><name>get_id</name></member>
      <member refid="structlava_1_1texture_1ad113baa58c4605aa1741b1ff5fe58b55" prot="public" virt="non-virtual"><scope>lava::texture</scope><name>get_image</name></member>
      <member refid="structlava_1_1texture_1a35451506c759d57af0d2889bec873874" prot="public" virt="non-virtual"><scope>lava::texture</scope><name>get_size</name></member>
      <member refid="structlava_1_1texture_1a4853a34186a384e6610c6881e761e724" prot="public" virt="non-virtual"><scope>lava::texture</scope><name>get_type</name></member>
      <member refid="structlava_1_1texture_1acf1e7907646102105be76971f9f61f8b" prot="private" virt="non-virtual"><scope>lava::texture</scope><name>m_descriptor</name></member>
      <member refid="structlava_1_1texture_1a844b325f69587b48297a9efb84c25c2b" prot="private" virt="non-virtual"><scope>lava::texture</scope><name>m_img</name></member>
      <member refid="structlava_1_1texture_1a6d869cab604d9dcc2732629d6fe8e80e" prot="private" virt="non-virtual"><scope>lava::texture</scope><name>m_layers</name></member>
      <member refid="structlava_1_1texture_1a7d6998056f4020b05614a0702eeb1d3f" prot="private" virt="non-virtual"><scope>lava::texture</scope><name>m_sampler</name></member>
      <member refid="structlava_1_1texture_1a73bde78f013919a8641f0dfb362851ee" prot="private" virt="non-virtual"><scope>lava::texture</scope><name>m_type</name></member>
      <member refid="structlava_1_1texture_1a57a8a3dc75f33e52d77162afae6b1bf8" prot="private" virt="non-virtual"><scope>lava::texture</scope><name>m_upload_buffer</name></member>
      <member refid="structlava_1_1texture_1a2d3f56792bc5ccbb9d5083d4aee7046e" prot="public" virt="non-virtual"><scope>lava::texture</scope><name>make</name></member>
      <member refid="structlava_1_1no__copy__no__move_1ac97369ee1b1a70996ab3b9b24bf26432" prot="public" virt="non-virtual"><scope>lava::texture</scope><name>no_copy_no_move</name></member>
      <member refid="structlava_1_1no__copy__no__move_1a7942908379614cbb8d6260192d76347c" prot="public" virt="non-virtual"><scope>lava::texture</scope><name>no_copy_no_move</name></member>
      <member refid="structlava_1_1no__copy__no__move_1aa3211995685035c9ca4d0a3a7e4b5ac8" prot="public" virt="non-virtual"><scope>lava::texture</scope><name>operator=</name></member>
      <member refid="structlava_1_1texture_1a9f623437ccf7341685d2bb370934abc0" prot="public" virt="non-virtual"><scope>lava::texture</scope><name>s_list</name></member>
      <member refid="structlava_1_1texture_1a4f1289f05f15caedb3b30ca00a7fcc98" prot="public" virt="non-virtual"><scope>lava::texture</scope><name>s_map</name></member>
      <member refid="structlava_1_1texture_1a0fd62a3dd974f573e5134ed498140360" prot="public" virt="non-virtual"><scope>lava::texture</scope><name>s_ptr</name></member>
      <member refid="structlava_1_1texture_1a8fc881feb8a3dd38b2e87c67536a6f92" prot="public" virt="non-virtual"><scope>lava::texture</scope><name>stage</name></member>
      <member refid="structlava_1_1texture_1af21a7526b89f40386a2934a9f5516e3b" prot="public" virt="non-virtual"><scope>lava::texture</scope><name>upload</name></member>
      <member refid="structlava_1_1interface_1a9b6fe12d71f6da5dea89d44c62a5a046" prot="public" virt="virtual"><scope>lava::texture</scope><name>~interface</name></member>
      <member refid="structlava_1_1texture_1ac7b1de3714be5aebacbe85fb72cdfd51" prot="public" virt="non-virtual"><scope>lava::texture</scope><name>~texture</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
