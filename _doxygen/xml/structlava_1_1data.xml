<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="structlava_1_1data" kind="struct" language="C++" prot="public">
    <compoundname>lava::data</compoundname>
    <derivedcompoundref refid="structlava_1_1u__data" prot="public" virt="non-virtual">lava::u_data</derivedcompoundref>
    <includes refid="data_8hpp" local="no">data.hpp</includes>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="structlava_1_1data_1a6ab3e5b14785812270d21f32a1a904f7" prot="public" static="no" strong="yes">
        <type><ref refid="types_8hpp_1a2a40eb7fccb1ebcfd58d6d4b7a078e5c" kindref="member">index</ref></type>
        <name>mode</name>
        <qualifiedname>lava::data::mode</qualifiedname>
        <enumvalue id="structlava_1_1data_1a6ab3e5b14785812270d21f32a1a904f7a4287938886f3cbd66cc3c2b929a08932" prot="public">
          <name>alloc</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structlava_1_1data_1a6ab3e5b14785812270d21f32a1a904f7a42be2e9994fb2bd064325961bea7eb63" prot="public">
          <name>no_alloc</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Data modes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/data.hpp" line="133" column="5" bodyfile="liblava/core/data.hpp" bodystart="133" bodyend="136"/>
      </memberdef>
      <memberdef kind="typedef" id="structlava_1_1data_1af45fa6169fcd0b92cfa6692099fedc73" prot="public" static="no">
        <type><ref refid="structlava_1_1data" kindref="compound">data</ref> const  &amp;</type>
        <definition>using lava::data::ref =  data const&amp;</definition>
        <argsstring></argsstring>
        <name>ref</name>
        <qualifiedname>lava::data::ref</qualifiedname>
        <briefdescription>
<para>Reference to data wrapper. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/data.hpp" line="104" column="5" bodyfile="liblava/core/data.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structlava_1_1data_1a58e5faa7a8f9dd34567c29d6e1b891f8" prot="public" static="no">
        <type>char *</type>
        <definition>using lava::data::ptr =  char*</definition>
        <argsstring></argsstring>
        <name>ptr</name>
        <qualifiedname>lava::data::ptr</qualifiedname>
        <briefdescription>
<para>Data pointer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/data.hpp" line="107" column="5" bodyfile="liblava/core/data.hpp" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structlava_1_1data_1adbf9c722e987bd8211e40ecf58aacc09" prot="public" static="no">
        <type>char const  *</type>
        <definition>using lava::data::c_ptr =  char const*</definition>
        <argsstring></argsstring>
        <name>c_ptr</name>
        <qualifiedname>lava::data::c_ptr</qualifiedname>
        <briefdescription>
<para>Const data pointer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/data.hpp" line="110" column="5" bodyfile="liblava/core/data.hpp" bodystart="110" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structlava_1_1data_1a7641eb0243b7678841543af9cc04ba1a" prot="public" static="no" mutable="no">
        <type><ref refid="structlava_1_1data_1a58e5faa7a8f9dd34567c29d6e1b891f8" kindref="member">ptr</ref></type>
        <definition>ptr lava::data::addr</definition>
        <argsstring></argsstring>
        <name>addr</name>
        <qualifiedname>lava::data::addr</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
<para>Pointer address. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/data.hpp" line="197" column="9" bodyfile="liblava/core/data.hpp" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlava_1_1data_1a1e89c4d1cfa7181022f3e7beefea9d04" prot="public" static="no" mutable="no">
        <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
        <definition>size_t lava::data::size</definition>
        <argsstring></argsstring>
        <name>size</name>
        <qualifiedname>lava::data::size</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
<para>Size of data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/data.hpp" line="200" column="12" bodyfile="liblava/core/data.hpp" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlava_1_1data_1a3d158ca810846638f6117ae7f8be8c99" prot="public" static="no" mutable="no">
        <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
        <definition>size_t lava::data::alignment</definition>
        <argsstring></argsstring>
        <name>alignment</name>
        <qualifiedname>lava::data::alignment</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
<para>Data alignment. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/data.hpp" line="203" column="12" bodyfile="liblava/core/data.hpp" bodystart="203" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structlava_1_1data_1a9b5bf1221ef9333e57fe02debca35f79" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlava_1_1data_1a58e5faa7a8f9dd34567c29d6e1b891f8" kindref="member">ptr</ref></type>
        <definition>static ptr lava::data::as_ptr</definition>
        <argsstring>(auto *value)</argsstring>
        <name>as_ptr</name>
        <qualifiedname>lava::data::as_ptr</qualifiedname>
        <param>
          <type>auto *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Cast to data pointer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to cast </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ptr Data pointer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/data.hpp" line="117" column="23" bodyfile="liblava/core/data.hpp" bodystart="117" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1data_1a666e23854b354d99170d77c483f208eb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlava_1_1data_1adbf9c722e987bd8211e40ecf58aacc09" kindref="member">c_ptr</ref></type>
        <definition>static c_ptr lava::data::as_c_ptr</definition>
        <argsstring>(auto *value)</argsstring>
        <name>as_c_ptr</name>
        <qualifiedname>lava::data::as_c_ptr</qualifiedname>
        <param>
          <type>auto *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Cast to const data pointer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to cast </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>c_ptr Const data pointer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/data.hpp" line="126" column="25" bodyfile="liblava/core/data.hpp" bodystart="126" bodyend="128"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structlava_1_1data_1a8671f49149a11b46b0ca3f54d3be29d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>lava::data::data</definition>
        <argsstring>()=default</argsstring>
        <name>data</name>
        <qualifiedname>lava::data::data</qualifiedname>
        <briefdescription>
<para>Construct a new data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/data.hpp" line="141" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1data_1a2592093d22ac0752af9a50b92f681678" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>lava::data::data</definition>
        <argsstring>(auto *addr, size_t size)</argsstring>
        <name>data</name>
        <qualifiedname>lava::data::data</qualifiedname>
        <param>
          <type>auto *</type>
          <declname>addr</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Construct a new data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Data pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/data.hpp" line="148" column="5" bodyfile="liblava/core/data.hpp" bodystart="148" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1data_1ac6d483a2fb20c2a9c8dbfa28bb9fba39" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool lava::data::set</definition>
        <argsstring>(size_t length, mode mode=mode::alloc)</argsstring>
        <name>set</name>
        <qualifiedname>lava::data::set</qualifiedname>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
          <declname>length</declname>
        </param>
        <param>
          <type><ref refid="structlava_1_1data_1a6ab3e5b14785812270d21f32a1a904f7" kindref="member">mode</ref></type>
          <declname>mode</declname>
          <defval>mode::alloc</defval>
        </param>
        <briefdescription>
<para>Set and allocate data by length. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Data mode </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Allocate was successful or failed (mode: alloc) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/data.hpp" line="157" column="10" bodyfile="liblava/core/data.hpp" bodystart="157" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1data_1abcf807ad35ff941ca2c33775ee6d092f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool lava::data::allocate</definition>
        <argsstring>()</argsstring>
        <name>allocate</name>
        <qualifiedname>lava::data::allocate</qualifiedname>
        <briefdescription>
<para>Allocate data. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Allocate was successful or failed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/data.hpp" line="172" column="10" bodyfile="liblava/core/data.hpp" bodystart="172" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1data_1affcd2fdf6ce4356fb443ac2e6f43eba1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::data::deallocate</definition>
        <argsstring>()</argsstring>
        <name>deallocate</name>
        <qualifiedname>lava::data::deallocate</qualifiedname>
        <briefdescription>
<para>Deallocate data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/data.hpp" line="180" column="10" bodyfile="liblava/core/data.hpp" bodystart="180" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1data_1ab6a1acf184e4fc936ffbd77420c84c78" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlava_1_1data_1a58e5faa7a8f9dd34567c29d6e1b891f8" kindref="member">ptr</ref></type>
        <definition>ptr lava::data::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <qualifiedname>lava::data::end</qualifiedname>
        <briefdescription>
<para>Pointer to end of data. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>ptr Pointer to end </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/data.hpp" line="192" column="9" bodyfile="liblava/core/data.hpp" bodystart="192" bodyend="194"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Data wrapper. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>lava::data</label>
        <link refid="structlava_1_1data"/>
      </node>
      <node id="3">
        <label>lava::file_data</label>
        <link refid="structlava_1_1file__data"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>lava::u_data</label>
        <link refid="structlava_1_1u__data"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="liblava/core/data.hpp" line="102" column="1" bodyfile="liblava/core/data.hpp" bodystart="102" bodyend="204"/>
    <listofallmembers>
      <member refid="structlava_1_1data_1a7641eb0243b7678841543af9cc04ba1a" prot="public" virt="non-virtual"><scope>lava::data</scope><name>addr</name></member>
      <member refid="structlava_1_1data_1a3d158ca810846638f6117ae7f8be8c99" prot="public" virt="non-virtual"><scope>lava::data</scope><name>alignment</name></member>
      <member refid="structlava_1_1data_1abcf807ad35ff941ca2c33775ee6d092f" prot="public" virt="non-virtual"><scope>lava::data</scope><name>allocate</name></member>
      <member refid="structlava_1_1data_1a666e23854b354d99170d77c483f208eb" prot="public" virt="non-virtual"><scope>lava::data</scope><name>as_c_ptr</name></member>
      <member refid="structlava_1_1data_1a9b5bf1221ef9333e57fe02debca35f79" prot="public" virt="non-virtual"><scope>lava::data</scope><name>as_ptr</name></member>
      <member refid="structlava_1_1data_1adbf9c722e987bd8211e40ecf58aacc09" prot="public" virt="non-virtual"><scope>lava::data</scope><name>c_ptr</name></member>
      <member refid="structlava_1_1data_1a8671f49149a11b46b0ca3f54d3be29d6" prot="public" virt="non-virtual"><scope>lava::data</scope><name>data</name></member>
      <member refid="structlava_1_1data_1a2592093d22ac0752af9a50b92f681678" prot="public" virt="non-virtual"><scope>lava::data</scope><name>data</name></member>
      <member refid="structlava_1_1data_1affcd2fdf6ce4356fb443ac2e6f43eba1" prot="public" virt="non-virtual"><scope>lava::data</scope><name>deallocate</name></member>
      <member refid="structlava_1_1data_1ab6a1acf184e4fc936ffbd77420c84c78" prot="public" virt="non-virtual"><scope>lava::data</scope><name>end</name></member>
      <member refid="structlava_1_1data_1a6ab3e5b14785812270d21f32a1a904f7" prot="public" virt="non-virtual"><scope>lava::data</scope><name>mode</name></member>
      <member refid="structlava_1_1data_1a58e5faa7a8f9dd34567c29d6e1b891f8" prot="public" virt="non-virtual"><scope>lava::data</scope><name>ptr</name></member>
      <member refid="structlava_1_1data_1af45fa6169fcd0b92cfa6692099fedc73" prot="public" virt="non-virtual"><scope>lava::data</scope><name>ref</name></member>
      <member refid="structlava_1_1data_1ac6d483a2fb20c2a9c8dbfa28bb9fba39" prot="public" virt="non-virtual"><scope>lava::data</scope><name>set</name></member>
      <member refid="structlava_1_1data_1a1e89c4d1cfa7181022f3e7beefea9d04" prot="public" virt="non-virtual"><scope>lava::data</scope><name>size</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
