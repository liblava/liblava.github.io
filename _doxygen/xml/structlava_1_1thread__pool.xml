<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="structlava_1_1thread__pool" kind="struct" language="C++" prot="public">
    <compoundname>lava::thread_pool</compoundname>
    <includes refid="thread_8hpp" local="no">thread.hpp</includes>
    <innerclass refid="structlava_1_1thread__pool_1_1worker" prot="private">lava::thread_pool::worker</innerclass>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structlava_1_1thread__pool_1aaf79c28a670fa80d6dd01c8c22cec577" prot="public" static="no">
        <type>std::function&lt; void(<ref refid="structlava_1_1id_1a226df789a94177f765bdcaac2988eda0" kindref="member">id::ref</ref>)&gt;</type>
        <definition>using lava::thread_pool::task =  std::function&lt;void(id::ref)&gt;</definition>
        <argsstring></argsstring>
        <name>task</name>
        <qualifiedname>lava::thread_pool::task</qualifiedname>
        <briefdescription>
<para>Task function (with thread id) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/thread.hpp" line="48" column="5" bodyfile="liblava/util/thread.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structlava_1_1thread__pool_1a68a91d6e8af2cc942d72367327a249a1" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::thread &gt;</type>
        <definition>std::vector&lt;std::thread&gt; lava::thread_pool::m_workers</definition>
        <argsstring></argsstring>
        <name>m_workers</name>
        <qualifiedname>lava::thread_pool::m_workers</qualifiedname>
        <briefdescription>
<para>List of workers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/thread.hpp" line="127" column="17" bodyfile="liblava/util/thread.hpp" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlava_1_1thread__pool_1a6b352c8df7e925721547d73e2048a008" prot="private" static="no" mutable="no">
        <type>std::deque&lt; <ref refid="structlava_1_1thread__pool_1aaf79c28a670fa80d6dd01c8c22cec577" kindref="member">task</ref> &gt;</type>
        <definition>std::deque&lt;task&gt; lava::thread_pool::m_tasks</definition>
        <argsstring></argsstring>
        <name>m_tasks</name>
        <qualifiedname>lava::thread_pool::m_tasks</qualifiedname>
        <briefdescription>
<para>List of tasks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/thread.hpp" line="130" column="16" bodyfile="liblava/util/thread.hpp" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlava_1_1thread__pool_1a001eabfe9b0508273f4795566fd7d34b" prot="private" static="no" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex lava::thread_pool::m_queue_mutex</definition>
        <argsstring></argsstring>
        <name>m_queue_mutex</name>
        <qualifiedname>lava::thread_pool::m_queue_mutex</qualifiedname>
        <briefdescription>
<para>Queue mutex. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/thread.hpp" line="133" column="16" bodyfile="liblava/util/thread.hpp" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlava_1_1thread__pool_1a67957783cac0e5105613cf0d8af9a437" prot="private" static="no" mutable="no">
        <type>std::condition_variable</type>
        <definition>std::condition_variable lava::thread_pool::m_condition</definition>
        <argsstring></argsstring>
        <name>m_condition</name>
        <qualifiedname>lava::thread_pool::m_condition</qualifiedname>
        <briefdescription>
<para>Condition variable. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/thread.hpp" line="136" column="29" bodyfile="liblava/util/thread.hpp" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlava_1_1thread__pool_1a97cfb5951c5585f3bcc1d8f54e6060ee" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool lava::thread_pool::m_stop</definition>
        <argsstring></argsstring>
        <name>m_stop</name>
        <qualifiedname>lava::thread_pool::m_stop</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
<para>Stop state. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/thread.hpp" line="139" column="10" bodyfile="liblava/util/thread.hpp" bodystart="139" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structlava_1_1thread__pool_1a804b2a22d7afe05579d7837864a453a5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::thread_pool::setup</definition>
        <argsstring>(ui32 count=2)</argsstring>
        <name>setup</name>
        <qualifiedname>lava::thread_pool::setup</qualifiedname>
        <param>
          <type><ref refid="types_8hpp_1ae3c4bbc50dd4583ab0df2c24c49a49c9" kindref="member">ui32</ref></type>
          <declname>count</declname>
          <defval>2</defval>
        </param>
        <briefdescription>
<para>Set up the thread pool. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of threads </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/thread.hpp" line="54" column="10" bodyfile="liblava/util/thread.hpp" bodystart="54" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1thread__pool_1a12a8efbcdeb045ba87858820c20905a4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::thread_pool::teardown</definition>
        <argsstring>()</argsstring>
        <name>teardown</name>
        <qualifiedname>lava::thread_pool::teardown</qualifiedname>
        <briefdescription>
<para>Tear down the thread pool. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/thread.hpp" line="62" column="10" bodyfile="liblava/util/thread.hpp" bodystart="62" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1thread__pool_1a13d697b28f3f470d066651674a74cd1d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::thread_pool::enqueue</definition>
        <argsstring>(auto f)</argsstring>
        <name>enqueue</name>
        <qualifiedname>lava::thread_pool::enqueue</qualifiedname>
        <param>
          <type>auto</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Enqueue a task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>Task function </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/thread.hpp" line="76" column="10" bodyfile="liblava/util/thread.hpp" bodystart="76" bodyend="82"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Thread pool. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="liblava/util/thread.hpp" line="46" column="1" bodyfile="liblava/util/thread.hpp" bodystart="46" bodyend="140"/>
    <listofallmembers>
      <member refid="structlava_1_1thread__pool_1a13d697b28f3f470d066651674a74cd1d" prot="public" virt="non-virtual"><scope>lava::thread_pool</scope><name>enqueue</name></member>
      <member refid="structlava_1_1thread__pool_1a67957783cac0e5105613cf0d8af9a437" prot="private" virt="non-virtual"><scope>lava::thread_pool</scope><name>m_condition</name></member>
      <member refid="structlava_1_1thread__pool_1a001eabfe9b0508273f4795566fd7d34b" prot="private" virt="non-virtual"><scope>lava::thread_pool</scope><name>m_queue_mutex</name></member>
      <member refid="structlava_1_1thread__pool_1a97cfb5951c5585f3bcc1d8f54e6060ee" prot="private" virt="non-virtual"><scope>lava::thread_pool</scope><name>m_stop</name></member>
      <member refid="structlava_1_1thread__pool_1a6b352c8df7e925721547d73e2048a008" prot="private" virt="non-virtual"><scope>lava::thread_pool</scope><name>m_tasks</name></member>
      <member refid="structlava_1_1thread__pool_1a68a91d6e8af2cc942d72367327a249a1" prot="private" virt="non-virtual"><scope>lava::thread_pool</scope><name>m_workers</name></member>
      <member refid="structlava_1_1thread__pool_1a804b2a22d7afe05579d7837864a453a5" prot="public" virt="non-virtual"><scope>lava::thread_pool</scope><name>setup</name></member>
      <member refid="structlava_1_1thread__pool_1aaf79c28a670fa80d6dd01c8c22cec577" prot="public" virt="non-virtual"><scope>lava::thread_pool</scope><name>task</name></member>
      <member refid="structlava_1_1thread__pool_1a12a8efbcdeb045ba87858820c20905a4" prot="public" virt="non-virtual"><scope>lava::thread_pool</scope><name>teardown</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
