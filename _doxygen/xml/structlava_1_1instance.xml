<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="structlava_1_1instance" kind="struct" language="C++" prot="public">
    <compoundname>lava::instance</compoundname>
    <basecompoundref refid="structlava_1_1no__copy__no__move" prot="public" virt="non-virtual">lava::no_copy_no_move</basecompoundref>
    <includes refid="instance_8hpp" local="no">instance.hpp</includes>
    <innerclass refid="structlava_1_1instance_1_1create__param" prot="public">lava::instance::create_param</innerclass>
    <innerclass refid="structlava_1_1instance_1_1debug__config" prot="public">lava::instance::debug_config</innerclass>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structlava_1_1instance_1af2828f3502a9752df5309d7c89b19a55" prot="private" static="no" mutable="no">
        <type>VkInstance</type>
        <definition>VkInstance lava::instance::m_vk_instance</definition>
        <argsstring></argsstring>
        <name>m_vk_instance</name>
        <qualifiedname>lava::instance::m_vk_instance</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
<para>Vulkan instance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/instance.hpp" line="176" column="16" bodyfile="liblava/base/instance.hpp" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlava_1_1instance_1a4cfa93715de1706dba286a1758e05623" prot="private" static="no" mutable="no">
        <type><ref refid="structlava_1_1physical__device_1af97370e82248ac90728d234353f3bd06" kindref="member">physical_device::s_list</ref></type>
        <definition>physical_device::s_list lava::instance::m_physical_devices</definition>
        <argsstring></argsstring>
        <name>m_physical_devices</name>
        <qualifiedname>lava::instance::m_physical_devices</qualifiedname>
        <briefdescription>
<para>List of all physical devices. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/instance.hpp" line="179" column="29" bodyfile="liblava/base/instance.hpp" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlava_1_1instance_1a5bfa3a098ac5a00df1741f8d8493d157" prot="private" static="no" mutable="no">
        <type><ref refid="structlava_1_1instance_1_1debug__config" kindref="compound">debug_config</ref></type>
        <definition>debug_config lava::instance::m_debug</definition>
        <argsstring></argsstring>
        <name>m_debug</name>
        <qualifiedname>lava::instance::m_debug</qualifiedname>
        <briefdescription>
<para>Debug configuration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/instance.hpp" line="182" column="18" bodyfile="liblava/base/instance.hpp" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlava_1_1instance_1a824200bf7f6afd37f6eca5c495aa603f" prot="private" static="no" mutable="no">
        <type><ref refid="structlava_1_1instance__info" kindref="compound">instance_info</ref></type>
        <definition>instance_info lava::instance::m_info</definition>
        <argsstring></argsstring>
        <name>m_info</name>
        <qualifiedname>lava::instance::m_info</qualifiedname>
        <briefdescription>
<para>Instance information. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/instance.hpp" line="185" column="19" bodyfile="liblava/base/instance.hpp" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlava_1_1instance_1ab08fd07225fa8e0f8080c3a33214bc18" prot="private" static="no" mutable="no">
        <type>VkDebugUtilsMessengerEXT</type>
        <definition>VkDebugUtilsMessengerEXT lava::instance::m_debug_messenger</definition>
        <argsstring></argsstring>
        <name>m_debug_messenger</name>
        <qualifiedname>lava::instance::m_debug_messenger</qualifiedname>
        <initializer>= VK_NULL_HANDLE</initializer>
        <briefdescription>
<para>Debug utils messenger. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/instance.hpp" line="188" column="30" bodyfile="liblava/base/instance.hpp" bodystart="188" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structlava_1_1instance_1ae2188212d1ba1219f5570b0860377613" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlava_1_1instance" kindref="compound">instance</ref> &amp;</type>
        <definition>static instance &amp; lava::instance::singleton</definition>
        <argsstring>()</argsstring>
        <name>singleton</name>
        <qualifiedname>lava::instance::singleton</qualifiedname>
        <briefdescription>
<para>Instance singleton. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>instance&amp; Instance </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/instance.hpp" line="79" column="21" bodyfile="liblava/base/instance.hpp" bodystart="79" bodyend="82"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structlava_1_1instance_1a54427f9f67da9c7cbc4d2a9e526a3e70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lava::instance::create</definition>
        <argsstring>(create_param &amp;param, debug_config::ref debug, instance_info::ref info)</argsstring>
        <name>create</name>
        <qualifiedname>lava::instance::create</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1instance_1_1create__param" kindref="compound">create_param</ref> &amp;</type>
          <declname>param</declname>
        </param>
        <param>
          <type><ref refid="structlava_1_1instance_1_1debug__config_1a1809669e55b5c23595b8f34a5a4c78a6" kindref="member">debug_config::ref</ref></type>
          <declname>debug</declname>
        </param>
        <param>
          <type><ref refid="structlava_1_1instance__info_1abe480a9712d125f4af32e90a350e2988" kindref="member">instance_info::ref</ref></type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>Create a new instance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>param</parametername>
</parameternamelist>
<parameterdescription>
<para>Create parameters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>debug</parametername>
</parameternamelist>
<parameterdescription>
<para>Debug configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>Instance information </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Create was successful or failed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/instance.hpp" line="91" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1instance_1aa68e1aa8933ce3df5170feca2164737b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lava::instance::destroy</definition>
        <argsstring>()</argsstring>
        <name>destroy</name>
        <qualifiedname>lava::instance::destroy</qualifiedname>
        <briefdescription>
<para>Destroy the instance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/instance.hpp" line="98" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1instance_1aaada1c479de995a87fc41fab4620f688" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlava_1_1physical__device_1af97370e82248ac90728d234353f3bd06" kindref="member">physical_device::s_list</ref> const &amp;</type>
        <definition>physical_device::s_list const  &amp; lava::instance::get_physical_devices</definition>
        <argsstring>() const</argsstring>
        <name>get_physical_devices</name>
        <qualifiedname>lava::instance::get_physical_devices</qualifiedname>
        <briefdescription>
<para>Get the physical devices. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="structlava_1_1physical__device_1af97370e82248ac90728d234353f3bd06" kindref="member">physical_device::s_list</ref> const&amp; List of physical devices </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/instance.hpp" line="104" column="35" bodyfile="liblava/base/instance.hpp" bodystart="104" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1instance_1affb637336615a523044f24506b47d1c7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlava_1_1physical__device_1a6ed241d5a685257e826434c5e393bf1b" kindref="member">physical_device::ref</ref></type>
        <definition>physical_device::ref lava::instance::get_first_physical_device</definition>
        <argsstring>() const</argsstring>
        <name>get_first_physical_device</name>
        <qualifiedname>lava::instance::get_first_physical_device</qualifiedname>
        <briefdescription>
<para>Get the first physical device. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="structlava_1_1physical__device_1a6ed241d5a685257e826434c5e393bf1b" kindref="member">physical_device::ref</ref> Physcial device </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/instance.hpp" line="112" column="26" bodyfile="liblava/base/instance.hpp" bodystart="112" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1instance_1a602e22b1bc2ab77e5bdfd6fa2b503cad" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>VkInstance</type>
        <definition>VkInstance lava::instance::get</definition>
        <argsstring>() const</argsstring>
        <name>get</name>
        <qualifiedname>lava::instance::get</qualifiedname>
        <briefdescription>
<para>Get the Vulkan instance. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>VkInstance Vulkan instance </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/instance.hpp" line="120" column="16" bodyfile="liblava/base/instance.hpp" bodystart="120" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1instance_1a37471bcd43d6038145cc9a0f07085314" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlava_1_1instance_1_1debug__config_1a1809669e55b5c23595b8f34a5a4c78a6" kindref="member">debug_config::ref</ref></type>
        <definition>debug_config::ref lava::instance::get_debug_config</definition>
        <argsstring>() const</argsstring>
        <name>get_debug_config</name>
        <qualifiedname>lava::instance::get_debug_config</qualifiedname>
        <briefdescription>
<para>Get the debug configuration. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="structlava_1_1instance_1_1debug__config_1a1809669e55b5c23595b8f34a5a4c78a6" kindref="member">debug_config::ref</ref> Debug configuration </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/instance.hpp" line="128" column="23" bodyfile="liblava/base/instance.hpp" bodystart="128" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1instance_1aa7e50df024aa54a8695ca8820262a69f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlava_1_1instance__info_1abe480a9712d125f4af32e90a350e2988" kindref="member">instance_info::ref</ref></type>
        <definition>instance_info::ref lava::instance::get_info</definition>
        <argsstring>() const</argsstring>
        <name>get_info</name>
        <qualifiedname>lava::instance::get_info</qualifiedname>
        <briefdescription>
<para>Get the instance information. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="structlava_1_1instance__info_1abe480a9712d125f4af32e90a350e2988" kindref="member">instance_info::ref</ref> Instance information </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/instance.hpp" line="136" column="24" bodyfile="liblava/base/instance.hpp" bodystart="136" bodyend="138"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="structlava_1_1instance_1a9eeee99a34b6998b1c5de228800db2ff" prot="private" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>lava::instance::instance</definition>
        <argsstring>()=default</argsstring>
        <name>instance</name>
        <qualifiedname>lava::instance::instance</qualifiedname>
        <briefdescription>
<para>Construct a new instance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/instance.hpp" line="144" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1instance_1a051fab78c893d441f7d9eb5cb56f9aba" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>lava::instance::~instance</definition>
        <argsstring>()</argsstring>
        <name>~instance</name>
        <qualifiedname>lava::instance::~instance</qualifiedname>
        <briefdescription>
<para>Destroy the instance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/instance.hpp" line="149" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1instance_1a77b69865d2ad08cf9e674fa04b249dfa" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lava::instance::check_debug</definition>
        <argsstring>(create_param &amp;param) const</argsstring>
        <name>check_debug</name>
        <qualifiedname>lava::instance::check_debug</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1instance_1_1create__param" kindref="compound">create_param</ref> &amp;</type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>Check the debug configuration and create parameters. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>param</parametername>
</parameternamelist>
<parameterdescription>
<para>Create parameters </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Check was successful or failed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/instance.hpp" line="156" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1instance_1aac50040eb25fccffd6befe808f744d4c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lava::instance::enumerate_physical_devices</definition>
        <argsstring>()</argsstring>
        <name>enumerate_physical_devices</name>
        <qualifiedname>lava::instance::enumerate_physical_devices</qualifiedname>
        <briefdescription>
<para>Enumerate all available physical devices. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Enumerate was successful or failed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/instance.hpp" line="162" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1instance_1a9a741449cb209137e97c7b950c09ce20" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lava::instance::create_debug_messenger</definition>
        <argsstring>()</argsstring>
        <name>create_debug_messenger</name>
        <qualifiedname>lava::instance::create_debug_messenger</qualifiedname>
        <briefdescription>
<para>Create a debug messenger. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Create was successful or failed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/instance.hpp" line="168" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1instance_1a21e26bb14f491734118841a35ee54b0f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lava::instance::destroy_debug_messenger</definition>
        <argsstring>()</argsstring>
        <name>destroy_debug_messenger</name>
        <qualifiedname>lava::instance::destroy_debug_messenger</qualifiedname>
        <briefdescription>
<para>Destroy the debug messenger. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/instance.hpp" line="173" column="10"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Vulkan instance. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>lava::instance</label>
        <link refid="structlava_1_1instance"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>lava::no_copy_no_move</label>
        <link refid="structlava_1_1no__copy__no__move"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>lava::instance</label>
        <link refid="structlava_1_1instance"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>lava::no_copy_no_move</label>
        <link refid="structlava_1_1no__copy__no__move"/>
      </node>
    </collaborationgraph>
    <location file="liblava/base/instance.hpp" line="40" column="1" bodyfile="liblava/base/instance.hpp" bodystart="40" bodyend="189"/>
    <listofallmembers>
      <member refid="structlava_1_1instance_1a77b69865d2ad08cf9e674fa04b249dfa" prot="private" virt="non-virtual"><scope>lava::instance</scope><name>check_debug</name></member>
      <member refid="structlava_1_1instance_1a54427f9f67da9c7cbc4d2a9e526a3e70" prot="public" virt="non-virtual"><scope>lava::instance</scope><name>create</name></member>
      <member refid="structlava_1_1instance_1a9a741449cb209137e97c7b950c09ce20" prot="private" virt="non-virtual"><scope>lava::instance</scope><name>create_debug_messenger</name></member>
      <member refid="structlava_1_1instance_1aa68e1aa8933ce3df5170feca2164737b" prot="public" virt="non-virtual"><scope>lava::instance</scope><name>destroy</name></member>
      <member refid="structlava_1_1instance_1a21e26bb14f491734118841a35ee54b0f" prot="private" virt="non-virtual"><scope>lava::instance</scope><name>destroy_debug_messenger</name></member>
      <member refid="structlava_1_1instance_1aac50040eb25fccffd6befe808f744d4c" prot="private" virt="non-virtual"><scope>lava::instance</scope><name>enumerate_physical_devices</name></member>
      <member refid="structlava_1_1instance_1a602e22b1bc2ab77e5bdfd6fa2b503cad" prot="public" virt="non-virtual"><scope>lava::instance</scope><name>get</name></member>
      <member refid="structlava_1_1instance_1a37471bcd43d6038145cc9a0f07085314" prot="public" virt="non-virtual"><scope>lava::instance</scope><name>get_debug_config</name></member>
      <member refid="structlava_1_1instance_1affb637336615a523044f24506b47d1c7" prot="public" virt="non-virtual"><scope>lava::instance</scope><name>get_first_physical_device</name></member>
      <member refid="structlava_1_1instance_1aa7e50df024aa54a8695ca8820262a69f" prot="public" virt="non-virtual"><scope>lava::instance</scope><name>get_info</name></member>
      <member refid="structlava_1_1instance_1aaada1c479de995a87fc41fab4620f688" prot="public" virt="non-virtual"><scope>lava::instance</scope><name>get_physical_devices</name></member>
      <member refid="structlava_1_1instance_1a9eeee99a34b6998b1c5de228800db2ff" prot="private" virt="non-virtual"><scope>lava::instance</scope><name>instance</name></member>
      <member refid="structlava_1_1instance_1a5bfa3a098ac5a00df1741f8d8493d157" prot="private" virt="non-virtual"><scope>lava::instance</scope><name>m_debug</name></member>
      <member refid="structlava_1_1instance_1ab08fd07225fa8e0f8080c3a33214bc18" prot="private" virt="non-virtual"><scope>lava::instance</scope><name>m_debug_messenger</name></member>
      <member refid="structlava_1_1instance_1a824200bf7f6afd37f6eca5c495aa603f" prot="private" virt="non-virtual"><scope>lava::instance</scope><name>m_info</name></member>
      <member refid="structlava_1_1instance_1a4cfa93715de1706dba286a1758e05623" prot="private" virt="non-virtual"><scope>lava::instance</scope><name>m_physical_devices</name></member>
      <member refid="structlava_1_1instance_1af2828f3502a9752df5309d7c89b19a55" prot="private" virt="non-virtual"><scope>lava::instance</scope><name>m_vk_instance</name></member>
      <member refid="structlava_1_1no__copy__no__move_1ac97369ee1b1a70996ab3b9b24bf26432" prot="public" virt="non-virtual"><scope>lava::instance</scope><name>no_copy_no_move</name></member>
      <member refid="structlava_1_1no__copy__no__move_1a7942908379614cbb8d6260192d76347c" prot="public" virt="non-virtual"><scope>lava::instance</scope><name>no_copy_no_move</name></member>
      <member refid="structlava_1_1no__copy__no__move_1aa3211995685035c9ca4d0a3a7e4b5ac8" prot="public" virt="non-virtual"><scope>lava::instance</scope><name>operator=</name></member>
      <member refid="structlava_1_1instance_1ae2188212d1ba1219f5570b0860377613" prot="public" virt="non-virtual"><scope>lava::instance</scope><name>singleton</name></member>
      <member refid="structlava_1_1instance_1a051fab78c893d441f7d9eb5cb56f9aba" prot="private" virt="non-virtual"><scope>lava::instance</scope><name>~instance</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
