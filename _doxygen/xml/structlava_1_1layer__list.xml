<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="structlava_1_1layer__list" kind="struct" language="C++" prot="public">
    <compoundname>lava::layer_list</compoundname>
    <includes refid="layer_8hpp" local="no">layer.hpp</includes>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structlava_1_1layer__list_1a8adfc1b1fbaddf5bdcddc824ab8f772c" prot="public" static="no">
        <type><ref refid="structlava_1_1layer__list" kindref="compound">layer_list</ref> *</type>
        <definition>using lava::layer_list::ptr =  layer_list*</definition>
        <argsstring></argsstring>
        <name>ptr</name>
        <qualifiedname>lava::layer_list::ptr</qualifiedname>
        <briefdescription>
<para>Pointer to layer list. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/layer.hpp" line="62" column="5" bodyfile="liblava/util/layer.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structlava_1_1layer__list_1af6945d464c7f6667323a6ab9cf191e45" prot="private" static="no" mutable="no">
        <type><ref refid="structlava_1_1layer_1ac23feca341c4ad6f951ea07c111abfe1" kindref="member">layer::list</ref></type>
        <definition>layer::list lava::layer_list::m_layers</definition>
        <argsstring></argsstring>
        <name>m_layers</name>
        <qualifiedname>lava::layer_list::m_layers</qualifiedname>
        <briefdescription>
<para>List of layers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/layer.hpp" line="149" column="17" bodyfile="liblava/util/layer.hpp" bodystart="149" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structlava_1_1layer__list_1a814b18f9b3b18deb2a8ac19fab64f8f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlava_1_1id" kindref="compound">id</ref></type>
        <definition>id lava::layer_list::add</definition>
        <argsstring>(string_ref name, layer::func func, bool active=true)</argsstring>
        <name>add</name>
        <qualifiedname>lava::layer_list::add</qualifiedname>
        <param>
          <type><ref refid="types_8hpp_1a01c2a7bfa24e7ea76ef5a79d8d4daaf6" kindref="member">string_ref</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="structlava_1_1layer_1a9c5bccef81b2a6cd2fe69be881f18ccb" kindref="member">layer::func</ref></type>
          <declname>func</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>active</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Add a new layer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of layer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>func</parametername>
</parameternamelist>
<parameterdescription>
<para>Layer function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>active</parametername>
</parameternamelist>
<parameterdescription>
<para>Layer active state </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>id Id of added layer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/layer.hpp" line="71" column="8" bodyfile="liblava/util/layer.hpp" bodystart="71" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1layer__list_1a3cfd7e05d64c9e9c8047929ebc86e334" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::layer_list::add</definition>
        <argsstring>(layer::s_ptr layer)</argsstring>
        <name>add</name>
        <qualifiedname>lava::layer_list::add</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1layer_1a815521a2637c57868794214fc011c22f" kindref="member">layer::s_ptr</ref></type>
          <declname>layer</declname>
        </param>
        <briefdescription>
<para>Add a layer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>layer</parametername>
</parameternamelist>
<parameterdescription>
<para>Layer to add </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/layer.hpp" line="88" column="10" bodyfile="liblava/util/layer.hpp" bodystart="88" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1layer__list_1a6a6d9ba510be7519084649c4c33f49f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlava_1_1id" kindref="compound">id</ref></type>
        <definition>id lava::layer_list::add_inactive</definition>
        <argsstring>(string_ref name, layer::func func)</argsstring>
        <name>add_inactive</name>
        <qualifiedname>lava::layer_list::add_inactive</qualifiedname>
        <param>
          <type><ref refid="types_8hpp_1a01c2a7bfa24e7ea76ef5a79d8d4daaf6" kindref="member">string_ref</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="structlava_1_1layer_1a9c5bccef81b2a6cd2fe69be881f18ccb" kindref="member">layer::func</ref></type>
          <declname>func</declname>
        </param>
        <briefdescription>
<para>Add a new inactive layer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of layer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>func</parametername>
</parameternamelist>
<parameterdescription>
<para>Layer function </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>id Id of added layer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/layer.hpp" line="98" column="8" bodyfile="liblava/util/layer.hpp" bodystart="98" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1layer__list_1a50634a0c3104734acf861bef857e7c2e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlava_1_1layer_1a815521a2637c57868794214fc011c22f" kindref="member">layer::s_ptr</ref></type>
        <definition>layer::s_ptr lava::layer_list::get</definition>
        <argsstring>(id::ref layer_id)</argsstring>
        <name>get</name>
        <qualifiedname>lava::layer_list::get</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1id_1a226df789a94177f765bdcaac2988eda0" kindref="member">id::ref</ref></type>
          <declname>layer_id</declname>
        </param>
        <briefdescription>
<para>Get layer in list by id. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>layer_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Id of layer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>layer::ptr Shared pointer to layer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/layer.hpp" line="108" column="18" bodyfile="liblava/util/layer.hpp" bodystart="108" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1layer__list_1a39ee287ff412867f5d72bf56cda87c01" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool lava::layer_list::remove</definition>
        <argsstring>(id::ref layer_id)</argsstring>
        <name>remove</name>
        <qualifiedname>lava::layer_list::remove</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1id_1a226df789a94177f765bdcaac2988eda0" kindref="member">id::ref</ref></type>
          <declname>layer_id</declname>
        </param>
        <briefdescription>
<para>Remove layer from list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>layer_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Id of layer to remove </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Remove was successful or failed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/layer.hpp" line="121" column="10" bodyfile="liblava/util/layer.hpp" bodystart="121" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1layer__list_1a505d57fa6edb90196af373e57ae83958" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlava_1_1layer_1ac23feca341c4ad6f951ea07c111abfe1" kindref="member">layer::list</ref> const &amp;</type>
        <definition>layer::list const  &amp; lava::layer_list::get_all</definition>
        <argsstring>() const</argsstring>
        <name>get_all</name>
        <qualifiedname>lava::layer_list::get_all</qualifiedname>
        <briefdescription>
<para>Get all layers. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="structlava_1_1layer_1ac23feca341c4ad6f951ea07c111abfe1" kindref="member">layer::list</ref> const&amp; List of layers </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/layer.hpp" line="136" column="23" bodyfile="liblava/util/layer.hpp" bodystart="136" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1layer__list_1a5e7a11654ffefad758d32f4b25071bfb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::layer_list::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <qualifiedname>lava::layer_list::clear</qualifiedname>
        <briefdescription>
<para>Clear layer list. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/layer.hpp" line="143" column="10" bodyfile="liblava/util/layer.hpp" bodystart="143" bodyend="145"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Layer list. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="liblava/util/layer.hpp" line="60" column="1" bodyfile="liblava/util/layer.hpp" bodystart="60" bodyend="150"/>
    <listofallmembers>
      <member refid="structlava_1_1layer__list_1a814b18f9b3b18deb2a8ac19fab64f8f2" prot="public" virt="non-virtual"><scope>lava::layer_list</scope><name>add</name></member>
      <member refid="structlava_1_1layer__list_1a3cfd7e05d64c9e9c8047929ebc86e334" prot="public" virt="non-virtual"><scope>lava::layer_list</scope><name>add</name></member>
      <member refid="structlava_1_1layer__list_1a6a6d9ba510be7519084649c4c33f49f3" prot="public" virt="non-virtual"><scope>lava::layer_list</scope><name>add_inactive</name></member>
      <member refid="structlava_1_1layer__list_1a5e7a11654ffefad758d32f4b25071bfb" prot="public" virt="non-virtual"><scope>lava::layer_list</scope><name>clear</name></member>
      <member refid="structlava_1_1layer__list_1a50634a0c3104734acf861bef857e7c2e" prot="public" virt="non-virtual"><scope>lava::layer_list</scope><name>get</name></member>
      <member refid="structlava_1_1layer__list_1a505d57fa6edb90196af373e57ae83958" prot="public" virt="non-virtual"><scope>lava::layer_list</scope><name>get_all</name></member>
      <member refid="structlava_1_1layer__list_1af6945d464c7f6667323a6ab9cf191e45" prot="private" virt="non-virtual"><scope>lava::layer_list</scope><name>m_layers</name></member>
      <member refid="structlava_1_1layer__list_1a8adfc1b1fbaddf5bdcddc824ab8f772c" prot="public" virt="non-virtual"><scope>lava::layer_list</scope><name>ptr</name></member>
      <member refid="structlava_1_1layer__list_1a39ee287ff412867f5d72bf56cda87c01" prot="public" virt="non-virtual"><scope>lava::layer_list</scope><name>remove</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
