<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="renderer_8hpp" kind="file" language="C++">
    <compoundname>renderer.hpp</compoundname>
    <includes refid="swapchain_8hpp" local="yes">liblava/frame/swapchain.hpp</includes>
    <includes local="no">optional</includes>
    <includedby refid="frame_8hpp" local="yes">liblava/frame.hpp</includedby>
    <incdepgraph>
      <node id="7">
        <label>liblava/base/base.hpp</label>
        <link refid="base_2base_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>liblava/base/device.hpp</label>
        <link refid="device_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>liblava/base/device_table.hpp</label>
        <link refid="device__table_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>liblava/base/memory.hpp</label>
        <link refid="memory_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>liblava/base/queue.hpp</label>
        <link refid="queue_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>liblava/core/data.hpp</label>
        <link refid="data_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>liblava/core/id.hpp</label>
        <link refid="id_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>liblava/core/types.hpp</label>
        <link refid="types_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>liblava/core/version.hpp</label>
        <link refid="version_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>liblava/frame/renderer.hpp</label>
        <link refid="renderer_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>liblava/frame/swapchain.hpp</label>
        <link refid="swapchain_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>liblava/resource/image.hpp</label>
        <link refid="image_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>liblava/util/math.hpp</label>
        <link refid="math_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>atomic</label>
      </node>
      <node id="11">
        <label>cstdint</label>
      </node>
      <node id="28">
        <label>deque</label>
      </node>
      <node id="12">
        <label>functional</label>
      </node>
      <node id="19">
        <label>glm/glm.hpp</label>
      </node>
      <node id="20">
        <label>glm/gtc/matrix_transform.hpp</label>
      </node>
      <node id="21">
        <label>glm/gtc/type_ptr.hpp</label>
      </node>
      <node id="10">
        <label>liblava/core/def.hpp</label>
      </node>
      <node id="24">
        <label>liblava/fwd.hpp</label>
      </node>
      <node id="13">
        <label>map</label>
      </node>
      <node id="26">
        <label>memory</label>
      </node>
      <node id="33">
        <label>mutex</label>
      </node>
      <node id="35">
        <label>optional</label>
      </node>
      <node id="18">
        <label>picosha2.h</label>
      </node>
      <node id="34">
        <label>set</label>
      </node>
      <node id="14">
        <label>string</label>
      </node>
      <node id="30">
        <label>string.h</label>
      </node>
      <node id="15">
        <label>string_view</label>
      </node>
      <node id="16">
        <label>vector</label>
      </node>
      <node id="25">
        <label>vk_mem_alloc.h</label>
      </node>
      <node id="23">
        <label>volk.h</label>
      </node>
      <node id="22">
        <label>vulkan/vulkan.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>liblava/app.hpp</label>
        <link refid="app_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>liblava/app/app.hpp</label>
        <link refid="app_2app_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>liblava/engine.hpp</label>
        <link refid="engine_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>liblava/engine/engine.hpp</label>
        <link refid="engine_2engine_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>liblava/frame.hpp</label>
        <link refid="frame_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>liblava/frame/renderer.hpp</label>
        <link refid="renderer_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>liblava/lava.hpp</label>
        <link refid="lava_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>liblava/test.hpp</label>
        <link refid="test_8hpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structlava_1_1renderer" prot="public">lava::renderer</innerclass>
    <innernamespace refid="namespacelava">lava</innernamespace>
    <briefdescription>
<para>Plain renderer. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="authors"><para>Lava Block OÃœ and contributors </para>
</simplesect>
<simplesect kind="copyright"><para>Copyright (c) 2018-present, MIT License </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="swapchain_8hpp" kindref="compound">liblava/frame/swapchain.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;optional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">lava<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="renderer_8hpp_1a3faafb72c76506d092019c336b0e8c61" refkind="member"><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="renderer_8hpp_1a3faafb72c76506d092019c336b0e8c61" kindref="member">optional_index</ref><sp/>=<sp/>std::optional&lt;index&gt;;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="structlava_1_1renderer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlava_1_1renderer" kindref="compound">renderer</ref><sp/>:<sp/><ref refid="structlava_1_1entity" kindref="compound">entity</ref><sp/>{</highlight></codeline>
<codeline lineno="23" refid="structlava_1_1renderer_1a5f254f3dc61a0ff1050645d3a70b0f6e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structlava_1_1renderer" kindref="compound">ptr</ref><sp/>=<sp/><ref refid="structlava_1_1renderer" kindref="compound">renderer</ref>*;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="structlava_1_1renderer_1acf20693eee0e74e63712dfeffbf4c6fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structlava_1_1renderer_1acf20693eee0e74e63712dfeffbf4c6fa" kindref="member">create</ref>(<ref refid="structlava_1_1swapchain" kindref="compound">swapchain</ref>*<sp/>target);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="structlava_1_1renderer_1ad98c7125833d129b5dc15fb363a5162a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structlava_1_1renderer_1ad98c7125833d129b5dc15fb363a5162a" kindref="member">destroy</ref>();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="structlava_1_1renderer_1a6d619cb1a8aeb50a0ed075ea1477601d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="renderer_8hpp_1a3faafb72c76506d092019c336b0e8c61" kindref="member">optional_index</ref><sp/><ref refid="structlava_1_1renderer_1a6d619cb1a8aeb50a0ed075ea1477601d" kindref="member">begin_frame</ref>();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="structlava_1_1renderer_1ae667b73be54b89bfe1a2df94258bb429" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structlava_1_1renderer_1ae667b73be54b89bfe1a2df94258bb429" kindref="member">end_frame</ref>(<ref refid="base_2base_8hpp_1ace97a755b9ed66f2467c625c05a29c0e" kindref="member">VkCommandBuffers</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>cmd_buffers);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="structlava_1_1renderer_1ab4f090f364f811424edb2b08b4b50d44" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structlava_1_1renderer_1ab4f090f364f811424edb2b08b4b50d44" kindref="member">frame</ref>(<ref refid="base_2base_8hpp_1ace97a755b9ed66f2467c625c05a29c0e" kindref="member">VkCommandBuffers</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>cmd_buffers)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structlava_1_1renderer_1a6d619cb1a8aeb50a0ed075ea1477601d" kindref="member">begin_frame</ref>())</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structlava_1_1renderer_1ae667b73be54b89bfe1a2df94258bb429" kindref="member">end_frame</ref>(cmd_buffers);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="structlava_1_1renderer_1a1706d7aef2be7db41fe625af63d63e6c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="types_8hpp_1a2a40eb7fccb1ebcfd58d6d4b7a078e5c" kindref="member">index</ref><sp/><ref refid="structlava_1_1renderer_1a1706d7aef2be7db41fe625af63d63e6c" kindref="member">get_frame</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_current_frame;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="structlava_1_1renderer_1a9761377f19184fed17c77f45acc68605" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlava_1_1device" kindref="compound">device::ptr</ref><sp/><ref refid="structlava_1_1renderer_1a9761377f19184fed17c77f45acc68605" kindref="member">get_device</ref>()<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_device;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="structlava_1_1renderer_1a6e86bebea6907c3eba78f567a5f6eba6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="base_2base_8hpp_1a29014e3e85b809e1c9175957d5012b76" kindref="member">VkSemaphores</ref><sp/><ref refid="structlava_1_1renderer_1a6e86bebea6907c3eba78f567a5f6eba6" kindref="member">user_frame_wait_semaphores</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="structlava_1_1renderer_1ab2b38a102fa1d20678f15a4a92fe0598" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="base_2base_8hpp_1a776c45a697b1300f9460e2015e99b69d" kindref="member">VkPipelineStageFlagsList</ref><sp/><ref refid="structlava_1_1renderer_1ab2b38a102fa1d20678f15a4a92fe0598" kindref="member">user_frame_wait_stages</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="structlava_1_1renderer_1a13467ddbc1f09b2e5c74c91b747e3f18" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="base_2base_8hpp_1a29014e3e85b809e1c9175957d5012b76" kindref="member">VkSemaphores</ref><sp/><ref refid="structlava_1_1renderer_1a13467ddbc1f09b2e5c74c91b747e3f18" kindref="member">user_frame_signal_semaphores</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="structlava_1_1renderer_1a8a81825f7d0d459e036c50bdd48cd4f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structlava_1_1renderer_1a8a81825f7d0d459e036c50bdd48cd4f6" kindref="member">destroy_func</ref><sp/>=<sp/>std::function&lt;void()&gt;;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="structlava_1_1renderer_1a2400aee51a31b1edd61bf29e2870da21" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlava_1_1renderer_1a8a81825f7d0d459e036c50bdd48cd4f6" kindref="member">destroy_func</ref><sp/><ref refid="structlava_1_1renderer_1a2400aee51a31b1edd61bf29e2870da21" kindref="member">on_destroy</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="structlava_1_1renderer_1aa8927a2cacb8b75863dae7a26e99b44d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structlava_1_1renderer_1aa8927a2cacb8b75863dae7a26e99b44d" kindref="member">active</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlava_1_1device" kindref="compound">device::ptr</ref><sp/>m_device<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlava_1_1queue" kindref="compound">queue</ref><sp/>m_graphics_queue;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlava_1_1swapchain" kindref="compound">swapchain</ref>*<sp/>m_target<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="types_8hpp_1a2a40eb7fccb1ebcfd58d6d4b7a078e5c" kindref="member">index</ref><sp/>m_current_frame<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="types_8hpp_1ae3c4bbc50dd4583ab0df2c24c49a49c9" kindref="member">ui32</ref><sp/>m_queued_frames<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="types_8hpp_1ae3c4bbc50dd4583ab0df2c24c49a49c9" kindref="member">ui32</ref><sp/>m_current_sync<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="base_2base_8hpp_1afc7a081f8c97f8d4b753a70c91270d3f" kindref="member">VkFences</ref><sp/>m_fences<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="base_2base_8hpp_1afc7a081f8c97f8d4b753a70c91270d3f" kindref="member">VkFences</ref><sp/>m_fences_in_use<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>VkSemaphores<sp/>m_image_acquired_semaphores<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="base_2base_8hpp_1a29014e3e85b809e1c9175957d5012b76" kindref="member">VkSemaphores</ref><sp/>m_render_complete_semaphores<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="126"><highlight class="normal">};</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>lava</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="liblava/frame/renderer.hpp"/>
  </compounddef>
</doxygen>
