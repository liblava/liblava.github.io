<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="structlava_1_1key__event" kind="struct" language="C++" prot="public">
    <compoundname>lava::key_event</compoundname>
    <includes refid="input_8hpp" local="no">input.hpp</includes>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structlava_1_1key__event_1a4b1052ca7223e6f46699c0e385b8e31b" prot="public" static="no">
        <type><ref refid="structlava_1_1key__event" kindref="compound">key_event</ref> const  &amp;</type>
        <definition>using lava::key_event::ref =  key_event const&amp;</definition>
        <argsstring></argsstring>
        <name>ref</name>
        <qualifiedname>lava::key_event::ref</qualifiedname>
        <briefdescription>
<para>Reference to key event. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/input.hpp" line="239" column="5" bodyfile="liblava/frame/input.hpp" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structlava_1_1key__event_1af46f759e9b0e04649ddaeb728e6319bb" prot="public" static="no">
        <type>std::function&lt; bool(<ref refid="structlava_1_1key__event_1a4b1052ca7223e6f46699c0e385b8e31b" kindref="member">ref</ref>)&gt;</type>
        <definition>using lava::key_event::func =  std::function&lt;bool(ref)&gt;</definition>
        <argsstring></argsstring>
        <name>func</name>
        <qualifiedname>lava::key_event::func</qualifiedname>
        <briefdescription>
<para>Key event function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/input.hpp" line="242" column="5" bodyfile="liblava/frame/input.hpp" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structlava_1_1key__event_1a6570c9bb2733968f3a6dbb6b2eca72ba" prot="public" static="no">
        <type>std::map&lt; <ref refid="structlava_1_1id" kindref="compound">id</ref>, <ref refid="structlava_1_1key__event_1af46f759e9b0e04649ddaeb728e6319bb" kindref="member">func</ref> &gt;</type>
        <definition>using lava::key_event::listeners =  std::map&lt;id, func&gt;</definition>
        <argsstring></argsstring>
        <name>listeners</name>
        <qualifiedname>lava::key_event::listeners</qualifiedname>
        <briefdescription>
<para>List of key event listeners. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/input.hpp" line="245" column="5" bodyfile="liblava/frame/input.hpp" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structlava_1_1key__event_1ae4b1616f7d4c856f1cf37073b922db98" prot="public" static="no">
        <type>std::vector&lt; <ref refid="structlava_1_1key__event" kindref="compound">key_event</ref> &gt;</type>
        <definition>using lava::key_event::list =  std::vector&lt;key_event&gt;</definition>
        <argsstring></argsstring>
        <name>list</name>
        <qualifiedname>lava::key_event::list</qualifiedname>
        <briefdescription>
<para>List of key events. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/input.hpp" line="248" column="5" bodyfile="liblava/frame/input.hpp" bodystart="248" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structlava_1_1key__event_1aad9442a3c233bd4614773f96593ebdfa" prot="public" static="no" mutable="no">
        <type><ref refid="structlava_1_1id" kindref="compound">id</ref></type>
        <definition>id lava::key_event::sender</definition>
        <argsstring></argsstring>
        <name>sender</name>
        <qualifiedname>lava::key_event::sender</qualifiedname>
        <briefdescription>
<para>Sender id. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/input.hpp" line="251" column="8" bodyfile="liblava/frame/input.hpp" bodystart="251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlava_1_1key__event_1adb7b3637b448b3f083b7afff4a1eae54" prot="public" static="no" mutable="no">
        <type><ref refid="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831" kindref="member">lava::key</ref></type>
        <definition>lava::key lava::key_event::key</definition>
        <argsstring></argsstring>
        <name>key</name>
        <qualifiedname>lava::key_event::key</qualifiedname>
        <briefdescription>
<para>Input key. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/input.hpp" line="254" column="15" bodyfile="liblava/frame/input.hpp" bodystart="254" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlava_1_1key__event_1a9342b7413db949bd2ba7cc799a8114eb" prot="public" static="no" mutable="no">
        <type><ref refid="input_8hpp_1a12e8d7909c4de4a74e281bb91cd4a5e7" kindref="member">lava::action</ref></type>
        <definition>lava::action lava::key_event::action</definition>
        <argsstring></argsstring>
        <name>action</name>
        <qualifiedname>lava::key_event::action</qualifiedname>
        <briefdescription>
<para>Input action. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/input.hpp" line="257" column="18" bodyfile="liblava/frame/input.hpp" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlava_1_1key__event_1a85219f4377cdd310489ead6d1bc7cedd" prot="public" static="no" mutable="no">
        <type><ref refid="input_8hpp_1a83cec806a5f7af14a6981b4760aef6fb" kindref="member">lava::mod</ref></type>
        <definition>lava::mod lava::key_event::mod</definition>
        <argsstring></argsstring>
        <name>mod</name>
        <qualifiedname>lava::key_event::mod</qualifiedname>
        <briefdescription>
<para>Input mod. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/input.hpp" line="260" column="15" bodyfile="liblava/frame/input.hpp" bodystart="260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlava_1_1key__event_1aed419f44822a52508f904146ccb883b7" prot="public" static="no" mutable="no">
        <type><ref refid="types_8hpp_1a7e5d7f16aff5126a54243302372b43b1" kindref="member">i32</ref></type>
        <definition>i32 lava::key_event::scancode</definition>
        <argsstring></argsstring>
        <name>scancode</name>
        <qualifiedname>lava::key_event::scancode</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
<para>Input scan code. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/input.hpp" line="263" column="9" bodyfile="liblava/frame/input.hpp" bodystart="263" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structlava_1_1key__event_1a9741e0da20252e7db9164db13a364d13" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool lava::key_event::pressed</definition>
        <argsstring>(key_ref k) const</argsstring>
        <name>pressed</name>
        <qualifiedname>lava::key_event::pressed</qualifiedname>
        <param>
          <type><ref refid="input_8hpp_1aa563fd25d36506aa0f56906ca6357f26" kindref="member">key_ref</ref></type>
          <declname>k</declname>
        </param>
        <briefdescription>
<para>Check if key is pressed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>Key to check </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Key is pressed or not </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/input.hpp" line="270" column="10" bodyfile="liblava/frame/input.hpp" bodystart="270" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1key__event_1aeff304c2c3388f4d9ec8e305867de9a7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool lava::key_event::released</definition>
        <argsstring>(key_ref k) const</argsstring>
        <name>released</name>
        <qualifiedname>lava::key_event::released</qualifiedname>
        <param>
          <type><ref refid="input_8hpp_1aa563fd25d36506aa0f56906ca6357f26" kindref="member">key_ref</ref></type>
          <declname>k</declname>
        </param>
        <briefdescription>
<para>Check if key is released. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>Key to check </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Key is released or not </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/input.hpp" line="279" column="10" bodyfile="liblava/frame/input.hpp" bodystart="279" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1key__event_1a97f052f4ac4e070cce94b95980a5e6bc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool lava::key_event::repeated</definition>
        <argsstring>(key_ref k) const</argsstring>
        <name>repeated</name>
        <qualifiedname>lava::key_event::repeated</qualifiedname>
        <param>
          <type><ref refid="input_8hpp_1aa563fd25d36506aa0f56906ca6357f26" kindref="member">key_ref</ref></type>
          <declname>k</declname>
        </param>
        <briefdescription>
<para>Check if key is repeated. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>Key to check </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Key is repeated or not </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/input.hpp" line="288" column="10" bodyfile="liblava/frame/input.hpp" bodystart="288" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1key__event_1a94e716a7a0d261504cae3e65efa730cf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool lava::key_event::active</definition>
        <argsstring>() const</argsstring>
        <name>active</name>
        <qualifiedname>lava::key_event::active</qualifiedname>
        <briefdescription>
<para>Check if key is active. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Key is pressed (and repeated) or not active </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/input.hpp" line="296" column="10" bodyfile="liblava/frame/input.hpp" bodystart="296" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1key__event_1ab0b1d8451d6479bf2c889c550a38fc40" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool lava::key_event::pressed</definition>
        <argsstring>(key_ref k, mod_ref m) const</argsstring>
        <name>pressed</name>
        <qualifiedname>lava::key_event::pressed</qualifiedname>
        <param>
          <type><ref refid="input_8hpp_1aa563fd25d36506aa0f56906ca6357f26" kindref="member">key_ref</ref></type>
          <declname>k</declname>
        </param>
        <param>
          <type><ref refid="input_8hpp_1a7d7f3cb9ffbc3938511999b1c375db33" kindref="member">mod_ref</ref></type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Check if key is pressed with mod. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>Key to check </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>Mods to check </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Key is pressed with mod or not </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/input.hpp" line="306" column="10" bodyfile="liblava/frame/input.hpp" bodystart="306" bodyend="308"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Key event. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>lava::id</label>
        <link refid="structlava_1_1id"/>
      </node>
      <node id="1">
        <label>lava::key_event</label>
        <link refid="structlava_1_1key__event"/>
        <childnode refid="2" relation="usage">
          <edgelabel>sender</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="liblava/frame/input.hpp" line="237" column="1" bodyfile="liblava/frame/input.hpp" bodystart="237" bodyend="309"/>
    <listofallmembers>
      <member refid="structlava_1_1key__event_1a9342b7413db949bd2ba7cc799a8114eb" prot="public" virt="non-virtual"><scope>lava::key_event</scope><name>action</name></member>
      <member refid="structlava_1_1key__event_1a94e716a7a0d261504cae3e65efa730cf" prot="public" virt="non-virtual"><scope>lava::key_event</scope><name>active</name></member>
      <member refid="structlava_1_1key__event_1af46f759e9b0e04649ddaeb728e6319bb" prot="public" virt="non-virtual"><scope>lava::key_event</scope><name>func</name></member>
      <member refid="structlava_1_1key__event_1adb7b3637b448b3f083b7afff4a1eae54" prot="public" virt="non-virtual"><scope>lava::key_event</scope><name>key</name></member>
      <member refid="structlava_1_1key__event_1ae4b1616f7d4c856f1cf37073b922db98" prot="public" virt="non-virtual"><scope>lava::key_event</scope><name>list</name></member>
      <member refid="structlava_1_1key__event_1a6570c9bb2733968f3a6dbb6b2eca72ba" prot="public" virt="non-virtual"><scope>lava::key_event</scope><name>listeners</name></member>
      <member refid="structlava_1_1key__event_1a85219f4377cdd310489ead6d1bc7cedd" prot="public" virt="non-virtual"><scope>lava::key_event</scope><name>mod</name></member>
      <member refid="structlava_1_1key__event_1a9741e0da20252e7db9164db13a364d13" prot="public" virt="non-virtual"><scope>lava::key_event</scope><name>pressed</name></member>
      <member refid="structlava_1_1key__event_1ab0b1d8451d6479bf2c889c550a38fc40" prot="public" virt="non-virtual"><scope>lava::key_event</scope><name>pressed</name></member>
      <member refid="structlava_1_1key__event_1a4b1052ca7223e6f46699c0e385b8e31b" prot="public" virt="non-virtual"><scope>lava::key_event</scope><name>ref</name></member>
      <member refid="structlava_1_1key__event_1aeff304c2c3388f4d9ec8e305867de9a7" prot="public" virt="non-virtual"><scope>lava::key_event</scope><name>released</name></member>
      <member refid="structlava_1_1key__event_1a97f052f4ac4e070cce94b95980a5e6bc" prot="public" virt="non-virtual"><scope>lava::key_event</scope><name>repeated</name></member>
      <member refid="structlava_1_1key__event_1aed419f44822a52508f904146ccb883b7" prot="public" virt="non-virtual"><scope>lava::key_event</scope><name>scancode</name></member>
      <member refid="structlava_1_1key__event_1aad9442a3c233bd4614773f96593ebdfa" prot="public" virt="non-virtual"><scope>lava::key_event</scope><name>sender</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
