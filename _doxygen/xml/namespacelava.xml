<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="namespacelava" kind="namespace" language="C++">
    <compoundname>lava</compoundname>
    <innerclass refid="structlava_1_1allocator" prot="public">lava::allocator</innerclass>
    <innerclass refid="structlava_1_1app" prot="public">lava::app</innerclass>
    <innerclass refid="structlava_1_1app__config" prot="public">lava::app_config</innerclass>
    <innerclass refid="structlava_1_1attachment" prot="public">lava::attachment</innerclass>
    <innerclass refid="structlava_1_1benchmark__data" prot="public">lava::benchmark_data</innerclass>
    <innerclass refid="structlava_1_1block" prot="public">lava::block</innerclass>
    <innerclass refid="structlava_1_1buffer" prot="public">lava::buffer</innerclass>
    <innerclass refid="structlava_1_1c__data" prot="public">lava::c_data</innerclass>
    <innerclass refid="structlava_1_1camera" prot="public">lava::camera</innerclass>
    <innerclass refid="structlava_1_1command" prot="public">lava::command</innerclass>
    <innerclass refid="structlava_1_1compute__pipeline" prot="public">lava::compute_pipeline</innerclass>
    <innerclass refid="structlava_1_1configurable" prot="public">lava::configurable</innerclass>
    <innerclass refid="structlava_1_1data" prot="public">lava::data</innerclass>
    <innerclass refid="structlava_1_1data__provider" prot="public">lava::data_provider</innerclass>
    <innerclass refid="structlava_1_1descriptor" prot="public">lava::descriptor</innerclass>
    <innerclass refid="structlava_1_1device" prot="public">lava::device</innerclass>
    <innerclass refid="structlava_1_1device__table" prot="public">lava::device_table</innerclass>
    <innerclass refid="structlava_1_1driver" prot="public">lava::driver</innerclass>
    <innerclass refid="structlava_1_1engine" prot="public">lava::engine</innerclass>
    <innerclass refid="structlava_1_1entity" prot="public">lava::entity</innerclass>
    <innerclass refid="structlava_1_1file" prot="public">lava::file</innerclass>
    <innerclass refid="structlava_1_1file__data" prot="public">lava::file_data</innerclass>
    <innerclass refid="structlava_1_1file__delete" prot="public">lava::file_delete</innerclass>
    <innerclass refid="structlava_1_1file__system" prot="public">lava::file_system</innerclass>
    <innerclass refid="structlava_1_1forward__shading" prot="public">lava::forward_shading</innerclass>
    <innerclass refid="structlava_1_1frame" prot="public">lava::frame</innerclass>
    <innerclass refid="structlava_1_1frame__env" prot="public">lava::frame_env</innerclass>
    <innerclass refid="structlava_1_1gamepad" prot="public">lava::gamepad</innerclass>
    <innerclass refid="structlava_1_1gamepad__manager" prot="public">lava::gamepad_manager</innerclass>
    <innerclass refid="structlava_1_1global__logger" prot="public">lava::global_logger</innerclass>
    <innerclass refid="structlava_1_1hex__cell" prot="public">lava::hex_cell</innerclass>
    <innerclass refid="structlava_1_1hex__fractional__cell" prot="public">lava::hex_fractional_cell</innerclass>
    <innerclass refid="structlava_1_1hex__grid" prot="public">lava::hex_grid</innerclass>
    <innerclass refid="structlava_1_1hex__layout" prot="public">lava::hex_layout</innerclass>
    <innerclass refid="structlava_1_1hex__offset__coord" prot="public">lava::hex_offset_coord</innerclass>
    <innerclass refid="structlava_1_1hex__orientation" prot="public">lava::hex_orientation</innerclass>
    <innerclass refid="structlava_1_1hex__point" prot="public">lava::hex_point</innerclass>
    <innerclass refid="structlava_1_1id" prot="public">lava::id</innerclass>
    <innerclass refid="structlava_1_1id__listeners" prot="public">lava::id_listeners</innerclass>
    <innerclass refid="structlava_1_1id__registry" prot="public">lava::id_registry</innerclass>
    <innerclass refid="structlava_1_1ids" prot="public">lava::ids</innerclass>
    <innerclass refid="structlava_1_1image" prot="public">lava::image</innerclass>
    <innerclass refid="structlava_1_1image__data" prot="public">lava::image_data</innerclass>
    <innerclass refid="structlava_1_1imgui" prot="public">lava::imgui</innerclass>
    <innerclass refid="structlava_1_1input" prot="public">lava::input</innerclass>
    <innerclass refid="structlava_1_1input__callback" prot="public">lava::input_callback</innerclass>
    <innerclass refid="structlava_1_1input__events" prot="public">lava::input_events</innerclass>
    <innerclass refid="structlava_1_1instance" prot="public">lava::instance</innerclass>
    <innerclass refid="structlava_1_1instance__info" prot="public">lava::instance_info</innerclass>
    <innerclass refid="structlava_1_1interface" prot="public">lava::interface</innerclass>
    <innerclass refid="structlava_1_1json__file" prot="public">lava::json_file</innerclass>
    <innerclass refid="structlava_1_1key__event" prot="public">lava::key_event</innerclass>
    <innerclass refid="structlava_1_1layer" prot="public">lava::layer</innerclass>
    <innerclass refid="structlava_1_1layer__list" prot="public">lava::layer_list</innerclass>
    <innerclass refid="structlava_1_1memory" prot="public">lava::memory</innerclass>
    <innerclass refid="structlava_1_1mesh__meta" prot="public">lava::mesh_meta</innerclass>
    <innerclass refid="structlava_1_1mesh__template" prot="public">lava::mesh_template</innerclass>
    <innerclass refid="structlava_1_1mesh__template__data" prot="public">lava::mesh_template_data</innerclass>
    <innerclass refid="structlava_1_1message__dispatcher" prot="public">lava::message_dispatcher</innerclass>
    <innerclass refid="structlava_1_1mouse__active__event" prot="public">lava::mouse_active_event</innerclass>
    <innerclass refid="structlava_1_1mouse__button__event" prot="public">lava::mouse_button_event</innerclass>
    <innerclass refid="structlava_1_1mouse__move__event" prot="public">lava::mouse_move_event</innerclass>
    <innerclass refid="structlava_1_1mouse__position" prot="public">lava::mouse_position</innerclass>
    <innerclass refid="structlava_1_1no__copy__no__move" prot="public">lava::no_copy_no_move</innerclass>
    <innerclass refid="structlava_1_1pair__hash" prot="public">lava::pair_hash</innerclass>
    <innerclass refid="structlava_1_1path__drop__event" prot="public">lava::path_drop_event</innerclass>
    <innerclass refid="structlava_1_1physical__device" prot="public">lava::physical_device</innerclass>
    <innerclass refid="structlava_1_1pipeline" prot="public">lava::pipeline</innerclass>
    <innerclass refid="structlava_1_1pipeline__layout" prot="public">lava::pipeline_layout</innerclass>
    <innerclass refid="structlava_1_1platform" prot="public">lava::platform</innerclass>
    <innerclass refid="structlava_1_1producer" prot="public">lava::producer</innerclass>
    <innerclass refid="structlava_1_1props" prot="public">lava::props</innerclass>
    <innerclass refid="structlava_1_1pseudorandom__generator" prot="public">lava::pseudorandom_generator</innerclass>
    <innerclass refid="structlava_1_1queue" prot="public">lava::queue</innerclass>
    <innerclass refid="structlava_1_1queue__family__info" prot="public">lava::queue_family_info</innerclass>
    <innerclass refid="structlava_1_1queue__info" prot="public">lava::queue_info</innerclass>
    <innerclass refid="structlava_1_1random__generator" prot="public">lava::random_generator</innerclass>
    <innerclass refid="structlava_1_1rect" prot="public">lava::rect</innerclass>
    <innerclass refid="structlava_1_1render__pass" prot="public">lava::render_pass</innerclass>
    <innerclass refid="structlava_1_1render__pipeline" prot="public">lava::render_pipeline</innerclass>
    <innerclass refid="structlava_1_1render__target" prot="public">lava::render_target</innerclass>
    <innerclass refid="structlava_1_1renderer" prot="public">lava::renderer</innerclass>
    <innerclass refid="structlava_1_1reversion__wrapper" prot="public">lava::reversion_wrapper</innerclass>
    <innerclass refid="structlava_1_1run__time" prot="public">lava::run_time</innerclass>
    <innerclass refid="structlava_1_1scoped__label" prot="public">lava::scoped_label</innerclass>
    <innerclass refid="structlava_1_1scroll__event" prot="public">lava::scroll_event</innerclass>
    <innerclass refid="structlava_1_1scroll__offset" prot="public">lava::scroll_offset</innerclass>
    <innerclass refid="structlava_1_1semantic__version" prot="public">lava::semantic_version</innerclass>
    <innerclass refid="structlava_1_1stage" prot="public">lava::stage</innerclass>
    <innerclass refid="structlava_1_1staging" prot="public">lava::staging</innerclass>
    <innerclass refid="structlava_1_1subpass" prot="public">lava::subpass</innerclass>
    <innerclass refid="structlava_1_1subpass__dependency" prot="public">lava::subpass_dependency</innerclass>
    <innerclass refid="structlava_1_1surface__format__request" prot="public">lava::surface_format_request</innerclass>
    <innerclass refid="structlava_1_1swapchain" prot="public">lava::swapchain</innerclass>
    <innerclass refid="structlava_1_1target__callback" prot="public">lava::target_callback</innerclass>
    <innerclass refid="structlava_1_1telegram" prot="public">lava::telegram</innerclass>
    <innerclass refid="structlava_1_1telegraph" prot="public">lava::telegraph</innerclass>
    <innerclass refid="structlava_1_1texture" prot="public">lava::texture</innerclass>
    <innerclass refid="structlava_1_1texture__file" prot="public">lava::texture_file</innerclass>
    <innerclass refid="structlava_1_1thread__pool" prot="public">lava::thread_pool</innerclass>
    <innerclass refid="structlava_1_1timer" prot="public">lava::timer</innerclass>
    <innerclass refid="structlava_1_1tooltip" prot="public">lava::tooltip</innerclass>
    <innerclass refid="structlava_1_1tooltip__list" prot="public">lava::tooltip_list</innerclass>
    <innerclass refid="structlava_1_1u__data" prot="public">lava::u_data</innerclass>
    <innerclass refid="structlava_1_1version" prot="public">lava::version</innerclass>
    <innerclass refid="structlava_1_1vertex" prot="public">lava::vertex</innerclass>
    <innerclass refid="structlava_1_1vk__result" prot="public">lava::vk_result</innerclass>
    <innerclass refid="structlava_1_1window" prot="public">lava::window</innerclass>
    <innernamespace refid="namespacelava_1_1log">lava::log</innernamespace>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="base_2base_8hpp_1a1bf135e6f61f0448a2fca3fbb9cd825a" prot="public" static="no" strong="yes">
        <type><ref refid="types_8hpp_1a2a40eb7fccb1ebcfd58d6d4b7a078e5c" kindref="member">index</ref></type>
        <name>api_version</name>
        <qualifiedname>lava::api_version</qualifiedname>
        <enumvalue id="base_2base_8hpp_1a1bf135e6f61f0448a2fca3fbb9cd825aa09d7da9ea375f1827517b45b61cfc6b8" prot="public">
          <name>v1_0</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="base_2base_8hpp_1a1bf135e6f61f0448a2fca3fbb9cd825aa4f397565e46919bce9d36b3c6a9cafc0" prot="public">
          <name>v1_1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="base_2base_8hpp_1a1bf135e6f61f0448a2fca3fbb9cd825aa0fdcfe7bc01aadbcbb7ff8c0e1024336" prot="public">
          <name>v1_2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="base_2base_8hpp_1a1bf135e6f61f0448a2fca3fbb9cd825aaa2297da2b1a548b8e1eef50bf24f5619" prot="public">
          <name>v1_3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Vulkan API versions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/base.hpp" line="166" column="1" bodyfile="liblava/base/base.hpp" bodystart="166" bodyend="171"/>
      </memberdef>
      <memberdef kind="enum" id="queue_8hpp_1ae36be97f14d22001f41c2164d08457d6" prot="public" static="no" strong="yes">
        <type><ref refid="types_8hpp_1a2a40eb7fccb1ebcfd58d6d4b7a078e5c" kindref="member">index</ref></type>
        <name>verify_queues_result</name>
        <qualifiedname>lava::verify_queues_result</qualifiedname>
        <enumvalue id="queue_8hpp_1ae36be97f14d22001f41c2164d08457d6a444bcb3a3fcf8389296c49467f27e1d6" prot="public">
          <name>ok</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="queue_8hpp_1ae36be97f14d22001f41c2164d08457d6a66db9c60364c52a201ef97897ed9e6df" prot="public">
          <name>empty_list</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="queue_8hpp_1ae36be97f14d22001f41c2164d08457d6a3e27dd9a9f857c65815c0778d94d0eb3" prot="public">
          <name>no_properties</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="queue_8hpp_1ae36be97f14d22001f41c2164d08457d6a15f173b92da10d1e28ba3f646c1bfeaf" prot="public">
          <name>duplicate_family_index</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="queue_8hpp_1ae36be97f14d22001f41c2164d08457d6a55cf42f8bc1b465e53b586b8ba9baf29" prot="public">
          <name>no_family_index</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="queue_8hpp_1ae36be97f14d22001f41c2164d08457d6aa6d17c8dd42d6e24234cf47a725e5f11" prot="public">
          <name>no_queues</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="queue_8hpp_1ae36be97f14d22001f41c2164d08457d6a74505cb5974e3830d3321087c18c12df" prot="public">
          <name>too_many_queues</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="queue_8hpp_1ae36be97f14d22001f41c2164d08457d6ab37bd1d9b68dd78d36ceb70e862caeb8" prot="public">
          <name>no_compatible_flags</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Result of queue verifications. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/queue.hpp" line="161" column="1" bodyfile="liblava/base/queue.hpp" bodystart="161" bodyend="170"/>
      </memberdef>
      <memberdef kind="enum" id="version_8hpp_1a592fe41d299f08f625229ef52f7fe331" prot="public" static="no" strong="yes">
        <type><ref refid="types_8hpp_1a2a40eb7fccb1ebcfd58d6d4b7a078e5c" kindref="member">index</ref></type>
        <name>version_stage</name>
        <qualifiedname>lava::version_stage</qualifiedname>
        <enumvalue id="version_8hpp_1a592fe41d299f08f625229ef52f7fe331a5ebeb6065f64f2346dbb00ab789cf001" prot="public">
          <name>preview</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="version_8hpp_1a592fe41d299f08f625229ef52f7fe331a2c1743a391305fbf367df8e4f069f9f9" prot="public">
          <name>alpha</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="version_8hpp_1a592fe41d299f08f625229ef52f7fe331a987bcab01b929eb2c07877b224215c92" prot="public">
          <name>beta</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="version_8hpp_1a592fe41d299f08f625229ef52f7fe331aff78648be52a4e79513f4e70b266c62a" prot="public">
          <name>rc</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="version_8hpp_1a592fe41d299f08f625229ef52f7fe331a123fead50246387983ee340507115ef4" prot="public">
          <name>release</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="version_8hpp_1a592fe41d299f08f625229ef52f7fe331a23ac0556b701545034241b341c373d58" prot="public">
          <name>rolling</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Version stages. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/version.hpp" line="55" column="1" bodyfile="liblava/core/version.hpp" bodystart="55" bodyend="62"/>
      </memberdef>
      <memberdef kind="enum" id="file_2file_8hpp_1a503873db26179fd7f334e1b56bd029d5" prot="public" static="no" strong="yes">
        <type><ref refid="types_8hpp_1a2a40eb7fccb1ebcfd58d6d4b7a078e5c" kindref="member">index</ref></type>
        <name>file_type</name>
        <qualifiedname>lava::file_type</qualifiedname>
        <enumvalue id="file_2file_8hpp_1a503873db26179fd7f334e1b56bd029d5a334c4a4c42fdb79d7ebc3e73b517e6f8" prot="public">
          <name>none</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="file_2file_8hpp_1a503873db26179fd7f334e1b56bd029d5abc7b36fe4d2924e49800d9b3dc4a325c" prot="public">
          <name>fs</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="file_2file_8hpp_1a503873db26179fd7f334e1b56bd029d5a4d0b5dcb6049a4255eac5ed48f05e416" prot="public">
          <name>f_stream</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>File types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/file/file.hpp" line="21" column="1" bodyfile="liblava/file/file.hpp" bodystart="21" bodyend="25"/>
      </memberdef>
      <memberdef kind="enum" id="file_2file_8hpp_1ae04e055ef72d0683eda59470d89849ff" prot="public" static="no" strong="yes">
        <type><ref refid="types_8hpp_1a2a40eb7fccb1ebcfd58d6d4b7a078e5c" kindref="member">index</ref></type>
        <name>file_mode</name>
        <qualifiedname>lava::file_mode</qualifiedname>
        <enumvalue id="file_2file_8hpp_1ae04e055ef72d0683eda59470d89849ffaecae13117d6f0584c25a9da6c8f8415e" prot="public">
          <name>read</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="file_2file_8hpp_1ae04e055ef72d0683eda59470d89849ffaefb2a684e4afb7d55e6147fbe5a332ee" prot="public">
          <name>write</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>File modes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/file/file.hpp" line="42" column="1" bodyfile="liblava/file/file.hpp" bodystart="42" bodyend="45"/>
      </memberdef>
      <memberdef kind="enum" id="frame_2frame_8hpp_1ae0770939201dcb7731205c9ada28e26d" prot="public" static="no" strong="no">
        <type></type>
        <name>error</name>
        <qualifiedname>lava::error</qualifiedname>
        <enumvalue id="frame_2frame_8hpp_1ae0770939201dcb7731205c9ada28e26daf0741f208cbf5aa40b4daa46d4a938e7" prot="public">
          <name>not_ready</name>
          <initializer>= -1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="frame_2frame_8hpp_1ae0770939201dcb7731205c9ada28e26da93deb89f7448d153513855b7fd38b380" prot="public">
          <name>create_failed</name>
          <initializer>= -2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="frame_2frame_8hpp_1ae0770939201dcb7731205c9ada28e26da9d17e6a74efb17b65b224b7ef636467b" prot="public">
          <name>init_failed</name>
          <initializer>= -3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="frame_2frame_8hpp_1ae0770939201dcb7731205c9ada28e26da10ccd68d4c09bb0a34f26a08b340782c" prot="public">
          <name>load_failed</name>
          <initializer>= -4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="frame_2frame_8hpp_1ae0770939201dcb7731205c9ada28e26da144897a64b1279f0120e1e3aae121a03" prot="public">
          <name>run_aborted</name>
          <initializer>= -5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="frame_2frame_8hpp_1ae0770939201dcb7731205c9ada28e26dafb07ed22f0861eb32f60851b57d255b1" prot="public">
          <name>still_running</name>
          <initializer>= -6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="frame_2frame_8hpp_1ae0770939201dcb7731205c9ada28e26daa5c79cdf5dcfa4b1c6b5d34eea17a40c" prot="public">
          <name>program_failed</name>
          <initializer>= -7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Error codes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/frame.hpp" line="73" column="1" bodyfile="liblava/frame/frame.hpp" bodystart="73" bodyend="81"/>
      </memberdef>
      <memberdef kind="enum" id="gamepad_8hpp_1a9c84923c4dc78344da664c372a377596" prot="public" static="no" strong="yes">
        <type><ref refid="types_8hpp_1a2a40eb7fccb1ebcfd58d6d4b7a078e5c" kindref="member">index</ref></type>
        <name>gamepad_id</name>
        <qualifiedname>lava::gamepad_id</qualifiedname>
        <enumvalue id="gamepad_8hpp_1a9c84923c4dc78344da664c372a377596a5d98ec0427152056397e9e35f357be87" prot="public">
          <name>_1</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gamepad_8hpp_1a9c84923c4dc78344da664c372a377596a26e3d8bac39f9313d584a6025bd7544d" prot="public">
          <name>_2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gamepad_8hpp_1a9c84923c4dc78344da664c372a377596af806252045a28179caaf0ec8f0b5f298" prot="public">
          <name>_3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gamepad_8hpp_1a9c84923c4dc78344da664c372a377596ab49511be6fca00a500dc7cd69ecc6c58" prot="public">
          <name>_4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gamepad_8hpp_1a9c84923c4dc78344da664c372a377596afc85e0e9e785e1ac37df34f744769c5f" prot="public">
          <name>_5</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gamepad_8hpp_1a9c84923c4dc78344da664c372a377596adfbfc4a9ddfbf50d6b3349e7a97f0101" prot="public">
          <name>_6</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gamepad_8hpp_1a9c84923c4dc78344da664c372a377596a56bb8449aba0e83c4cd30e57fab20c9d" prot="public">
          <name>_7</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gamepad_8hpp_1a9c84923c4dc78344da664c372a377596add494b805517113d9d15b8adf0a09b5c" prot="public">
          <name>_8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gamepad_8hpp_1a9c84923c4dc78344da664c372a377596a9748632a03a999f14fd0c94056c4aa24" prot="public">
          <name>_9</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gamepad_8hpp_1a9c84923c4dc78344da664c372a377596af3e698f88ff5b6ae938c2f132de7cbaa" prot="public">
          <name>_10</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gamepad_8hpp_1a9c84923c4dc78344da664c372a377596a65ebaa601921630a636201c50f9db5cf" prot="public">
          <name>_11</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gamepad_8hpp_1a9c84923c4dc78344da664c372a377596a5dc05b6bd3d21df6ab11045c6338f2ae" prot="public">
          <name>_12</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gamepad_8hpp_1a9c84923c4dc78344da664c372a377596a20621213404294b8df68e3d1a01f7e84" prot="public">
          <name>_13</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gamepad_8hpp_1a9c84923c4dc78344da664c372a377596a05927382bcdb4de1da41ce1a3ea8b7ab" prot="public">
          <name>_14</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gamepad_8hpp_1a9c84923c4dc78344da664c372a377596a6accb40a7152ce9a3de6d04c7a6768c5" prot="public">
          <name>_15</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gamepad_8hpp_1a9c84923c4dc78344da664c372a377596ab0690a4f22b6f1510ea6547f1434c8a3" prot="public">
          <name>_16</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gamepad_8hpp_1a9c84923c4dc78344da664c372a377596a98bd1c45684cf587ac2347a92dd7bb51" prot="public">
          <name>last</name>
          <initializer>= _16</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Gamepad ids. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/gamepad.hpp" line="17" column="1" bodyfile="liblava/frame/gamepad.hpp" bodystart="17" bodyend="36"/>
      </memberdef>
      <memberdef kind="enum" id="gamepad_8hpp_1a165ecdb0f8cfd572123f4952c2c3ce39" prot="public" static="no" strong="yes">
        <type><ref refid="types_8hpp_1a2a40eb7fccb1ebcfd58d6d4b7a078e5c" kindref="member">index</ref></type>
        <name>gamepad_button</name>
        <qualifiedname>lava::gamepad_button</qualifiedname>
        <enumvalue id="gamepad_8hpp_1a165ecdb0f8cfd572123f4952c2c3ce39a0cc175b9c0f1b6a831c399e269772661" prot="public">
          <name>a</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gamepad_8hpp_1a165ecdb0f8cfd572123f4952c2c3ce39a92eb5ffee6ae2fec3ad71c777531578f" prot="public">
          <name>b</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gamepad_8hpp_1a165ecdb0f8cfd572123f4952c2c3ce39a9dd4e461268c8034f5c8564e155c67a6" prot="public">
          <name>x</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gamepad_8hpp_1a165ecdb0f8cfd572123f4952c2c3ce39a415290769594460e2e485922904f345d" prot="public">
          <name>y</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gamepad_8hpp_1a165ecdb0f8cfd572123f4952c2c3ce39ad0d542878825dbd157cdd3f8254074e7" prot="public">
          <name>left_bumper</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gamepad_8hpp_1a165ecdb0f8cfd572123f4952c2c3ce39a1f94c0f500c6f05368950aeeeac305c8" prot="public">
          <name>right_bumper</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gamepad_8hpp_1a165ecdb0f8cfd572123f4952c2c3ce39a469bba0a564235dfceede42db14f17b0" prot="public">
          <name>back</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gamepad_8hpp_1a165ecdb0f8cfd572123f4952c2c3ce39aea2b2676c28c0db26d39331a336c6b92" prot="public">
          <name>start</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gamepad_8hpp_1a165ecdb0f8cfd572123f4952c2c3ce39aa0c391dc49c440fc9962168353cedde3" prot="public">
          <name>guide</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gamepad_8hpp_1a165ecdb0f8cfd572123f4952c2c3ce39af994eeb2e765378ac5976122fb09b5d1" prot="public">
          <name>left_thumb</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gamepad_8hpp_1a165ecdb0f8cfd572123f4952c2c3ce39aad36c0562baff69fb9a69202cfe9baf2" prot="public">
          <name>right_thumb</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gamepad_8hpp_1a165ecdb0f8cfd572123f4952c2c3ce39a1fe4725ee7b6b0c38cdb10308c071383" prot="public">
          <name>dpad_up</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gamepad_8hpp_1a165ecdb0f8cfd572123f4952c2c3ce39ab0c048a3ced53c0689bc37cbc80ee742" prot="public">
          <name>dpad_right</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gamepad_8hpp_1a165ecdb0f8cfd572123f4952c2c3ce39a043e5061624a2eb9ec091348e81730a0" prot="public">
          <name>dpad_down</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gamepad_8hpp_1a165ecdb0f8cfd572123f4952c2c3ce39a4c670f509ea633e6a97d419a0037420b" prot="public">
          <name>dpad_left</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gamepad_8hpp_1a165ecdb0f8cfd572123f4952c2c3ce39a98bd1c45684cf587ac2347a92dd7bb51" prot="public">
          <name>last</name>
          <initializer>= dpad_left</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gamepad_8hpp_1a165ecdb0f8cfd572123f4952c2c3ce39a22aadb26447d87b550b155a4d764fad0" prot="public">
          <name>cross</name>
          <initializer>= a</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gamepad_8hpp_1a165ecdb0f8cfd572123f4952c2c3ce39a9b6ddeba5b33e577c07c35d8505c6072" prot="public">
          <name>circle</name>
          <initializer>= b</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gamepad_8hpp_1a165ecdb0f8cfd572123f4952c2c3ce39a2fc01ec765ec0cb3dcc559126de20b30" prot="public">
          <name>square</name>
          <initializer>= x</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gamepad_8hpp_1a165ecdb0f8cfd572123f4952c2c3ce39acef44b46f16ae8ecf664df4266ffdbf9" prot="public">
          <name>triangle</name>
          <initializer>= y</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Gamepad buttons. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/gamepad.hpp" line="44" column="1" bodyfile="liblava/frame/gamepad.hpp" bodystart="44" bodyend="71"/>
      </memberdef>
      <memberdef kind="enum" id="gamepad_8hpp_1a3e5d0f5bbfdfbbe860056801ff17b30a" prot="public" static="no" strong="yes">
        <type><ref refid="types_8hpp_1a2a40eb7fccb1ebcfd58d6d4b7a078e5c" kindref="member">index</ref></type>
        <name>gamepad_axis</name>
        <qualifiedname>lava::gamepad_axis</qualifiedname>
        <enumvalue id="gamepad_8hpp_1a3e5d0f5bbfdfbbe860056801ff17b30aa817a2f18cd1f2c56178502b6a3256ba2" prot="public">
          <name>left_x</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gamepad_8hpp_1a3e5d0f5bbfdfbbe860056801ff17b30aa860707ea997c720e867a34a8100d4dba" prot="public">
          <name>left_y</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gamepad_8hpp_1a3e5d0f5bbfdfbbe860056801ff17b30aa4c2a935bc845cc368e6a12aa8a705a9c" prot="public">
          <name>right_x</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gamepad_8hpp_1a3e5d0f5bbfdfbbe860056801ff17b30aa2a4c0d09ede80536c51ea468309791bf" prot="public">
          <name>right_y</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gamepad_8hpp_1a3e5d0f5bbfdfbbe860056801ff17b30aa05a0f5ec92ec064f693aa9e65f28e799" prot="public">
          <name>left_trigger</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gamepad_8hpp_1a3e5d0f5bbfdfbbe860056801ff17b30aa2c2a76f1273611951fbf2c9c9b8f0a29" prot="public">
          <name>right_trigger</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gamepad_8hpp_1a3e5d0f5bbfdfbbe860056801ff17b30aa98bd1c45684cf587ac2347a92dd7bb51" prot="public">
          <name>last</name>
          <initializer>= right_trigger</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Gamepad axis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/gamepad.hpp" line="79" column="1" bodyfile="liblava/frame/gamepad.hpp" bodystart="79" bodyend="90"/>
      </memberdef>
      <memberdef kind="enum" id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831" prot="public" static="no" strong="yes">
        <type><ref refid="types_8hpp_1a7e5d7f16aff5126a54243302372b43b1" kindref="member">i32</ref></type>
        <name>key</name>
        <qualifiedname>lava::key</qualifiedname>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831aad921d60486366258809553a3db49a4a" prot="public">
          <name>unknown</name>
          <initializer>= undef</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831aff2364a0be3d20e46cc69efb36afe9a5" prot="public">
          <name>space</name>
          <initializer>= 32</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a5bb3d7fe3608daf56c6301d00c582897" prot="public">
          <name>apostrophe</name>
          <initializer>= 29</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831ab6d00dc1ba038e5901cd6c06b2daa192" prot="public">
          <name>comma</name>
          <initializer>= 44</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831adabe6e597b70e5760826aea1dcc564f7" prot="public">
          <name>minus</name>
          <initializer>= 45</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831aa0acfa46d86f7610b2c73dbb28f64701" prot="public">
          <name>period</name>
          <initializer>= 46</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a9fbbaa4cc515bc46e0c12e82a31df736" prot="public">
          <name>slash</name>
          <initializer>= 47</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831aa764b4bf13a360c7ac2a35ec4ca96c95" prot="public">
          <name>_0</name>
          <initializer>= 48</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a5d98ec0427152056397e9e35f357be87" prot="public">
          <name>_1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a26e3d8bac39f9313d584a6025bd7544d" prot="public">
          <name>_2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831af806252045a28179caaf0ec8f0b5f298" prot="public">
          <name>_3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831ab49511be6fca00a500dc7cd69ecc6c58" prot="public">
          <name>_4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831afc85e0e9e785e1ac37df34f744769c5f" prot="public">
          <name>_5</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831adfbfc4a9ddfbf50d6b3349e7a97f0101" prot="public">
          <name>_6</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a56bb8449aba0e83c4cd30e57fab20c9d" prot="public">
          <name>_7</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831add494b805517113d9d15b8adf0a09b5c" prot="public">
          <name>_8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a9748632a03a999f14fd0c94056c4aa24" prot="public">
          <name>_9</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a77b7e24bb3642a4b9d3081d393785273" prot="public">
          <name>semicolon</name>
          <initializer>= 59</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a465289687a70db7aa7217cc240c29f0f" prot="public">
          <name>equal</name>
          <initializer>= 61</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a0cc175b9c0f1b6a831c399e269772661" prot="public">
          <name>a</name>
          <initializer>= 65</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a92eb5ffee6ae2fec3ad71c777531578f" prot="public">
          <name>b</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a4a8a08f09d37b73795649038408b5f33" prot="public">
          <name>c</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a8277e0910d750195b448797616e091ad" prot="public">
          <name>d</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831ae1671797c52e15f763380b45e841ec32" prot="public">
          <name>e</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a8fa14cdd754f91cc6554c9e71929cce7" prot="public">
          <name>f</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831ab2f5ff47436671b6e533d8dc3614845d" prot="public">
          <name>g</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a2510c39011c5be704182423e3a695e91" prot="public">
          <name>h</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a865c0c0b4ab0e063e5caa3387c1a8741" prot="public">
          <name>i</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a363b122c528f54df4a0446b6bab05515" prot="public">
          <name>j</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a8ce4b16b22b58894aa86c421e8759df3" prot="public">
          <name>k</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a2db95e8e1a9267b7a1188556b2013b33" prot="public">
          <name>l</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a6f8f57715090da2632453988d9a1501b" prot="public">
          <name>m</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a7b8b965ad4bca0e41ab51de7b31363a1" prot="public">
          <name>n</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831ad95679752134a2d9eb61dbd7b91c4bcc" prot="public">
          <name>o</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a83878c91171338902e0fe0fb97a8c47a" prot="public">
          <name>p</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a7694f4a66316e53c8cdd9d9954bd611d" prot="public">
          <name>q</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a4b43b0aee35624cd95b910189b3dc231" prot="public">
          <name>r</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a03c7c0ace395d80182db07ae2c30f034" prot="public">
          <name>s</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831ae358efa489f58062f10dd7316b65649e" prot="public">
          <name>t</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a7b774effe4a349c6dd82ad4f4f21d34c" prot="public">
          <name>u</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a9e3669d19b675bd57058fd4664205d2a" prot="public">
          <name>v</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831af1290186a5d0b1ceab27f4e77c0c5d68" prot="public">
          <name>w</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a9dd4e461268c8034f5c8564e155c67a6" prot="public">
          <name>x</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a415290769594460e2e485922904f345d" prot="public">
          <name>y</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831afbade9e36a3f36d3d676c1b808451dd7" prot="public">
          <name>z</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a1476759ce86d46d41e079a8584b7a4f9" prot="public">
          <name>left_bracket</name>
          <initializer>= 91</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831ac57aeddaffce62fead6be61022eb1340" prot="public">
          <name>backslash</name>
          <initializer>= 92</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a7ffe0bf6f1b9c2223bda0e8a37dffe78" prot="public">
          <name>right_bracket</name>
          <initializer>= 93</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831ad4df32b0683e0452732936c7bfea16f1" prot="public">
          <name>grave_accent</name>
          <initializer>= 96</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a3b4e3897bf1c020f256131191aa473b8" prot="public">
          <name>world_1</name>
          <initializer>= 161</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a3c1f841152a5962dbe261658ec3b4ad9" prot="public">
          <name>world_2</name>
          <initializer>= 162</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831ae0ebc3c409070d07f1df0f2f4132509e" prot="public">
          <name>escape</name>
          <initializer>= 256</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831ae2a7106f1cc8bb1e1318df70aa0a3540" prot="public">
          <name>enter</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831ae7f8cbd87d347be881cba92dad128518" prot="public">
          <name>tab</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a5528770f4bce9c9b0ce9bbb8645aef45" prot="public">
          <name>backspace</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831ae0df5f3dfd2650ae5be9993434e2b2c0" prot="public">
          <name>insert</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831ad2bcc286168bf8e040885c5cb7b6df13" prot="public">
          <name>del</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a7c4f29407893c334a6cb7a87bf045c0d" prot="public">
          <name>right</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a811882fecd5c7618d7099ebbd39ea254" prot="public">
          <name>left</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a74e8333ad11685ff3bdae589c8f6e34d" prot="public">
          <name>down</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a46c48bec0d282018b9d167eef7711b2c" prot="public">
          <name>up</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831af8e72578226499b7311f292f1deba130" prot="public">
          <name>page_up</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831ad8a0a6a1d9f3b78b1af0293cf6ac5dd7" prot="public">
          <name>page_down</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a106a6c241b8797f52e1e77317b96a201" prot="public">
          <name>home</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a7f021a1415b86f2d013b2618fb31ae53" prot="public">
          <name>end</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a5605274e348d557ceb0f9ea356fa93e7" prot="public">
          <name>caps_lock</name>
          <initializer>= 280</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a52752d17cb8e9c551c3a736c45e1ddf1" prot="public">
          <name>scroll_lock</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a16269f180edc6317f3cc3d8860984b98" prot="public">
          <name>num_lock</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a58f26ac305986a702312d42b4dd87761" prot="public">
          <name>print_screen</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831aec1b81965109165de6b38cd92c1e39f9" prot="public">
          <name>pause</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831abd19836ddb62c11c55ab251ccaca5645" prot="public">
          <name>f1</name>
          <initializer>= 290</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a3667f6a0c97490758d7dc9659d01ea34" prot="public">
          <name>f2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a1779cf3aa50c413afc7e05adb7e1b0de" prot="public">
          <name>f3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a6e1fcd704528ad8bf6d6bbedb9210096" prot="public">
          <name>f4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a74ce2e1a498f2fa27b5542040be774dc" prot="public">
          <name>f5</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a64e4cda19b3f3ea4a7a56b5ba8cc33ca" prot="public">
          <name>f6</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a6c664eeed34d9c29a711bdb374831b49" prot="public">
          <name>f7</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a581c3010417303e1ee4c0657d76318d0" prot="public">
          <name>f8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a6506f0388343a1f09fd708fb15c5ade9" prot="public">
          <name>f9</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a82b5f6802b727b0d948d38cbccd48904" prot="public">
          <name>f10</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831af344a40a52a94ab7903e6b35896b543e" prot="public">
          <name>f11</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a8039b4e0e6fe78bee7d3e5cfbfa343f0" prot="public">
          <name>f12</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a89b45ff321063b749efc5b5b3aa79930" prot="public">
          <name>f13</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a1323fd7c68edb36766c982e6343cfdb4" prot="public">
          <name>f14</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831ad3c8a0832878a5e1d4e873e57b7f4238" prot="public">
          <name>f15</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831aa2449b6477c1fef79be4202906486876" prot="public">
          <name>f16</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831afe397f3f6f24b8500bc9c5f356384020" prot="public">
          <name>f17</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831ad60ea3899962ccffb8e5c7893e7eddd7" prot="public">
          <name>f18</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a599f127bd63e32d6fd5457f9f1fa1e14" prot="public">
          <name>f19</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a3ad32b999fe4b4b2f6229acc5630e97b" prot="public">
          <name>f20</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831afc698bd6eba4453d16fc4acb4abf4a5a" prot="public">
          <name>f21</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a186381290b21833e0f1761ff4a87d4ba" prot="public">
          <name>f22</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a8ea5d22eba2d75b7651304f4dcde8eee" prot="public">
          <name>f23</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831affa04600c43d9c24762433fd7c4f55a3" prot="public">
          <name>f24</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a559afd0979bb51e7532980fc12ca3f4e" prot="public">
          <name>f25</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a63cc83b4935eba67fbc8e45cd1c3b780" prot="public">
          <name>kp_0</name>
          <initializer>= 320</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831aa8cddb313644d2651ef4bb2600a71909" prot="public">
          <name>kp_1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831ae26b856adbbf09ce49352848767659bc" prot="public">
          <name>kp_2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831ac2fa17c5ee2c2b0ad6cfc25388fc1009" prot="public">
          <name>kp_3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831ae0d47075596fe028964bb384d051ae85" prot="public">
          <name>kp_4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a83587bde886b4e2a02376472328fd171" prot="public">
          <name>kp_5</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831afd321fadd8b5036473217b0c90e7de61" prot="public">
          <name>kp_6</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a226b023941b9454c931602be985769db" prot="public">
          <name>kp_7</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831af0a3c1c88ce0c97307aecfd7b4edfff8" prot="public">
          <name>kp_8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a3463594f33d409bd8fa41cc29fd7a9d6" prot="public">
          <name>kp_9</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a07b70623c3f36626917d080ac89e331c" prot="public">
          <name>kp_decimal</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831ab4aa4be15f0d6f7d01e5b99457af36a5" prot="public">
          <name>kp_divide</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a455cab8d18d83a0c65f0c99090c9e219" prot="public">
          <name>kp_multiply</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a3292c23dcc76600b948d577be85aea43" prot="public">
          <name>kp_subtract</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831af20fafda472f7ae28534d53d9ea685c2" prot="public">
          <name>kp_add</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a982eba1eb0587d77a8e4a90bcbe9a47d" prot="public">
          <name>kp_enter</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a2553de5717432df42c6fdd46ea5a9364" prot="public">
          <name>kp_equal</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a50628fab62b5a54a5f0a7e7c7b4f157b" prot="public">
          <name>left_shift</name>
          <initializer>= 340</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831ae31c29a406e855ae968bcfd47c55c1b8" prot="public">
          <name>left_control</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a217c34bd52ebbf6dbb13f7f6d7e7f53f" prot="public">
          <name>left_alt</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831ad6918048b140d7c7194665e76d39168d" prot="public">
          <name>left_super</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a4ee719aaa47e6583842088cf8e6ee8d0" prot="public">
          <name>right_shift</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a796376b16624346a60c77f88043bf037" prot="public">
          <name>right_control</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831ac868ec4aff5290f22227b0da117cbcc1" prot="public">
          <name>right_alt</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831aeaba95a6893cb395387611692d4b954e" prot="public">
          <name>right_super</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a8d6ab84ca2af9fccd4e4048694176ebf" prot="public">
          <name>menu</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831a98bd1c45684cf587ac2347a92dd7bb51" prot="public">
          <name>last</name>
          <initializer>= menu</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Input keys. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/input.hpp" line="18" column="1" bodyfile="liblava/frame/input.hpp" bodystart="18" bodyend="162"/>
      </memberdef>
      <memberdef kind="enum" id="input_8hpp_1a12e8d7909c4de4a74e281bb91cd4a5e7" prot="public" static="no" strong="yes">
        <type><ref refid="types_8hpp_1a2a40eb7fccb1ebcfd58d6d4b7a078e5c" kindref="member">index</ref></type>
        <name>action</name>
        <qualifiedname>lava::action</qualifiedname>
        <enumvalue id="input_8hpp_1a12e8d7909c4de4a74e281bb91cd4a5e7a123fead50246387983ee340507115ef4" prot="public">
          <name>release</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a12e8d7909c4de4a74e281bb91cd4a5e7a5f0038e170564c7ad98d949c741a4da2" prot="public">
          <name>press</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a12e8d7909c4de4a74e281bb91cd4a5e7a32cf6da134a8b268cf4ab6b79a9a5ad9" prot="public">
          <name>repeat</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Input actions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/input.hpp" line="190" column="1" bodyfile="liblava/frame/input.hpp" bodystart="190" bodyend="194"/>
      </memberdef>
      <memberdef kind="enum" id="input_8hpp_1a83cec806a5f7af14a6981b4760aef6fb" prot="public" static="no" strong="yes">
        <type><ref refid="types_8hpp_1a4a11496a1f0e914f75c325f33d21a216" kindref="member">flag</ref></type>
        <name>mod</name>
        <qualifiedname>lava::mod</qualifiedname>
        <enumvalue id="input_8hpp_1a83cec806a5f7af14a6981b4760aef6fba334c4a4c42fdb79d7ebc3e73b517e6f8" prot="public">
          <name>none</name>
          <initializer>= 0 &lt;&lt; 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a83cec806a5f7af14a6981b4760aef6fba2ab64f4ee279e5baf7ab7059b15e6d12" prot="public">
          <name>shift</name>
          <initializer>= 1 &lt;&lt; 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a83cec806a5f7af14a6981b4760aef6fbafc5364bf9dbfa34954526becad136d4b" prot="public">
          <name>control</name>
          <initializer>= 1 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a83cec806a5f7af14a6981b4760aef6fba34823136d0dd91d0f5d22db740f7679c" prot="public">
          <name>alt</name>
          <initializer>= 1 &lt;&lt; 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a83cec806a5f7af14a6981b4760aef6fba1b3231655cebb7a1f783eddf27d254ca" prot="public">
          <name>super</name>
          <initializer>= 1 &lt;&lt; 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a83cec806a5f7af14a6981b4760aef6fba5605274e348d557ceb0f9ea356fa93e7" prot="public">
          <name>caps_lock</name>
          <initializer>= 1 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a83cec806a5f7af14a6981b4760aef6fba16269f180edc6317f3cc3d8860984b98" prot="public">
          <name>num_lock</name>
          <initializer>= 1 &lt;&lt; 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Input mods. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/input.hpp" line="202" column="1" bodyfile="liblava/frame/input.hpp" bodystart="202" bodyend="210"/>
      </memberdef>
      <memberdef kind="enum" id="input_8hpp_1a9917bd3554a799bdfb5ec83161676125" prot="public" static="no" strong="yes">
        <type><ref refid="types_8hpp_1a2a40eb7fccb1ebcfd58d6d4b7a078e5c" kindref="member">index</ref></type>
        <name>mouse_button</name>
        <qualifiedname>lava::mouse_button</qualifiedname>
        <enumvalue id="input_8hpp_1a9917bd3554a799bdfb5ec83161676125a5d98ec0427152056397e9e35f357be87" prot="public">
          <name>_1</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9917bd3554a799bdfb5ec83161676125a26e3d8bac39f9313d584a6025bd7544d" prot="public">
          <name>_2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9917bd3554a799bdfb5ec83161676125af806252045a28179caaf0ec8f0b5f298" prot="public">
          <name>_3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9917bd3554a799bdfb5ec83161676125ab49511be6fca00a500dc7cd69ecc6c58" prot="public">
          <name>_4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9917bd3554a799bdfb5ec83161676125afc85e0e9e785e1ac37df34f744769c5f" prot="public">
          <name>_5</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9917bd3554a799bdfb5ec83161676125adfbfc4a9ddfbf50d6b3349e7a97f0101" prot="public">
          <name>_6</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9917bd3554a799bdfb5ec83161676125a56bb8449aba0e83c4cd30e57fab20c9d" prot="public">
          <name>_7</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9917bd3554a799bdfb5ec83161676125add494b805517113d9d15b8adf0a09b5c" prot="public">
          <name>_8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9917bd3554a799bdfb5ec83161676125a98bd1c45684cf587ac2347a92dd7bb51" prot="public">
          <name>last</name>
          <initializer>= _8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9917bd3554a799bdfb5ec83161676125a811882fecd5c7618d7099ebbd39ea254" prot="public">
          <name>left</name>
          <initializer>= _1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9917bd3554a799bdfb5ec83161676125a7c4f29407893c334a6cb7a87bf045c0d" prot="public">
          <name>right</name>
          <initializer>= _2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="input_8hpp_1a9917bd3554a799bdfb5ec83161676125a4a548addbfb239bbd12f5afe11a4b6dc" prot="public">
          <name>middle</name>
          <initializer>= _3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Input mouse buttons. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/input.hpp" line="385" column="1" bodyfile="liblava/frame/input.hpp" bodystart="385" bodyend="400"/>
      </memberdef>
      <memberdef kind="enum" id="primitive_8hpp_1afa8a64b09dc1ec2d28ac5cb426fb79bf" prot="public" static="no" strong="yes">
        <type><ref refid="types_8hpp_1a2a40eb7fccb1ebcfd58d6d4b7a078e5c" kindref="member">index</ref></type>
        <name>mesh_type</name>
        <qualifiedname>lava::mesh_type</qualifiedname>
        <enumvalue id="primitive_8hpp_1afa8a64b09dc1ec2d28ac5cb426fb79bfa334c4a4c42fdb79d7ebc3e73b517e6f8" prot="public">
          <name>none</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="primitive_8hpp_1afa8a64b09dc1ec2d28ac5cb426fb79bfa18a64f7251cfb123aa7c358135d00d10" prot="public">
          <name>cube</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="primitive_8hpp_1afa8a64b09dc1ec2d28ac5cb426fb79bfacef44b46f16ae8ecf664df4266ffdbf9" prot="public">
          <name>triangle</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="primitive_8hpp_1afa8a64b09dc1ec2d28ac5cb426fb79bfa9a7821516bdd5d9a1586f094d6e1aacb" prot="public">
          <name>quad</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="primitive_8hpp_1afa8a64b09dc1ec2d28ac5cb426fb79bfafcadedce5939367d6558b793607399d8" prot="public">
          <name>hexagon</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Mesh types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/primitive.hpp" line="49" column="1" bodyfile="liblava/resource/primitive.hpp" bodystart="49" bodyend="55"/>
      </memberdef>
      <memberdef kind="enum" id="texture_8hpp_1abdcbbefe88a74313afdf6bf806ff3ec5" prot="public" static="no" strong="yes">
        <type><ref refid="types_8hpp_1a2a40eb7fccb1ebcfd58d6d4b7a078e5c" kindref="member">index</ref></type>
        <name>texture_type</name>
        <qualifiedname>lava::texture_type</qualifiedname>
        <enumvalue id="texture_8hpp_1abdcbbefe88a74313afdf6bf806ff3ec5a334c4a4c42fdb79d7ebc3e73b517e6f8" prot="public">
          <name>none</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="texture_8hpp_1abdcbbefe88a74313afdf6bf806ff3ec5a0c662de1ed5426534dd00c187e5b3b6f" prot="public">
          <name>tex_2d</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="texture_8hpp_1abdcbbefe88a74313afdf6bf806ff3ec5af1f713c9e000f5d3f280adbd124df4f5" prot="public">
          <name>array</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="texture_8hpp_1abdcbbefe88a74313afdf6bf806ff3ec5a4280eeff02064f6a93321a75eb531611" prot="public">
          <name>cube_map</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Texture types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/texture.hpp" line="18" column="1" bodyfile="liblava/resource/texture.hpp" bodystart="18" bodyend="23"/>
      </memberdef>
      <memberdef kind="enum" id="hex_8hpp_1ab4521519620230034db22e97e95d42b3" prot="public" static="no" strong="yes">
        <type><ref refid="types_8hpp_1a7e5d7f16aff5126a54243302372b43b1" kindref="member">i32</ref></type>
        <name>hex_offset</name>
        <qualifiedname>lava::hex_offset</qualifiedname>
        <enumvalue id="hex_8hpp_1ab4521519620230034db22e97e95d42b3aa2b6f2a6066ed8700d83335fc50a2b8e" prot="public">
          <name>odd</name>
          <initializer>= -1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hex_8hpp_1ab4521519620230034db22e97e95d42b3acc935c5faf4c8f7a0468d7552a9b8138" prot="public">
          <name>even</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Hex offsets. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/hex.hpp" line="374" column="1" bodyfile="liblava/util/hex.hpp" bodystart="374" bodyend="377"/>
      </memberdef>
      <memberdef kind="enum" id="hex_8hpp_1aa2a7be3655f90512c22f774dadf1a25c" prot="public" static="no" strong="yes">
        <type><ref refid="types_8hpp_1a2a40eb7fccb1ebcfd58d6d4b7a078e5c" kindref="member">index</ref></type>
        <name>hex_cardinal_direction</name>
        <qualifiedname>lava::hex_cardinal_direction</qualifiedname>
        <enumvalue id="hex_8hpp_1aa2a7be3655f90512c22f774dadf1a25cadc33066c3993e0d50896e533fd692ce0" prot="public">
          <name>NE</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hex_8hpp_1aa2a7be3655f90512c22f774dadf1a25ca3a3ea00cfc35332cedf6e5e9a32e94da" prot="public">
          <name>E</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hex_8hpp_1aa2a7be3655f90512c22f774dadf1a25caf003c44deab679aa2edfaff864c77402" prot="public">
          <name>SE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hex_8hpp_1aa2a7be3655f90512c22f774dadf1a25ca6f56aa4e2561eb66f17f6d8de8070a77" prot="public">
          <name>SW</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hex_8hpp_1aa2a7be3655f90512c22f774dadf1a25ca61e9c06ea9a85a5088a499df6458d276" prot="public">
          <name>W</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hex_8hpp_1aa2a7be3655f90512c22f774dadf1a25ca7f39ac71e81132daad44925b3bdfde5a" prot="public">
          <name>NW</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Hex cardinal directions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/hex.hpp" line="597" column="1" bodyfile="liblava/util/hex.hpp" bodystart="597" bodyend="604"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="base_2base_8hpp_1aa62af46b2c296b6d19f005d5fe760670" prot="public" static="no">
        <type><ref refid="types_8hpp_1ae3c4bbc50dd4583ab0df2c24c49a49c9" kindref="member">ui32</ref></type>
        <definition>using lava::VkVersion =  ui32</definition>
        <argsstring></argsstring>
        <name>VkVersion</name>
        <qualifiedname>lava::VkVersion</qualifiedname>
        <briefdescription>
<para>Vulkan version. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/base.hpp" line="24" column="1" bodyfile="liblava/base/base.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="base_2base_8hpp_1af34c931d2c918df380c5c7afba9fd1be" prot="public" static="no">
        <type><ref refid="types_8hpp_1abd93cf188810a5c57f1e971c1ba12db6" kindref="member">ui64</ref></type>
        <definition>using lava::VkObjectHandle =  ui64</definition>
        <argsstring></argsstring>
        <name>VkObjectHandle</name>
        <qualifiedname>lava::VkObjectHandle</qualifiedname>
        <briefdescription>
<para>Vulkan object handle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/base.hpp" line="27" column="1" bodyfile="liblava/base/base.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="base_2base_8hpp_1a12338e204d106f4602b9bf70a1573f8b" prot="public" static="no">
        <type>std::vector&lt; VkFormat &gt;</type>
        <definition>using lava::VkFormats =  std::vector&lt;VkFormat&gt;</definition>
        <argsstring></argsstring>
        <name>VkFormats</name>
        <qualifiedname>lava::VkFormats</qualifiedname>
        <briefdescription>
<para>List of Vulkan formats. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/base.hpp" line="30" column="1" bodyfile="liblava/base/base.hpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="base_2base_8hpp_1a641dc45ef8eee378e727d58a660c7479" prot="public" static="no">
        <type>std::vector&lt; VkImage &gt;</type>
        <definition>using lava::VkImages =  std::vector&lt;VkImage&gt;</definition>
        <argsstring></argsstring>
        <name>VkImages</name>
        <qualifiedname>lava::VkImages</qualifiedname>
        <briefdescription>
<para>List of Vulkan images. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/base.hpp" line="33" column="1" bodyfile="liblava/base/base.hpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="base_2base_8hpp_1aeff93a1fe711990342205f1e2474d7b7" prot="public" static="no">
        <type><ref refid="base_2base_8hpp_1a641dc45ef8eee378e727d58a660c7479" kindref="member">VkImages</ref> const  &amp;</type>
        <definition>using lava::VkImagesRef =  VkImages const&amp;</definition>
        <argsstring></argsstring>
        <name>VkImagesRef</name>
        <qualifiedname>lava::VkImagesRef</qualifiedname>
        <briefdescription>
<para>Reference to list of Vulkan images. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/base.hpp" line="36" column="1" bodyfile="liblava/base/base.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="base_2base_8hpp_1ad86a56760c0ea73b5beaa3147af8df3d" prot="public" static="no">
        <type>std::vector&lt; VkImageView &gt;</type>
        <definition>using lava::VkImageViews =  std::vector&lt;VkImageView&gt;</definition>
        <argsstring></argsstring>
        <name>VkImageViews</name>
        <qualifiedname>lava::VkImageViews</qualifiedname>
        <briefdescription>
<para>List of Vulkan images views. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/base.hpp" line="39" column="1" bodyfile="liblava/base/base.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="base_2base_8hpp_1a18fe5b86fb1c98ec4f07db9bde567631" prot="public" static="no">
        <type>std::vector&lt; VkFramebuffer &gt;</type>
        <definition>using lava::VkFramebuffers =  std::vector&lt;VkFramebuffer&gt;</definition>
        <argsstring></argsstring>
        <name>VkFramebuffers</name>
        <qualifiedname>lava::VkFramebuffers</qualifiedname>
        <briefdescription>
<para>List of Vulkan frame buffers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/base.hpp" line="42" column="1" bodyfile="liblava/base/base.hpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="base_2base_8hpp_1afe1ce1f608bd72e59916382d9c3cf615" prot="public" static="no">
        <type>std::vector&lt; VkCommandPool &gt;</type>
        <definition>using lava::VkCommandPools =  std::vector&lt;VkCommandPool&gt;</definition>
        <argsstring></argsstring>
        <name>VkCommandPools</name>
        <qualifiedname>lava::VkCommandPools</qualifiedname>
        <briefdescription>
<para>List of Vulkan command pools. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/base.hpp" line="45" column="1" bodyfile="liblava/base/base.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="base_2base_8hpp_1ace97a755b9ed66f2467c625c05a29c0e" prot="public" static="no">
        <type>std::vector&lt; VkCommandBuffer &gt;</type>
        <definition>using lava::VkCommandBuffers =  std::vector&lt;VkCommandBuffer&gt;</definition>
        <argsstring></argsstring>
        <name>VkCommandBuffers</name>
        <qualifiedname>lava::VkCommandBuffers</qualifiedname>
        <briefdescription>
<para>List of Vulkan command buffers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/base.hpp" line="48" column="1" bodyfile="liblava/base/base.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="base_2base_8hpp_1afc7a081f8c97f8d4b753a70c91270d3f" prot="public" static="no">
        <type>std::vector&lt; VkFence &gt;</type>
        <definition>using lava::VkFences =  std::vector&lt;VkFence&gt;</definition>
        <argsstring></argsstring>
        <name>VkFences</name>
        <qualifiedname>lava::VkFences</qualifiedname>
        <briefdescription>
<para>List of Vulkan fences. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/base.hpp" line="51" column="1" bodyfile="liblava/base/base.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="base_2base_8hpp_1a29014e3e85b809e1c9175957d5012b76" prot="public" static="no">
        <type>std::vector&lt; VkSemaphore &gt;</type>
        <definition>using lava::VkSemaphores =  std::vector&lt;VkSemaphore&gt;</definition>
        <argsstring></argsstring>
        <name>VkSemaphores</name>
        <qualifiedname>lava::VkSemaphores</qualifiedname>
        <briefdescription>
<para>List of Vulkan semaphores. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/base.hpp" line="54" column="1" bodyfile="liblava/base/base.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="base_2base_8hpp_1a31e005633f6b721fd471413d4d306cff" prot="public" static="no">
        <type>std::vector&lt; VkPresentModeKHR &gt;</type>
        <definition>using lava::VkPresentModeKHRs =  std::vector&lt;VkPresentModeKHR&gt;</definition>
        <argsstring></argsstring>
        <name>VkPresentModeKHRs</name>
        <qualifiedname>lava::VkPresentModeKHRs</qualifiedname>
        <briefdescription>
<para>List of Vulkan present modes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/base.hpp" line="57" column="1" bodyfile="liblava/base/base.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="base_2base_8hpp_1a86d1b187b311d0bacaa2656a143bdd01" prot="public" static="no">
        <type>std::vector&lt; VkDescriptorSet &gt;</type>
        <definition>using lava::VkDescriptorSets =  std::vector&lt;VkDescriptorSet&gt;</definition>
        <argsstring></argsstring>
        <name>VkDescriptorSets</name>
        <qualifiedname>lava::VkDescriptorSets</qualifiedname>
        <briefdescription>
<para>List of Vulkan descriptor sets. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/base.hpp" line="60" column="1" bodyfile="liblava/base/base.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="base_2base_8hpp_1ac0e6d7c298bc01a729815eae30414e36" prot="public" static="no">
        <type>std::vector&lt; VkDescriptorSetLayout &gt;</type>
        <definition>using lava::VkDescriptorSetLayouts =  std::vector&lt;VkDescriptorSetLayout&gt;</definition>
        <argsstring></argsstring>
        <name>VkDescriptorSetLayouts</name>
        <qualifiedname>lava::VkDescriptorSetLayouts</qualifiedname>
        <briefdescription>
<para>List of Vulkan descriptor set layouts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/base.hpp" line="63" column="1" bodyfile="liblava/base/base.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="base_2base_8hpp_1a137a002a37399975e323e78d0e90db11" prot="public" static="no">
        <type>std::vector&lt; VkDescriptorSetLayoutBinding &gt;</type>
        <definition>using lava::VkDescriptorSetLayoutBindings =  std::vector&lt;VkDescriptorSetLayoutBinding&gt;</definition>
        <argsstring></argsstring>
        <name>VkDescriptorSetLayoutBindings</name>
        <qualifiedname>lava::VkDescriptorSetLayoutBindings</qualifiedname>
        <briefdescription>
<para>List of Vulkan descriptor set layout bindings. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/base.hpp" line="66" column="1" bodyfile="liblava/base/base.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="base_2base_8hpp_1aeec9e5c423fdc50bd10ba2d59d347080" prot="public" static="no">
        <type>std::vector&lt; VkDescriptorPoolSize &gt;</type>
        <definition>using lava::VkDescriptorPoolSizes =  std::vector&lt;VkDescriptorPoolSize&gt;</definition>
        <argsstring></argsstring>
        <name>VkDescriptorPoolSizes</name>
        <qualifiedname>lava::VkDescriptorPoolSizes</qualifiedname>
        <briefdescription>
<para>List of Vulkan descriptor pool sizes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/base.hpp" line="69" column="1" bodyfile="liblava/base/base.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="base_2base_8hpp_1a425746916ff6402a4032061a5e0e7da3" prot="public" static="no">
        <type><ref refid="base_2base_8hpp_1aeec9e5c423fdc50bd10ba2d59d347080" kindref="member">VkDescriptorPoolSizes</ref> const  &amp;</type>
        <definition>using lava::VkDescriptorPoolSizesRef =  VkDescriptorPoolSizes const&amp;</definition>
        <argsstring></argsstring>
        <name>VkDescriptorPoolSizesRef</name>
        <qualifiedname>lava::VkDescriptorPoolSizesRef</qualifiedname>
        <briefdescription>
<para>Reference to a list of Vulkan descritpr pool sizes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/base.hpp" line="72" column="1" bodyfile="liblava/base/base.hpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="base_2base_8hpp_1a5d74309e91a4d7bd8d327cd48d279908" prot="public" static="no">
        <type>std::vector&lt; VkPushConstantRange &gt;</type>
        <definition>using lava::VkPushConstantRanges =  std::vector&lt;VkPushConstantRange&gt;</definition>
        <argsstring></argsstring>
        <name>VkPushConstantRanges</name>
        <qualifiedname>lava::VkPushConstantRanges</qualifiedname>
        <briefdescription>
<para>List of Vulkan push constant ranges. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/base.hpp" line="75" column="1" bodyfile="liblava/base/base.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="base_2base_8hpp_1a49b85313d387c435f27e09e6277e0834" prot="public" static="no">
        <type>std::vector&lt; VkAttachmentReference &gt;</type>
        <definition>using lava::VkAttachmentReferences =  std::vector&lt;VkAttachmentReference&gt;</definition>
        <argsstring></argsstring>
        <name>VkAttachmentReferences</name>
        <qualifiedname>lava::VkAttachmentReferences</qualifiedname>
        <briefdescription>
<para>List of Vulkan attachment references. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/base.hpp" line="78" column="1" bodyfile="liblava/base/base.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="base_2base_8hpp_1a263ed5914a698556450a6132571fa854" prot="public" static="no">
        <type>std::vector&lt; VkClearValue &gt;</type>
        <definition>using lava::VkClearValues =  std::vector&lt;VkClearValue&gt;</definition>
        <argsstring></argsstring>
        <name>VkClearValues</name>
        <qualifiedname>lava::VkClearValues</qualifiedname>
        <briefdescription>
<para>List of Vulkan clear values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/base.hpp" line="81" column="1" bodyfile="liblava/base/base.hpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="base_2base_8hpp_1a591f03bbd3f94bad67fe8ce6dbcf687b" prot="public" static="no">
        <type>std::vector&lt; VkPipelineShaderStageCreateInfo &gt;</type>
        <definition>using lava::VkPipelineShaderStageCreateInfos =  std::vector&lt;VkPipelineShaderStageCreateInfo&gt;</definition>
        <argsstring></argsstring>
        <name>VkPipelineShaderStageCreateInfos</name>
        <qualifiedname>lava::VkPipelineShaderStageCreateInfos</qualifiedname>
        <briefdescription>
<para>List of Vulkan pipeline shader stage create infos. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/base.hpp" line="84" column="1" bodyfile="liblava/base/base.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="base_2base_8hpp_1a8e11638468d2ec440a2af3c5e974ca7c" prot="public" static="no">
        <type>std::vector&lt; VkSpecializationMapEntry &gt;</type>
        <definition>using lava::VkSpecializationMapEntries =  std::vector&lt;VkSpecializationMapEntry&gt;</definition>
        <argsstring></argsstring>
        <name>VkSpecializationMapEntries</name>
        <qualifiedname>lava::VkSpecializationMapEntries</qualifiedname>
        <briefdescription>
<para>List of Vulkan specialization map entries. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/base.hpp" line="87" column="1" bodyfile="liblava/base/base.hpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="base_2base_8hpp_1a919bd0b8a2dfec094ec8cc718fdd0c9c" prot="public" static="no">
        <type>std::vector&lt; VkVertexInputBindingDescription &gt;</type>
        <definition>using lava::VkVertexInputBindingDescriptions =  std::vector&lt;VkVertexInputBindingDescription&gt;</definition>
        <argsstring></argsstring>
        <name>VkVertexInputBindingDescriptions</name>
        <qualifiedname>lava::VkVertexInputBindingDescriptions</qualifiedname>
        <briefdescription>
<para>List of Vulkan vertex input binding descriptions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/base.hpp" line="90" column="1" bodyfile="liblava/base/base.hpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="base_2base_8hpp_1acede95ebeecb8bdd7a855ba1f2b518dc" prot="public" static="no">
        <type>std::vector&lt; VkVertexInputAttributeDescription &gt;</type>
        <definition>using lava::VkVertexInputAttributeDescriptions =  std::vector&lt;VkVertexInputAttributeDescription&gt;</definition>
        <argsstring></argsstring>
        <name>VkVertexInputAttributeDescriptions</name>
        <qualifiedname>lava::VkVertexInputAttributeDescriptions</qualifiedname>
        <briefdescription>
<para>List of Vulkan vertex input attribute descriptions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/base.hpp" line="93" column="1" bodyfile="liblava/base/base.hpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="base_2base_8hpp_1a8f0ca12074ec9090940eb7b5f0ff61ac" prot="public" static="no">
        <type>std::vector&lt; VkPipelineColorBlendAttachmentState &gt;</type>
        <definition>using lava::VkPipelineColorBlendAttachmentStates =  std::vector&lt;VkPipelineColorBlendAttachmentState&gt;</definition>
        <argsstring></argsstring>
        <name>VkPipelineColorBlendAttachmentStates</name>
        <qualifiedname>lava::VkPipelineColorBlendAttachmentStates</qualifiedname>
        <briefdescription>
<para>List of Vulkan pipeline color blend attachment states. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/base.hpp" line="96" column="1" bodyfile="liblava/base/base.hpp" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="base_2base_8hpp_1a776c45a697b1300f9460e2015e99b69d" prot="public" static="no">
        <type>std::vector&lt; VkPipelineStageFlags &gt;</type>
        <definition>using lava::VkPipelineStageFlagsList =  std::vector&lt;VkPipelineStageFlags&gt;</definition>
        <argsstring></argsstring>
        <name>VkPipelineStageFlagsList</name>
        <qualifiedname>lava::VkPipelineStageFlagsList</qualifiedname>
        <briefdescription>
<para>List of Vulkan pipeline stage flags. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/base.hpp" line="99" column="1" bodyfile="liblava/base/base.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="base_2base_8hpp_1a740d0f8107af22a9f1dab998b0577a20" prot="public" static="no">
        <type>std::vector&lt; VkDynamicState &gt;</type>
        <definition>using lava::VkDynamicStates =  std::vector&lt;VkDynamicState&gt;</definition>
        <argsstring></argsstring>
        <name>VkDynamicStates</name>
        <qualifiedname>lava::VkDynamicStates</qualifiedname>
        <briefdescription>
<para>List of Vulkan dynamic states. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/base.hpp" line="102" column="1" bodyfile="liblava/base/base.hpp" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="base_2base_8hpp_1abf600c76d74b79d839b9f25aa7ae8228" prot="public" static="no">
        <type>std::vector&lt; VkQueueFamilyProperties &gt;</type>
        <definition>using lava::VkQueueFamilyPropertiesList =  std::vector&lt;VkQueueFamilyProperties&gt;</definition>
        <argsstring></argsstring>
        <name>VkQueueFamilyPropertiesList</name>
        <qualifiedname>lava::VkQueueFamilyPropertiesList</qualifiedname>
        <briefdescription>
<para>List of Vulkan queue family properties. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/base.hpp" line="105" column="1" bodyfile="liblava/base/base.hpp" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="base_2base_8hpp_1a333be9f107cf99eb1bd039d36fc6ee02" prot="public" static="no">
        <type>std::vector&lt; VkExtensionProperties &gt;</type>
        <definition>typedef std::vector&lt; VkExtensionProperties &gt; lava::VkExtensionPropertiesList =  std::vector&lt;VkExtensionProperties&gt;</definition>
        <argsstring></argsstring>
        <name>VkExtensionPropertiesList</name>
        <qualifiedname>lava::VkExtensionPropertiesList</qualifiedname>
        <briefdescription>
<para>List of Vulkan extension properties. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/base.hpp" line="108" column="1" bodyfile="liblava/base/base.hpp" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="base_2base_8hpp_1ad7b553b09e6cd35151635ed61efbe4a4" prot="public" static="no">
        <type>std::vector&lt; VkLayerProperties &gt;</type>
        <definition>using lava::VkLayerPropertiesList =  std::vector&lt;VkLayerProperties&gt;</definition>
        <argsstring></argsstring>
        <name>VkLayerPropertiesList</name>
        <qualifiedname>lava::VkLayerPropertiesList</qualifiedname>
        <briefdescription>
<para>List of Vulkan layer properties. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/base.hpp" line="111" column="1" bodyfile="liblava/base/base.hpp" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="base_2base_8hpp_1ad05e68f9a336e01ee78008158d358f77" prot="public" static="no">
        <type>std::vector&lt; VkPhysicalDevice &gt;</type>
        <definition>using lava::VkPhysicalDevices =  std::vector&lt;VkPhysicalDevice&gt;</definition>
        <argsstring></argsstring>
        <name>VkPhysicalDevices</name>
        <qualifiedname>lava::VkPhysicalDevices</qualifiedname>
        <briefdescription>
<para>List of Vulkan physical devices. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/base.hpp" line="117" column="1" bodyfile="liblava/base/base.hpp" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="base_2base_8hpp_1ae73891efe81ae4e16da96190b745cd04" prot="public" static="no">
        <type>std::vector&lt; <ref refid="base_2base_8hpp_1ad86a56760c0ea73b5beaa3147af8df3d" kindref="member">VkImageViews</ref> &gt;</type>
        <definition>using lava::VkAttachments =  std::vector&lt;VkImageViews&gt;</definition>
        <argsstring></argsstring>
        <name>VkAttachments</name>
        <qualifiedname>lava::VkAttachments</qualifiedname>
        <briefdescription>
<para>List of Vulkan attachments (image views) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/base.hpp" line="206" column="1" bodyfile="liblava/base/base.hpp" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="base_2base_8hpp_1a5d9774191fbb48cbd1d60cd9216a5e1b" prot="public" static="no">
        <type><ref refid="base_2base_8hpp_1ae73891efe81ae4e16da96190b745cd04" kindref="member">VkAttachments</ref> const  &amp;</type>
        <definition>using lava::VkAttachmentsRef =  VkAttachments const&amp;</definition>
        <argsstring></argsstring>
        <name>VkAttachmentsRef</name>
        <qualifiedname>lava::VkAttachmentsRef</qualifiedname>
        <briefdescription>
<para>Reference of Vulkan attachments (image views) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/base.hpp" line="209" column="1" bodyfile="liblava/base/base.hpp" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="device_8hpp_1a6db76d453364cce7a63819b1464a1618" prot="public" static="no">
        <type>std::function&lt; void(VkCommandBuffer)&gt;</type>
        <definition>using lava::one_time_command_func =  std::function&lt;void(VkCommandBuffer)&gt;</definition>
        <argsstring></argsstring>
        <name>one_time_command_func</name>
        <qualifiedname>lava::one_time_command_func</qualifiedname>
        <briefdescription>
<para>One time command function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/device.hpp" line="378" column="1" bodyfile="liblava/base/device.hpp" bodystart="378" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="id_8hpp_1a2d3147f9bf9e67cdbc6ac4a2f39d13b6" prot="public" static="no">
        <type>std::map&lt; <ref refid="types_8hpp_1a56891e6c1c56efa24abd6b84f71d9145" kindref="member">string</ref>, <ref refid="structlava_1_1id" kindref="compound">id</ref> &gt;</type>
        <definition>using lava::string_id_map =  std::map&lt;string, id&gt;</definition>
        <argsstring></argsstring>
        <name>string_id_map</name>
        <qualifiedname>lava::string_id_map</qualifiedname>
        <briefdescription>
<para>Map of string ids. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/id.hpp" line="89" column="1" bodyfile="liblava/core/id.hpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="time_8hpp_1a44912e21e239eb2372d12ebb2cb0ce24" prot="public" static="no">
        <type>std::chrono::seconds</type>
        <definition>using lava::seconds =  std::chrono::seconds</definition>
        <argsstring></argsstring>
        <name>seconds</name>
        <qualifiedname>lava::seconds</qualifiedname>
        <briefdescription>
<para>Seconds. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/time.hpp" line="21" column="1" bodyfile="liblava/core/time.hpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="time_8hpp_1a2420fab3139b1aa75388807c29fabbfb" prot="public" static="no">
        <type>std::chrono::milliseconds</type>
        <definition>using lava::milliseconds =  std::chrono::milliseconds</definition>
        <argsstring></argsstring>
        <name>milliseconds</name>
        <qualifiedname>lava::milliseconds</qualifiedname>
        <briefdescription>
<para>Milliseconds. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/time.hpp" line="24" column="1" bodyfile="liblava/core/time.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="time_8hpp_1a8cc2ca1333c2a464b07f9c54326a4569" prot="public" static="no">
        <type><ref refid="time_8hpp_1a2420fab3139b1aa75388807c29fabbfb" kindref="member">milliseconds</ref></type>
        <definition>using lava::ms =  milliseconds</definition>
        <argsstring></argsstring>
        <name>ms</name>
        <qualifiedname>lava::ms</qualifiedname>
        <briefdescription>
<para>Milliseconds. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/time.hpp" line="27" column="1" bodyfile="liblava/core/time.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="time_8hpp_1a19eb584453abf1fc7f751b248bf938e6" prot="public" static="no">
        <type>std::chrono::microseconds</type>
        <definition>using lava::microseconds =  std::chrono::microseconds</definition>
        <argsstring></argsstring>
        <name>microseconds</name>
        <qualifiedname>lava::microseconds</qualifiedname>
        <briefdescription>
<para>Microseconds. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/time.hpp" line="30" column="1" bodyfile="liblava/core/time.hpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="time_8hpp_1a8583565dc80df92137aee37ba544c024" prot="public" static="no">
        <type><ref refid="time_8hpp_1a19eb584453abf1fc7f751b248bf938e6" kindref="member">microseconds</ref></type>
        <definition>using lava::us =  microseconds</definition>
        <argsstring></argsstring>
        <name>us</name>
        <qualifiedname>lava::us</qualifiedname>
        <briefdescription>
<para>Microseconds. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/time.hpp" line="33" column="1" bodyfile="liblava/core/time.hpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="time_8hpp_1a1f53d10927ebf0e207581df6022c0989" prot="public" static="no">
        <type>std::chrono::high_resolution_clock</type>
        <definition>using lava::clock =  std::chrono::high_resolution_clock</definition>
        <argsstring></argsstring>
        <name>clock</name>
        <qualifiedname>lava::clock</qualifiedname>
        <briefdescription>
<para>Clock. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/time.hpp" line="45" column="1" bodyfile="liblava/core/time.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="time_8hpp_1aa73b568ecb0def83e5d41f2731731a1c" prot="public" static="no">
        <type>clock::time_point</type>
        <definition>using lava::time_point =  clock::time_point</definition>
        <argsstring></argsstring>
        <name>time_point</name>
        <qualifiedname>lava::time_point</qualifiedname>
        <briefdescription>
<para>Time point. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/time.hpp" line="48" column="1" bodyfile="liblava/core/time.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="time_8hpp_1ab0d0ccd686e34ffd37c486c278552f98" prot="public" static="no">
        <type>clock::duration</type>
        <definition>using lava::duration =  clock::duration</definition>
        <argsstring></argsstring>
        <name>duration</name>
        <qualifiedname>lava::duration</qualifiedname>
        <briefdescription>
<para>Duration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/time.hpp" line="51" column="1" bodyfile="liblava/core/time.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hpp_1a5154ade211be67b8729c4f489002045b" prot="public" static="no">
        <type>std::int8_t</type>
        <definition>using lava::int8 =  std::int8_t</definition>
        <argsstring></argsstring>
        <name>int8</name>
        <qualifiedname>lava::int8</qualifiedname>
        <briefdescription>
<para>8 bit integer </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="21" column="1" bodyfile="liblava/core/types.hpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hpp_1af15938d3c73dfa1a28307da6452a0cb3" prot="public" static="no">
        <type><ref refid="types_8hpp_1a5154ade211be67b8729c4f489002045b" kindref="member">int8</ref></type>
        <definition>using lava::i8 =  int8</definition>
        <argsstring></argsstring>
        <name>i8</name>
        <qualifiedname>lava::i8</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="types_8hpp_1a5154ade211be67b8729c4f489002045b" kindref="member">int8</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="24" column="1" bodyfile="liblava/core/types.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hpp_1aa9e9c1a0e47380050cfb430fccd8e7e5" prot="public" static="no">
        <type>std::uint8_t</type>
        <definition>using lava::uint8 =  std::uint8_t</definition>
        <argsstring></argsstring>
        <name>uint8</name>
        <qualifiedname>lava::uint8</qualifiedname>
        <briefdescription>
<para>8 bit unsigned integer </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="27" column="1" bodyfile="liblava/core/types.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hpp_1a744c3fa12bcea9cd3344aaf347ca410c" prot="public" static="no">
        <type><ref refid="types_8hpp_1aa9e9c1a0e47380050cfb430fccd8e7e5" kindref="member">uint8</ref></type>
        <definition>using lava::ui8 =  uint8</definition>
        <argsstring></argsstring>
        <name>ui8</name>
        <qualifiedname>lava::ui8</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="types_8hpp_1aa9e9c1a0e47380050cfb430fccd8e7e5" kindref="member">uint8</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="30" column="1" bodyfile="liblava/core/types.hpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hpp_1a73261f35c60d2a9b92a61d06dc3ef019" prot="public" static="no">
        <type>std::int16_t</type>
        <definition>using lava::int16 =  std::int16_t</definition>
        <argsstring></argsstring>
        <name>int16</name>
        <qualifiedname>lava::int16</qualifiedname>
        <briefdescription>
<para>16 bit integer </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="33" column="1" bodyfile="liblava/core/types.hpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hpp_1aef911a7c061636ef7845c53160a2b72d" prot="public" static="no">
        <type><ref refid="types_8hpp_1a73261f35c60d2a9b92a61d06dc3ef019" kindref="member">int16</ref></type>
        <definition>using lava::i16 =  int16</definition>
        <argsstring></argsstring>
        <name>i16</name>
        <qualifiedname>lava::i16</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="types_8hpp_1a73261f35c60d2a9b92a61d06dc3ef019" kindref="member">int16</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="36" column="1" bodyfile="liblava/core/types.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hpp_1ac5eb62e8bf41e04442b27a47f9c8a90b" prot="public" static="no">
        <type>std::uint16_t</type>
        <definition>using lava::uint16 =  std::uint16_t</definition>
        <argsstring></argsstring>
        <name>uint16</name>
        <qualifiedname>lava::uint16</qualifiedname>
        <briefdescription>
<para>16 bit unsigned integer </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="39" column="1" bodyfile="liblava/core/types.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hpp_1a9726d8b17deae0ffa37db333759f197f" prot="public" static="no">
        <type><ref refid="types_8hpp_1ac5eb62e8bf41e04442b27a47f9c8a90b" kindref="member">uint16</ref></type>
        <definition>using lava::ui16 =  uint16</definition>
        <argsstring></argsstring>
        <name>ui16</name>
        <qualifiedname>lava::ui16</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="types_8hpp_1ac5eb62e8bf41e04442b27a47f9c8a90b" kindref="member">uint16</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="42" column="1" bodyfile="liblava/core/types.hpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hpp_1a5dfdbbdd8d939fec9b223d5addc53d9e" prot="public" static="no">
        <type>std::int32_t</type>
        <definition>using lava::int32 =  std::int32_t</definition>
        <argsstring></argsstring>
        <name>int32</name>
        <qualifiedname>lava::int32</qualifiedname>
        <briefdescription>
<para>32 bit integer </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="45" column="1" bodyfile="liblava/core/types.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hpp_1a7e5d7f16aff5126a54243302372b43b1" prot="public" static="no">
        <type><ref refid="types_8hpp_1a5dfdbbdd8d939fec9b223d5addc53d9e" kindref="member">int32</ref></type>
        <definition>using lava::i32 =  int32</definition>
        <argsstring></argsstring>
        <name>i32</name>
        <qualifiedname>lava::i32</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="types_8hpp_1a5dfdbbdd8d939fec9b223d5addc53d9e" kindref="member">int32</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="48" column="1" bodyfile="liblava/core/types.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hpp_1a869fac794d31861c7016670617a2a8a2" prot="public" static="no">
        <type>std::uint32_t</type>
        <definition>using lava::uint32 =  std::uint32_t</definition>
        <argsstring></argsstring>
        <name>uint32</name>
        <qualifiedname>lava::uint32</qualifiedname>
        <briefdescription>
<para>32 bit unsigned integer </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="51" column="1" bodyfile="liblava/core/types.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hpp_1ae3c4bbc50dd4583ab0df2c24c49a49c9" prot="public" static="no">
        <type><ref refid="types_8hpp_1a869fac794d31861c7016670617a2a8a2" kindref="member">uint32</ref></type>
        <definition>using lava::ui32 =  uint32</definition>
        <argsstring></argsstring>
        <name>ui32</name>
        <qualifiedname>lava::ui32</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="types_8hpp_1a869fac794d31861c7016670617a2a8a2" kindref="member">uint32</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="54" column="1" bodyfile="liblava/core/types.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hpp_1af04f91997c3547d0a81f9a3016f7c26d" prot="public" static="no">
        <type>std::int64_t</type>
        <definition>using lava::int64 =  std::int64_t</definition>
        <argsstring></argsstring>
        <name>int64</name>
        <qualifiedname>lava::int64</qualifiedname>
        <briefdescription>
<para>64 bit integer </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="57" column="1" bodyfile="liblava/core/types.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hpp_1af894ded8dd233c6505155b19777af556" prot="public" static="no">
        <type><ref refid="types_8hpp_1af04f91997c3547d0a81f9a3016f7c26d" kindref="member">int64</ref></type>
        <definition>using lava::i64 =  int64</definition>
        <argsstring></argsstring>
        <name>i64</name>
        <qualifiedname>lava::i64</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="types_8hpp_1af04f91997c3547d0a81f9a3016f7c26d" kindref="member">int64</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="60" column="1" bodyfile="liblava/core/types.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hpp_1ad239ef8e5d3f7f1d883582d563a794ef" prot="public" static="no">
        <type>std::uint64_t</type>
        <definition>using lava::uint64 =  std::uint64_t</definition>
        <argsstring></argsstring>
        <name>uint64</name>
        <qualifiedname>lava::uint64</qualifiedname>
        <briefdescription>
<para>64 bit unsigned integer </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="63" column="1" bodyfile="liblava/core/types.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hpp_1abd93cf188810a5c57f1e971c1ba12db6" prot="public" static="no">
        <type><ref refid="types_8hpp_1ad239ef8e5d3f7f1d883582d563a794ef" kindref="member">uint64</ref></type>
        <definition>using lava::ui64 =  uint64</definition>
        <argsstring></argsstring>
        <name>ui64</name>
        <qualifiedname>lava::ui64</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="types_8hpp_1ad239ef8e5d3f7f1d883582d563a794ef" kindref="member">uint64</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="66" column="1" bodyfile="liblava/core/types.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hpp_1aa411a8d0c2ffd62ba6b3e61c26c7be44" prot="public" static="no">
        <type>std::int_fast8_t</type>
        <definition>using lava::char8 =  std::int_fast8_t</definition>
        <argsstring></argsstring>
        <name>char8</name>
        <qualifiedname>lava::char8</qualifiedname>
        <briefdescription>
<para>8 bit char </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="69" column="1" bodyfile="liblava/core/types.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hpp_1a1bb7daf385cfc0f8087becb05fe969d1" prot="public" static="no">
        <type><ref refid="types_8hpp_1aa411a8d0c2ffd62ba6b3e61c26c7be44" kindref="member">char8</ref></type>
        <definition>using lava::c8 =  char8</definition>
        <argsstring></argsstring>
        <name>c8</name>
        <qualifiedname>lava::c8</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="types_8hpp_1aa411a8d0c2ffd62ba6b3e61c26c7be44" kindref="member">char8</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="72" column="1" bodyfile="liblava/core/types.hpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hpp_1a5c0dda8c4dbba47fca28d7db7ffbc543" prot="public" static="no">
        <type>std::uint_fast8_t</type>
        <definition>using lava::uchar8 =  std::uint_fast8_t</definition>
        <argsstring></argsstring>
        <name>uchar8</name>
        <qualifiedname>lava::uchar8</qualifiedname>
        <briefdescription>
<para>8 bit unsigened char </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="75" column="1" bodyfile="liblava/core/types.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hpp_1a0ecb6fcf4d77775908a270bd9cf09167" prot="public" static="no">
        <type><ref refid="types_8hpp_1a5c0dda8c4dbba47fca28d7db7ffbc543" kindref="member">uchar8</ref></type>
        <definition>using lava::uc8 =  uchar8</definition>
        <argsstring></argsstring>
        <name>uc8</name>
        <qualifiedname>lava::uc8</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="types_8hpp_1a5c0dda8c4dbba47fca28d7db7ffbc543" kindref="member">uchar8</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="78" column="1" bodyfile="liblava/core/types.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hpp_1abac15b7a8e76a60d8f51bd272828ca1d" prot="public" static="no">
        <type><ref refid="types_8hpp_1a73261f35c60d2a9b92a61d06dc3ef019" kindref="member">int16</ref></type>
        <definition>using lava::char16 =  int16</definition>
        <argsstring></argsstring>
        <name>char16</name>
        <qualifiedname>lava::char16</qualifiedname>
        <briefdescription>
<para>16 bit char </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="81" column="1" bodyfile="liblava/core/types.hpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hpp_1a80835499e7debfc06d5639cb62ebb9bd" prot="public" static="no">
        <type><ref refid="types_8hpp_1abac15b7a8e76a60d8f51bd272828ca1d" kindref="member">char16</ref></type>
        <definition>using lava::c16 =  char16</definition>
        <argsstring></argsstring>
        <name>c16</name>
        <qualifiedname>lava::c16</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="types_8hpp_1abac15b7a8e76a60d8f51bd272828ca1d" kindref="member">char16</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="84" column="1" bodyfile="liblava/core/types.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hpp_1a72675261098c206ded6ca480480f064d" prot="public" static="no">
        <type><ref refid="types_8hpp_1ac5eb62e8bf41e04442b27a47f9c8a90b" kindref="member">uint16</ref></type>
        <definition>using lava::uchar16 =  uint16</definition>
        <argsstring></argsstring>
        <name>uchar16</name>
        <qualifiedname>lava::uchar16</qualifiedname>
        <briefdescription>
<para>16 bit unsigned char </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="87" column="1" bodyfile="liblava/core/types.hpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hpp_1a16ef2a3466e94f8f41729ed943fa4ca4" prot="public" static="no">
        <type><ref refid="types_8hpp_1a72675261098c206ded6ca480480f064d" kindref="member">uchar16</ref></type>
        <definition>using lava::uc16 =  uchar16</definition>
        <argsstring></argsstring>
        <name>uc16</name>
        <qualifiedname>lava::uc16</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="types_8hpp_1a72675261098c206ded6ca480480f064d" kindref="member">uchar16</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="90" column="1" bodyfile="liblava/core/types.hpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hpp_1a5f15b17b871196e02acf9d8987f74889" prot="public" static="no">
        <type><ref refid="types_8hpp_1a5dfdbbdd8d939fec9b223d5addc53d9e" kindref="member">int32</ref></type>
        <definition>using lava::char32 =  int32</definition>
        <argsstring></argsstring>
        <name>char32</name>
        <qualifiedname>lava::char32</qualifiedname>
        <briefdescription>
<para>32 bit char </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="93" column="1" bodyfile="liblava/core/types.hpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hpp_1a67c9d7331632668362b53a5fead63759" prot="public" static="no">
        <type><ref refid="types_8hpp_1a5f15b17b871196e02acf9d8987f74889" kindref="member">char32</ref></type>
        <definition>using lava::c32 =  char32</definition>
        <argsstring></argsstring>
        <name>c32</name>
        <qualifiedname>lava::c32</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="types_8hpp_1a5f15b17b871196e02acf9d8987f74889" kindref="member">char32</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="96" column="1" bodyfile="liblava/core/types.hpp" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hpp_1afea8942c1eba831445b17b35c5f755e0" prot="public" static="no">
        <type><ref refid="types_8hpp_1a869fac794d31861c7016670617a2a8a2" kindref="member">uint32</ref></type>
        <definition>using lava::uchar32 =  uint32</definition>
        <argsstring></argsstring>
        <name>uchar32</name>
        <qualifiedname>lava::uchar32</qualifiedname>
        <briefdescription>
<para>32 bit unsigned char </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="99" column="1" bodyfile="liblava/core/types.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hpp_1a7db11466788d79f658b64786438784a4" prot="public" static="no">
        <type><ref refid="types_8hpp_1afea8942c1eba831445b17b35c5f755e0" kindref="member">uchar32</ref></type>
        <definition>using lava::uc32 =  uchar32</definition>
        <argsstring></argsstring>
        <name>uc32</name>
        <qualifiedname>lava::uc32</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="types_8hpp_1afea8942c1eba831445b17b35c5f755e0" kindref="member">uchar32</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="102" column="1" bodyfile="liblava/core/types.hpp" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" prot="public" static="no">
        <type>std::size_t</type>
        <definition>using lava::size_t =  std::size_t</definition>
        <argsstring></argsstring>
        <name>size_t</name>
        <qualifiedname>lava::size_t</qualifiedname>
        <briefdescription>
<para>Size. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="105" column="1" bodyfile="liblava/core/types.hpp" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hpp_1a4d505d1722d977311ee2a14d104f10f3" prot="public" static="no">
        <type>unsigned char</type>
        <definition>using lava::uchar =  unsigned char</definition>
        <argsstring></argsstring>
        <name>uchar</name>
        <qualifiedname>lava::uchar</qualifiedname>
        <briefdescription>
<para>Unsigned char. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="108" column="1" bodyfile="liblava/core/types.hpp" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hpp_1a3a32680a459890aa9c80b4f5533b3b1f" prot="public" static="no">
        <type>float</type>
        <definition>using lava::r32 =  float</definition>
        <argsstring></argsstring>
        <name>r32</name>
        <qualifiedname>lava::r32</qualifiedname>
        <briefdescription>
<para>Single-precision floating-point. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="111" column="1" bodyfile="liblava/core/types.hpp" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hpp_1aeb5fe0bd98dc4fba84d1e81c12d31476" prot="public" static="no">
        <type>double</type>
        <definition>using lava::r64 =  double</definition>
        <argsstring></argsstring>
        <name>r64</name>
        <qualifiedname>lava::r64</qualifiedname>
        <briefdescription>
<para>Double-precision floating-point. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="114" column="1" bodyfile="liblava/core/types.hpp" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hpp_1ac5a07aee91729f6ed77bd47fd1095218" prot="public" static="no">
        <type><ref refid="types_8hpp_1aeb5fe0bd98dc4fba84d1e81c12d31476" kindref="member">r64</ref></type>
        <definition>using lava::real =  r64</definition>
        <argsstring></argsstring>
        <name>real</name>
        <qualifiedname>lava::real</qualifiedname>
        <briefdescription>
<para>Real number. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="117" column="1" bodyfile="liblava/core/types.hpp" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hpp_1a5b5c372cf05c5834c538aad2b937aa9b" prot="public" static="no">
        <type><ref refid="types_8hpp_1a3a32680a459890aa9c80b4f5533b3b1f" kindref="member">r32</ref></type>
        <definition>using lava::delta =  r32</definition>
        <argsstring></argsstring>
        <name>delta</name>
        <qualifiedname>lava::delta</qualifiedname>
        <briefdescription>
<para>Delta. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="120" column="1" bodyfile="liblava/core/types.hpp" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hpp_1a94e873533b956efd41caa29bea06d498" prot="public" static="no">
        <type>void *</type>
        <definition>using lava::void_ptr =  void*</definition>
        <argsstring></argsstring>
        <name>void_ptr</name>
        <qualifiedname>lava::void_ptr</qualifiedname>
        <briefdescription>
<para>Void pointer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="123" column="1" bodyfile="liblava/core/types.hpp" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hpp_1a100af5d025fb75927f65cb6f3fbc8e5c" prot="public" static="no">
        <type>void const  *</type>
        <definition>using lava::void_c_ptr =  void const*</definition>
        <argsstring></argsstring>
        <name>void_c_ptr</name>
        <qualifiedname>lava::void_c_ptr</qualifiedname>
        <briefdescription>
<para>Const void pointer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="126" column="1" bodyfile="liblava/core/types.hpp" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hpp_1a4a11496a1f0e914f75c325f33d21a216" prot="public" static="no">
        <type><ref refid="types_8hpp_1ae3c4bbc50dd4583ab0df2c24c49a49c9" kindref="member">ui32</ref></type>
        <definition>using lava::flag =  ui32</definition>
        <argsstring></argsstring>
        <name>flag</name>
        <qualifiedname>lava::flag</qualifiedname>
        <briefdescription>
<para>Flag. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="132" column="1" bodyfile="liblava/core/types.hpp" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hpp_1a2a40eb7fccb1ebcfd58d6d4b7a078e5c" prot="public" static="no">
        <type><ref refid="types_8hpp_1ae3c4bbc50dd4583ab0df2c24c49a49c9" kindref="member">ui32</ref></type>
        <definition>using lava::index =  ui32</definition>
        <argsstring></argsstring>
        <name>index</name>
        <qualifiedname>lava::index</qualifiedname>
        <briefdescription>
<para>Index. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="135" column="1" bodyfile="liblava/core/types.hpp" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hpp_1acc29b973e1c2c9dc4fb5fcc76836c851" prot="public" static="no">
        <type>std::vector&lt; <ref refid="types_8hpp_1a2a40eb7fccb1ebcfd58d6d4b7a078e5c" kindref="member">index</ref> &gt;</type>
        <definition>using lava::index_list =  std::vector&lt;index&gt;</definition>
        <argsstring></argsstring>
        <name>index_list</name>
        <qualifiedname>lava::index_list</qualifiedname>
        <briefdescription>
<para>List of indices. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="141" column="1" bodyfile="liblava/core/types.hpp" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hpp_1aa671ee4059a4d958ca5a009e48c5edb6" prot="public" static="no">
        <type>std::map&lt; <ref refid="types_8hpp_1a2a40eb7fccb1ebcfd58d6d4b7a078e5c" kindref="member">index</ref>, <ref refid="types_8hpp_1a2a40eb7fccb1ebcfd58d6d4b7a078e5c" kindref="member">index</ref> &gt;</type>
        <definition>using lava::index_map =  std::map&lt;index, index&gt;</definition>
        <argsstring></argsstring>
        <name>index_map</name>
        <qualifiedname>lava::index_map</qualifiedname>
        <briefdescription>
<para>Map of indices. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="144" column="1" bodyfile="liblava/core/types.hpp" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hpp_1a56891e6c1c56efa24abd6b84f71d9145" prot="public" static="no">
        <type>std::string</type>
        <definition>using lava::string =  std::string</definition>
        <argsstring></argsstring>
        <name>string</name>
        <qualifiedname>lava::string</qualifiedname>
        <briefdescription>
<para>String. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="147" column="1" bodyfile="liblava/core/types.hpp" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hpp_1a01c2a7bfa24e7ea76ef5a79d8d4daaf6" prot="public" static="no">
        <type><ref refid="types_8hpp_1a56891e6c1c56efa24abd6b84f71d9145" kindref="member">string</ref> const  &amp;</type>
        <definition>using lava::string_ref =  string const&amp;</definition>
        <argsstring></argsstring>
        <name>string_ref</name>
        <qualifiedname>lava::string_ref</qualifiedname>
        <briefdescription>
<para>Reference to string. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="150" column="1" bodyfile="liblava/core/types.hpp" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hpp_1ac4015b12eb0458ac72d8f779573e91de" prot="public" static="no">
        <type>std::vector&lt; <ref refid="types_8hpp_1a56891e6c1c56efa24abd6b84f71d9145" kindref="member">string</ref> &gt;</type>
        <definition>using lava::string_list =  std::vector&lt;string&gt;</definition>
        <argsstring></argsstring>
        <name>string_list</name>
        <qualifiedname>lava::string_list</qualifiedname>
        <briefdescription>
<para>List of strings. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="153" column="1" bodyfile="liblava/core/types.hpp" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hpp_1a84b64f09909c198d14fadc65b0776272" prot="public" static="no">
        <type><ref refid="types_8hpp_1ac4015b12eb0458ac72d8f779573e91de" kindref="member">string_list</ref> const  &amp;</type>
        <definition>using lava::string_list_ref =  string_list const&amp;</definition>
        <argsstring></argsstring>
        <name>string_list_ref</name>
        <qualifiedname>lava::string_list_ref</qualifiedname>
        <briefdescription>
<para>Reference to list of strings. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="156" column="1" bodyfile="liblava/core/types.hpp" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hpp_1a484f91e9e4dfc30e3b64b3fa6bf80f57" prot="public" static="no">
        <type>std::string_view</type>
        <definition>using lava::string_view =  std::string_view</definition>
        <argsstring></argsstring>
        <name>string_view</name>
        <qualifiedname>lava::string_view</qualifiedname>
        <briefdescription>
<para>String view. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="159" column="1" bodyfile="liblava/core/types.hpp" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hpp_1aaaa9ebb8b8e302a77d4a0d5c6c612ed3" prot="public" static="no">
        <type>std::map&lt; <ref refid="types_8hpp_1a56891e6c1c56efa24abd6b84f71d9145" kindref="member">string</ref>, <ref refid="types_8hpp_1a56891e6c1c56efa24abd6b84f71d9145" kindref="member">string</ref> &gt;</type>
        <definition>using lava::string_map =  std::map&lt;string, string&gt;</definition>
        <argsstring></argsstring>
        <name>string_map</name>
        <qualifiedname>lava::string_map</qualifiedname>
        <briefdescription>
<para>Map of strings. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="162" column="1" bodyfile="liblava/core/types.hpp" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hpp_1acd143c32ef342857c26c8623ac1fc92c" prot="public" static="no">
        <type><ref refid="types_8hpp_1aaaa9ebb8b8e302a77d4a0d5c6c612ed3" kindref="member">string_map</ref> const  &amp;</type>
        <definition>using lava::string_map_ref =  string_map const&amp;</definition>
        <argsstring></argsstring>
        <name>string_map_ref</name>
        <qualifiedname>lava::string_map_ref</qualifiedname>
        <briefdescription>
<para>Reference to map of strings. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="165" column="1" bodyfile="liblava/core/types.hpp" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" prot="public" static="no">
        <type>char const  *</type>
        <definition>using lava::name =  char const*</definition>
        <argsstring></argsstring>
        <name>name</name>
        <qualifiedname>lava::name</qualifiedname>
        <briefdescription>
<para>Name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="168" column="1" bodyfile="liblava/core/types.hpp" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hpp_1a3f3772093a3aae135dc0d8eab715804b" prot="public" static="no">
        <type>char const  &amp;</type>
        <definition>using lava::name_ref =  char const&amp;</definition>
        <argsstring></argsstring>
        <name>name_ref</name>
        <qualifiedname>lava::name_ref</qualifiedname>
        <briefdescription>
<para>Reference to name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="171" column="1" bodyfile="liblava/core/types.hpp" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hpp_1aafb4d185126f5f9c34e5c6a19f49ee82" prot="public" static="no">
        <type>std::vector&lt; <ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref> &gt;</type>
        <definition>using lava::names =  std::vector&lt;name&gt;</definition>
        <argsstring></argsstring>
        <name>names</name>
        <qualifiedname>lava::names</qualifiedname>
        <briefdescription>
<para>List of names. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="174" column="1" bodyfile="liblava/core/types.hpp" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hpp_1a1daaccd9a417ece0398eabcc0b82c0a1" prot="public" static="no">
        <type><ref refid="types_8hpp_1aafb4d185126f5f9c34e5c6a19f49ee82" kindref="member">names</ref> const  &amp;</type>
        <definition>using lava::names_ref =  names const&amp;</definition>
        <argsstring></argsstring>
        <name>names_ref</name>
        <qualifiedname>lava::names_ref</qualifiedname>
        <briefdescription>
<para>Reference to list of names. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="177" column="1" bodyfile="liblava/core/types.hpp" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="version_8hpp_1ad21c2311c0d3c020c4ee9a7179d3ea2a" prot="public" static="no">
        <type><ref refid="structlava_1_1semantic__version" kindref="compound">semantic_version</ref></type>
        <definition>using lava::sem_version =  semantic_version</definition>
        <argsstring></argsstring>
        <name>sem_version</name>
        <qualifiedname>lava::sem_version</qualifiedname>
        <briefdescription>
<para>Semantic version. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/version.hpp" line="34" column="1" bodyfile="liblava/core/version.hpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="json_8hpp_1abb84a4e95da43daaa717b8118656a221" prot="public" static="no">
        <type>nlohmann::json</type>
        <definition>using lava::json =  nlohmann::json</definition>
        <argsstring></argsstring>
        <name>json</name>
        <qualifiedname>lava::json</qualifiedname>
        <briefdescription>
<para>Json object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/file/json.hpp" line="16" column="1" bodyfile="liblava/file/json.hpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="json_8hpp_1a4249dec6d0c267372af74f8b61cbcbc1" prot="public" static="no">
        <type>json const  &amp;</type>
        <definition>using lava::json_ref =  json const&amp;</definition>
        <argsstring></argsstring>
        <name>json_ref</name>
        <qualifiedname>lava::json_ref</qualifiedname>
        <briefdescription>
<para>Reference to a json object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/file/json.hpp" line="19" column="1" bodyfile="liblava/file/json.hpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="argh_8hpp_1a0ec69c8269dd4598981cbfeea2cc88d1" prot="public" static="no">
        <type>argh::parser const  &amp;</type>
        <definition>using lava::cmd_line =  argh::parser const&amp;</definition>
        <argsstring></argsstring>
        <name>cmd_line</name>
        <qualifiedname>lava::cmd_line</qualifiedname>
        <briefdescription>
<para>Command line. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/argh.hpp" line="16" column="1" bodyfile="liblava/frame/argh.hpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="gamepad_8hpp_1aafe3c39cabffbb74a87fb4a5b62c1d88" prot="public" static="no">
        <type><ref refid="gamepad_8hpp_1a9c84923c4dc78344da664c372a377596" kindref="member">gamepad_id</ref> const  &amp;</type>
        <definition>using lava::gamepad_id_ref =  gamepad_id const&amp;</definition>
        <argsstring></argsstring>
        <name>gamepad_id_ref</name>
        <qualifiedname>lava::gamepad_id_ref</qualifiedname>
        <briefdescription>
<para>Reference to gamepad id. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/gamepad.hpp" line="39" column="1" bodyfile="liblava/frame/gamepad.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="gamepad_8hpp_1a2580191222c823be813184b47dfd2cdb" prot="public" static="no">
        <type><ref refid="gamepad_8hpp_1a165ecdb0f8cfd572123f4952c2c3ce39" kindref="member">gamepad_button</ref> const  &amp;</type>
        <definition>using lava::gamepad_button_ref =  gamepad_button const&amp;</definition>
        <argsstring></argsstring>
        <name>gamepad_button_ref</name>
        <qualifiedname>lava::gamepad_button_ref</qualifiedname>
        <briefdescription>
<para>Reference to gamepad button. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/gamepad.hpp" line="74" column="1" bodyfile="liblava/frame/gamepad.hpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="gamepad_8hpp_1a366d568b96562a9477efd0c619ebdfe0" prot="public" static="no">
        <type><ref refid="gamepad_8hpp_1a3e5d0f5bbfdfbbe860056801ff17b30a" kindref="member">gamepad_axis</ref> const  &amp;</type>
        <definition>using lava::gamepad_axis_ref =  gamepad_axis const&amp;</definition>
        <argsstring></argsstring>
        <name>gamepad_axis_ref</name>
        <qualifiedname>lava::gamepad_axis_ref</qualifiedname>
        <briefdescription>
<para>Reference to gamepad axis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/gamepad.hpp" line="93" column="1" bodyfile="liblava/frame/gamepad.hpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="input_8hpp_1aa563fd25d36506aa0f56906ca6357f26" prot="public" static="no">
        <type><ref refid="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831" kindref="member">key</ref> const  &amp;</type>
        <definition>using lava::key_ref =  key const&amp;</definition>
        <argsstring></argsstring>
        <name>key_ref</name>
        <qualifiedname>lava::key_ref</qualifiedname>
        <briefdescription>
<para>Reference to key. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/input.hpp" line="165" column="1" bodyfile="liblava/frame/input.hpp" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="input_8hpp_1af1777d4e8975bc9f0283b9d67e0290e3" prot="public" static="no">
        <type>std::vector&lt; <ref refid="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831" kindref="member">key</ref> &gt;</type>
        <definition>using lava::keys =  std::vector&lt;key&gt;</definition>
        <argsstring></argsstring>
        <name>keys</name>
        <qualifiedname>lava::keys</qualifiedname>
        <briefdescription>
<para>List of keys. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/input.hpp" line="168" column="1" bodyfile="liblava/frame/input.hpp" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="input_8hpp_1a497a8e9a89b2e1daea1e25042f28c87c" prot="public" static="no">
        <type><ref refid="input_8hpp_1af1777d4e8975bc9f0283b9d67e0290e3" kindref="member">keys</ref> const  &amp;</type>
        <definition>using lava::keys_ref =  keys const&amp;</definition>
        <argsstring></argsstring>
        <name>keys_ref</name>
        <qualifiedname>lava::keys_ref</qualifiedname>
        <briefdescription>
<para>Reference to list of keys. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/input.hpp" line="171" column="1" bodyfile="liblava/frame/input.hpp" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="input_8hpp_1a7be52fbb92715f74fbf8f8b655dcf388" prot="public" static="no">
        <type><ref refid="input_8hpp_1a12e8d7909c4de4a74e281bb91cd4a5e7" kindref="member">action</ref> const  &amp;</type>
        <definition>using lava::action_ref =  action const&amp;</definition>
        <argsstring></argsstring>
        <name>action_ref</name>
        <qualifiedname>lava::action_ref</qualifiedname>
        <briefdescription>
<para>Refernece to action. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/input.hpp" line="197" column="1" bodyfile="liblava/frame/input.hpp" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="input_8hpp_1a7d7f3cb9ffbc3938511999b1c375db33" prot="public" static="no">
        <type><ref refid="input_8hpp_1a83cec806a5f7af14a6981b4760aef6fb" kindref="member">mod</ref> const  &amp;</type>
        <definition>using lava::mod_ref =  mod const&amp;</definition>
        <argsstring></argsstring>
        <name>mod_ref</name>
        <qualifiedname>lava::mod_ref</qualifiedname>
        <briefdescription>
<para>Reference to mod. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/input.hpp" line="225" column="1" bodyfile="liblava/frame/input.hpp" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="input_8hpp_1aa23894246017ee7014ad86189ba2d3cd" prot="public" static="no">
        <type><ref refid="structlava_1_1mouse__position" kindref="compound">mouse_position</ref> const  &amp;</type>
        <definition>using lava::mouse_position_ref =  mouse_position const&amp;</definition>
        <argsstring></argsstring>
        <name>mouse_position_ref</name>
        <qualifiedname>lava::mouse_position_ref</qualifiedname>
        <briefdescription>
<para>Reference to mouse position. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/input.hpp" line="357" column="1" bodyfile="liblava/frame/input.hpp" bodystart="357" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="input_8hpp_1aae253d3da456f719a42e05251866c319" prot="public" static="no">
        <type><ref refid="input_8hpp_1a9917bd3554a799bdfb5ec83161676125" kindref="member">mouse_button</ref> const  &amp;</type>
        <definition>using lava::mouse_button_ref =  mouse_button const&amp;</definition>
        <argsstring></argsstring>
        <name>mouse_button_ref</name>
        <qualifiedname>lava::mouse_button_ref</qualifiedname>
        <briefdescription>
<para>Reference to mouse button. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/input.hpp" line="403" column="1" bodyfile="liblava/frame/input.hpp" bodystart="403" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="input_8hpp_1ac6991193b96f8c605a00c1a90b680f5f" prot="public" static="no">
        <type><ref refid="structlava_1_1input__events" kindref="compound">input_events</ref>&lt; <ref refid="structlava_1_1key__event" kindref="compound">key_event</ref> &gt;</type>
        <definition>using lava::input_key_events =  input_events&lt;key_event&gt;</definition>
        <argsstring></argsstring>
        <name>input_key_events</name>
        <qualifiedname>lava::input_key_events</qualifiedname>
        <briefdescription>
<para>List of key events. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/input.hpp" line="556" column="1" bodyfile="liblava/frame/input.hpp" bodystart="556" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="input_8hpp_1a8116373e2cdc08eb7289941127949eb6" prot="public" static="no">
        <type><ref refid="structlava_1_1input__events" kindref="compound">input_events</ref>&lt; <ref refid="structlava_1_1scroll__event" kindref="compound">scroll_event</ref> &gt;</type>
        <definition>using lava::input_scroll_events =  input_events&lt;scroll_event&gt;</definition>
        <argsstring></argsstring>
        <name>input_scroll_events</name>
        <qualifiedname>lava::input_scroll_events</qualifiedname>
        <briefdescription>
<para>List of scroll events. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/input.hpp" line="559" column="1" bodyfile="liblava/frame/input.hpp" bodystart="559" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="input_8hpp_1a972eb88b978d711def92f92e2fdb7c54" prot="public" static="no">
        <type><ref refid="structlava_1_1input__events" kindref="compound">input_events</ref>&lt; <ref refid="structlava_1_1mouse__move__event" kindref="compound">mouse_move_event</ref> &gt;</type>
        <definition>using lava::input_mouse_move_events =  input_events&lt;mouse_move_event&gt;</definition>
        <argsstring></argsstring>
        <name>input_mouse_move_events</name>
        <qualifiedname>lava::input_mouse_move_events</qualifiedname>
        <briefdescription>
<para>List of mouse move events. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/input.hpp" line="562" column="1" bodyfile="liblava/frame/input.hpp" bodystart="562" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="input_8hpp_1a33079fd02eb091326720a85743930043" prot="public" static="no">
        <type><ref refid="structlava_1_1input__events" kindref="compound">input_events</ref>&lt; <ref refid="structlava_1_1mouse__button__event" kindref="compound">mouse_button_event</ref> &gt;</type>
        <definition>using lava::input_mouse_button_events =  input_events&lt;mouse_button_event&gt;</definition>
        <argsstring></argsstring>
        <name>input_mouse_button_events</name>
        <qualifiedname>lava::input_mouse_button_events</qualifiedname>
        <briefdescription>
<para>List of mouse button events. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/input.hpp" line="565" column="1" bodyfile="liblava/frame/input.hpp" bodystart="565" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="input_8hpp_1a1abf00e69bc5648d77ad8a4df0b06b51" prot="public" static="no">
        <type><ref refid="structlava_1_1input__events" kindref="compound">input_events</ref>&lt; <ref refid="structlava_1_1mouse__active__event" kindref="compound">mouse_active_event</ref> &gt;</type>
        <definition>using lava::input_mouse_active_events =  input_events&lt;mouse_active_event&gt;</definition>
        <argsstring></argsstring>
        <name>input_mouse_active_events</name>
        <qualifiedname>lava::input_mouse_active_events</qualifiedname>
        <briefdescription>
<para>List of mouse active events. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/input.hpp" line="568" column="1" bodyfile="liblava/frame/input.hpp" bodystart="568" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="input_8hpp_1accb52eeef273d6dbdc3232e88bcb9a6d" prot="public" static="no">
        <type><ref refid="structlava_1_1input__events" kindref="compound">input_events</ref>&lt; <ref refid="structlava_1_1path__drop__event" kindref="compound">path_drop_event</ref> &gt;</type>
        <definition>using lava::input_path_drop_events =  input_events&lt;path_drop_event&gt;</definition>
        <argsstring></argsstring>
        <name>input_path_drop_events</name>
        <qualifiedname>lava::input_path_drop_events</qualifiedname>
        <briefdescription>
<para>List of path drop events. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/input.hpp" line="571" column="1" bodyfile="liblava/frame/input.hpp" bodystart="571" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="renderer_8hpp_1a3faafb72c76506d092019c336b0e8c61" prot="public" static="no">
        <type>std::optional&lt; <ref refid="types_8hpp_1a2a40eb7fccb1ebcfd58d6d4b7a078e5c" kindref="member">index</ref> &gt;</type>
        <definition>using lava::optional_index =  std::optional&lt;index&gt;</definition>
        <argsstring></argsstring>
        <name>optional_index</name>
        <qualifiedname>lava::optional_index</qualifiedname>
        <briefdescription>
<para>Optional frame index. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/renderer.hpp" line="16" column="1" bodyfile="liblava/frame/renderer.hpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="format_8hpp_1ad8e0e7d7b4c7550a9827f681c248e63b" prot="public" static="no">
        <type>std::optional&lt; VkFormat &gt;</type>
        <definition>using lava::VkFormat_optional =  std::optional&lt;VkFormat&gt;</definition>
        <argsstring></argsstring>
        <name>VkFormat_optional</name>
        <qualifiedname>lava::VkFormat_optional</qualifiedname>
        <briefdescription>
<para>Optional format. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/format.hpp" line="16" column="1" bodyfile="liblava/resource/format.hpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="mesh_8hpp_1a516a3f121aa952cd1a58450ffac5b334" prot="public" static="no">
        <type><ref refid="structlava_1_1mesh__template__data" kindref="compound">mesh_template_data</ref>&lt; <ref refid="structlava_1_1vertex" kindref="compound">vertex</ref> &gt;</type>
        <definition>using lava::mesh_data =  mesh_template_data&lt;vertex&gt;</definition>
        <argsstring></argsstring>
        <name>mesh_data</name>
        <qualifiedname>lava::mesh_data</qualifiedname>
        <briefdescription>
<para>Mesh data with default vertex. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/mesh.hpp" line="789" column="1" bodyfile="liblava/resource/mesh.hpp" bodystart="789" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="mesh_8hpp_1ad5ed4a99e12848d76d0097c2599e6341" prot="public" static="no">
        <type><ref refid="structlava_1_1mesh__template" kindref="compound">mesh_template</ref>&lt; <ref refid="structlava_1_1vertex" kindref="compound">vertex</ref> &gt;</type>
        <definition>using lava::mesh =  mesh_template&lt;vertex&gt;</definition>
        <argsstring></argsstring>
        <name>mesh</name>
        <qualifiedname>lava::mesh</qualifiedname>
        <briefdescription>
<para>Mesh with default vertex. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/mesh.hpp" line="792" column="1" bodyfile="liblava/resource/mesh.hpp" bodystart="792" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="mesh_8hpp_1ac3126f4b1b7a55199bb1b6c6bd4cff56" prot="public" static="no">
        <type><ref refid="structlava_1_1id__registry" kindref="compound">id_registry</ref>&lt; <ref refid="mesh_8hpp_1ad5ed4a99e12848d76d0097c2599e6341" kindref="member">mesh</ref>, <ref refid="structlava_1_1mesh__meta" kindref="compound">mesh_meta</ref> &gt;</type>
        <definition>using lava::mesh_registry =  id_registry&lt;mesh, mesh_meta&gt;</definition>
        <argsstring></argsstring>
        <name>mesh_registry</name>
        <qualifiedname>lava::mesh_registry</qualifiedname>
        <briefdescription>
<para>Mesh registry. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/mesh.hpp" line="806" column="1" bodyfile="liblava/resource/mesh.hpp" bodystart="806" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="texture_8hpp_1ac8a30441a7ef3cc4a7a8db8571b07455" prot="public" static="no">
        <type><ref refid="structlava_1_1id__registry" kindref="compound">id_registry</ref>&lt; <ref refid="structlava_1_1texture" kindref="compound">texture</ref>, <ref refid="structlava_1_1texture__file" kindref="compound">texture_file</ref> &gt;</type>
        <definition>using lava::texture_registry =  id_registry&lt;texture, texture_file&gt;</definition>
        <argsstring></argsstring>
        <name>texture_registry</name>
        <qualifiedname>lava::texture_registry</qualifiedname>
        <briefdescription>
<para>Texture registry. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/texture.hpp" line="245" column="1" bodyfile="liblava/resource/texture.hpp" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hex_8hpp_1a32178b9e3e4755c33909cdd40922fe4a" prot="public" static="no">
        <type><ref refid="structlava_1_1hex__fractional__cell" kindref="compound">hex_fractional_cell</ref></type>
        <definition>using lava::hex_frac_cell =  hex_fractional_cell</definition>
        <argsstring></argsstring>
        <name>hex_frac_cell</name>
        <qualifiedname>lava::hex_frac_cell</qualifiedname>
        <briefdescription>
<para>Hex fractional cell. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/hex.hpp" line="147" column="1" bodyfile="liblava/util/hex.hpp" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hex_8hpp_1a84c9d74193a06be5b9c461dc1fef2ecb" prot="public" static="no">
        <type><ref refid="structlava_1_1hex__offset__coord" kindref="compound">hex_offset_coord</ref></type>
        <definition>using lava::hex_doubled_coord =  hex_offset_coord</definition>
        <argsstring></argsstring>
        <name>hex_doubled_coord</name>
        <qualifiedname>lava::hex_doubled_coord</qualifiedname>
        <briefdescription>
<para>Hex doubled coordinates. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/hex.hpp" line="170" column="1" bodyfile="liblava/util/hex.hpp" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="log_8hpp_1a7b6c44303d3171ad98904b82bed1e31c" prot="public" static="no">
        <type>std::shared_ptr&lt; spdlog::logger &gt;</type>
        <definition>using lava::s_logger =  std::shared_ptr&lt;spdlog::logger&gt;</definition>
        <argsstring></argsstring>
        <name>s_logger</name>
        <qualifiedname>lava::s_logger</qualifiedname>
        <briefdescription>
<para>Logger. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/log.hpp" line="19" column="1" bodyfile="liblava/util/log.hpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="math_8hpp_1a4e3a0adf51090a120cdae77cc06ec2a1" prot="public" static="no">
        <type>glm::vec2</type>
        <definition>using lava::v2 =  glm::vec2</definition>
        <argsstring></argsstring>
        <name>v2</name>
        <qualifiedname>lava::v2</qualifiedname>
        <briefdescription>
<para>Vector 2D. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/math.hpp" line="22" column="1" bodyfile="liblava/util/math.hpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="math_8hpp_1a4384995facacf81c4762b81285341e78" prot="public" static="no">
        <type>glm::vec3</type>
        <definition>using lava::v3 =  glm::vec3</definition>
        <argsstring></argsstring>
        <name>v3</name>
        <qualifiedname>lava::v3</qualifiedname>
        <briefdescription>
<para>Vector 3D. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/math.hpp" line="25" column="1" bodyfile="liblava/util/math.hpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="math_8hpp_1a43bc972887896e505e428d6c7a426324" prot="public" static="no">
        <type>glm::vec4</type>
        <definition>using lava::v4 =  glm::vec4</definition>
        <argsstring></argsstring>
        <name>v4</name>
        <qualifiedname>lava::v4</qualifiedname>
        <briefdescription>
<para>Vector 4D. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/math.hpp" line="28" column="1" bodyfile="liblava/util/math.hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="math_8hpp_1ad63e913ea06491bbe4e45588b35587df" prot="public" static="no">
        <type>glm::uvec2</type>
        <definition>using lava::uv2 =  glm::uvec2</definition>
        <argsstring></argsstring>
        <name>uv2</name>
        <qualifiedname>lava::uv2</qualifiedname>
        <briefdescription>
<para>UV pair. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/math.hpp" line="31" column="1" bodyfile="liblava/util/math.hpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="math_8hpp_1a9f15b92db378c4620d41e072a530d0df" prot="public" static="no">
        <type>glm::mat3</type>
        <definition>using lava::mat3 =  glm::mat3</definition>
        <argsstring></argsstring>
        <name>mat3</name>
        <qualifiedname>lava::mat3</qualifiedname>
        <briefdescription>
<para>Matrix 3x3. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/math.hpp" line="34" column="1" bodyfile="liblava/util/math.hpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="math_8hpp_1a07245a7b7cef276ff8ce545d92519604" prot="public" static="no">
        <type>glm::mat4</type>
        <definition>using lava::mat4 =  glm::mat4</definition>
        <argsstring></argsstring>
        <name>mat4</name>
        <qualifiedname>lava::mat4</qualifiedname>
        <briefdescription>
<para>Matrix 4x4. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/math.hpp" line="37" column="1" bodyfile="liblava/util/math.hpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="math_8hpp_1ab2e34b7023f2e4da184beb734a31ee11" prot="public" static="no">
        <type>glm::ivec2</type>
        <definition>using lava::iv2 =  glm::ivec2</definition>
        <argsstring></argsstring>
        <name>iv2</name>
        <qualifiedname>lava::iv2</qualifiedname>
        <briefdescription>
<para>Integer vector 2D. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/math.hpp" line="40" column="1" bodyfile="liblava/util/math.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="math_8hpp_1aad07ac9f8537f6d9ddf687d152431200" prot="public" static="no">
        <type>glm::ivec3</type>
        <definition>using lava::iv3 =  glm::ivec3</definition>
        <argsstring></argsstring>
        <name>iv3</name>
        <qualifiedname>lava::iv3</qualifiedname>
        <briefdescription>
<para>Integer vector 3D. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/math.hpp" line="43" column="1" bodyfile="liblava/util/math.hpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="telegram_8hpp_1adc5d467e5360109773d4eed7e273255d" prot="public" static="no">
        <type>std::any</type>
        <definition>using lava::any =  std::any</definition>
        <argsstring></argsstring>
        <name>any</name>
        <qualifiedname>lava::any</qualifiedname>
        <briefdescription>
<para>Any type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/telegram.hpp" line="21" column="1" bodyfile="liblava/util/telegram.hpp" bodystart="21" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="icon_8hpp_1a150895e8428fda8d931400602f327b90" prot="public" static="no" constexpr="yes" mutable="no">
        <type><ref refid="types_8hpp_1a4d505d1722d977311ee2a14d104f10f3" kindref="member">uchar</ref></type>
        <definition>uchar lava::icon_png[]</definition>
        <argsstring>[]</argsstring>
        <name>icon_png</name>
        <qualifiedname>lava::icon_png</qualifiedname>
        <briefdescription>
<para>App default icon data Generate: xxd -i res/icon.png. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/app/icon.hpp" line="18" column="17" bodyfile="liblava/app/icon.hpp" bodystart="18" bodyend="1166"/>
      </memberdef>
      <memberdef kind="variable" id="icon_8hpp_1a5f114594212a4646afb3ce94120e817d" prot="public" static="no" constexpr="yes" mutable="no">
        <type><ref refid="types_8hpp_1ae3c4bbc50dd4583ab0df2c24c49a49c9" kindref="member">ui32</ref></type>
        <definition>ui32 lava::icon_png_len</definition>
        <argsstring></argsstring>
        <name>icon_png_len</name>
        <qualifiedname>lava::icon_png_len</qualifiedname>
        <initializer>= 13773</initializer>
        <briefdescription>
<para>App default icon data length. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/app/icon.hpp" line="1169" column="16" bodyfile="liblava/app/icon.hpp" bodystart="1169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="imgui_8hpp_1a038eae5884bdeed5f1d9162d34e521e2" prot="public" static="no" constexpr="yes" mutable="no">
        <type>const <ref refid="types_8hpp_1a3a32680a459890aa9c80b4f5533b3b1f" kindref="member">r32</ref></type>
        <definition>const r32 lava::default_imgui_font_size</definition>
        <argsstring></argsstring>
        <name>default_imgui_font_size</name>
        <qualifiedname>lava::default_imgui_font_size</qualifiedname>
        <initializer>= 18.f</initializer>
        <briefdescription>
<para>Default ImGui font size. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/app/imgui.hpp" line="25" column="21" bodyfile="liblava/app/imgui.hpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="base_2base_8hpp_1a5ce56ce5fa9324105cd58a0573b27d36" prot="public" static="no" constexpr="yes" mutable="no">
        <type>bool const</type>
        <definition>bool const lava::build_failed</definition>
        <argsstring></argsstring>
        <name>build_failed</name>
        <qualifiedname>lava::build_failed</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
<para>Build failed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/base.hpp" line="200" column="22" bodyfile="liblava/base/base.hpp" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="base_2base_8hpp_1a9113e4177ba920920f06df6a7bf39382" prot="public" static="no" constexpr="yes" mutable="no">
        <type>bool const</type>
        <definition>bool const lava::build_done</definition>
        <argsstring></argsstring>
        <name>build_done</name>
        <qualifiedname>lava::build_done</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
<para>Build done. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/base.hpp" line="203" column="22" bodyfile="liblava/base/base.hpp" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="base_2base_8hpp_1a013b3ebd3c49c600aded40f65edc7a9d" prot="public" static="no" constexpr="yes" mutable="no">
        <type><ref refid="types_8hpp_1ae3c4bbc50dd4583ab0df2c24c49a49c9" kindref="member">ui32</ref> const</type>
        <definition>ui32 const lava::Vk_Limit_DescriptorSets</definition>
        <argsstring></argsstring>
        <name>Vk_Limit_DescriptorSets</name>
        <qualifiedname>lava::Vk_Limit_DescriptorSets</qualifiedname>
        <initializer>= 4</initializer>
        <briefdescription>
<para>Limit of Vulkan description sets. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/base.hpp" line="238" column="22" bodyfile="liblava/base/base.hpp" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="base_2base_8hpp_1a480388d3b3e0e985af702c9403d4a7c5" prot="public" static="no" constexpr="yes" mutable="no">
        <type><ref refid="types_8hpp_1ae3c4bbc50dd4583ab0df2c24c49a49c9" kindref="member">ui32</ref> const</type>
        <definition>ui32 const lava::Vk_Limit_Bindings</definition>
        <argsstring></argsstring>
        <name>Vk_Limit_Bindings</name>
        <qualifiedname>lava::Vk_Limit_Bindings</qualifiedname>
        <initializer>= 16</initializer>
        <briefdescription>
<para>Limit of Vulkan bindings. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/base.hpp" line="241" column="22" bodyfile="liblava/base/base.hpp" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="base_2base_8hpp_1a89b84ce26c4099f5b7894facace71df5" prot="public" static="no" constexpr="yes" mutable="no">
        <type><ref refid="types_8hpp_1ae3c4bbc50dd4583ab0df2c24c49a49c9" kindref="member">ui32</ref> const</type>
        <definition>ui32 const lava::Vk_Limit_Attachments</definition>
        <argsstring></argsstring>
        <name>Vk_Limit_Attachments</name>
        <qualifiedname>lava::Vk_Limit_Attachments</qualifiedname>
        <initializer>= 8</initializer>
        <briefdescription>
<para>Limit of Vulkan attachments. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/base.hpp" line="244" column="22" bodyfile="liblava/base/base.hpp" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="base_2base_8hpp_1ab76e1c42f9b7e8110adf4677b9329d60" prot="public" static="no" constexpr="yes" mutable="no">
        <type><ref refid="types_8hpp_1ae3c4bbc50dd4583ab0df2c24c49a49c9" kindref="member">ui32</ref> const</type>
        <definition>ui32 const lava::Vk_Limit_VertexAttribs</definition>
        <argsstring></argsstring>
        <name>Vk_Limit_VertexAttribs</name>
        <qualifiedname>lava::Vk_Limit_VertexAttribs</qualifiedname>
        <initializer>= 16</initializer>
        <briefdescription>
<para>Limit of Vulkan vertex attributes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/base.hpp" line="247" column="22" bodyfile="liblava/base/base.hpp" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="base_2base_8hpp_1a73b2e4bc6ac162d3e220dead440586b6" prot="public" static="no" constexpr="yes" mutable="no">
        <type><ref refid="types_8hpp_1ae3c4bbc50dd4583ab0df2c24c49a49c9" kindref="member">ui32</ref> const</type>
        <definition>ui32 const lava::Vk_Limit_VertexBuffers</definition>
        <argsstring></argsstring>
        <name>Vk_Limit_VertexBuffers</name>
        <qualifiedname>lava::Vk_Limit_VertexBuffers</qualifiedname>
        <initializer>= 4</initializer>
        <briefdescription>
<para>Limit of Vulkan vertex buffers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/base.hpp" line="250" column="22" bodyfile="liblava/base/base.hpp" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="base_2base_8hpp_1a9b8f0c6649af56dc87910f3a33b9a6b1" prot="public" static="no" constexpr="yes" mutable="no">
        <type><ref refid="types_8hpp_1ae3c4bbc50dd4583ab0df2c24c49a49c9" kindref="member">ui32</ref> const</type>
        <definition>ui32 const lava::Vk_Limit_PushConstant_Size</definition>
        <argsstring></argsstring>
        <name>Vk_Limit_PushConstant_Size</name>
        <qualifiedname>lava::Vk_Limit_PushConstant_Size</qualifiedname>
        <initializer>= 128</initializer>
        <briefdescription>
<para>Limit of Vulkan push constant size. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/base.hpp" line="253" column="22" bodyfile="liblava/base/base.hpp" bodystart="253" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="base_2base_8hpp_1adbf9a98289504ad4fe87bb50a6aef9d2" prot="public" static="no" constexpr="yes" mutable="no">
        <type><ref refid="types_8hpp_1ae3c4bbc50dd4583ab0df2c24c49a49c9" kindref="member">ui32</ref> const</type>
        <definition>ui32 const lava::Vk_Limit_UBO_Size</definition>
        <argsstring></argsstring>
        <name>Vk_Limit_UBO_Size</name>
        <qualifiedname>lava::Vk_Limit_UBO_Size</qualifiedname>
        <initializer>= 16 * 1024</initializer>
        <briefdescription>
<para>Limit of Vulkan UBO size. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/base.hpp" line="256" column="22" bodyfile="liblava/base/base.hpp" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="queue_8hpp_1a9fd36ce00e5d8b978c6205ed8d2b74d9" prot="public" static="no" constexpr="yes" mutable="no">
        <type>VkQueueFlags const</type>
        <definition>VkQueueFlags const lava::default_queue_flags</definition>
        <argsstring></argsstring>
        <name>default_queue_flags</name>
        <qualifiedname>lava::default_queue_flags</qualifiedname>
        <initializer>= VK_QUEUE_GRAPHICS_BIT
                                                   | VK_QUEUE_COMPUTE_BIT
                                                   | VK_QUEUE_TRANSFER_BIT</initializer>
        <briefdescription>
<para>Default queue flags. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/queue.hpp" line="56" column="30" bodyfile="liblava/base/queue.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="id_8hpp_1aa17c8404456cc4dbfea9a0762a615de5" prot="public" static="no" constexpr="yes" mutable="no">
        <type><ref refid="structlava_1_1id" kindref="compound">id</ref> const</type>
        <definition>id const lava::undef_id</definition>
        <argsstring></argsstring>
        <name>undef_id</name>
        <qualifiedname>lava::undef_id</qualifiedname>
        <initializer>= <ref refid="structlava_1_1id" kindref="compound">id</ref>()</initializer>
        <briefdescription>
<para>Undefined id. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/id.hpp" line="92" column="20" bodyfile="liblava/core/id.hpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="misc_8hpp_1a5be6313e45fc6ae45fcd0b0d9b005ea6" prot="public" static="no" constexpr="yes" mutable="no">
        <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
        <definition>name lava::g_punctuation_marks_</definition>
        <argsstring></argsstring>
        <name>g_punctuation_marks_</name>
        <qualifiedname>lava::g_punctuation_marks_</qualifiedname>
        <initializer>= &quot;\&quot;\&apos;&quot;</initializer>
        <briefdescription>
<para>Punctuation marks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/misc.hpp" line="138" column="16" bodyfile="liblava/core/misc.hpp" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="time_8hpp_1a39ed948807608027e5388132ca978739" prot="public" static="no" constexpr="yes" mutable="no">
        <type><ref refid="time_8hpp_1a44912e21e239eb2372d12ebb2cb0ce24" kindref="member">seconds</ref> const</type>
        <definition>seconds const lava::one_second</definition>
        <argsstring></argsstring>
        <name>one_second</name>
        <qualifiedname>lava::one_second</qualifiedname>
        <initializer>= <ref refid="time_8hpp_1a44912e21e239eb2372d12ebb2cb0ce24" kindref="member">seconds</ref>(1)</initializer>
        <briefdescription>
<para>One second. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/time.hpp" line="36" column="25" bodyfile="liblava/core/time.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="time_8hpp_1a206f3112b3871d88333c93b934c9ddd8" prot="public" static="no" constexpr="yes" mutable="no">
        <type><ref refid="time_8hpp_1a8cc2ca1333c2a464b07f9c54326a4569" kindref="member">ms</ref> const</type>
        <definition>ms const lava::one_ms</definition>
        <argsstring></argsstring>
        <name>one_ms</name>
        <qualifiedname>lava::one_ms</qualifiedname>
        <initializer>= <ref refid="time_8hpp_1a8cc2ca1333c2a464b07f9c54326a4569" kindref="member">ms</ref>(1)</initializer>
        <briefdescription>
<para>One millisecond. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/time.hpp" line="39" column="20" bodyfile="liblava/core/time.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="time_8hpp_1ad18d86f53c5264d018a96d02444e7a89" prot="public" static="no" constexpr="yes" mutable="no">
        <type><ref refid="time_8hpp_1a8583565dc80df92137aee37ba544c024" kindref="member">us</ref> const</type>
        <definition>us const lava::one_us</definition>
        <argsstring></argsstring>
        <name>one_us</name>
        <qualifiedname>lava::one_us</qualifiedname>
        <initializer>= <ref refid="time_8hpp_1a8583565dc80df92137aee37ba544c024" kindref="member">us</ref>(1)</initializer>
        <briefdescription>
<para>One microsecond. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/time.hpp" line="42" column="20" bodyfile="liblava/core/time.hpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="types_8hpp_1a276426bd2813c3fc0cb1c6bf20a8cbae" prot="public" static="no" constexpr="yes" mutable="no">
        <type><ref refid="types_8hpp_1a7e5d7f16aff5126a54243302372b43b1" kindref="member">i32</ref> const</type>
        <definition>i32 const lava::undef</definition>
        <argsstring></argsstring>
        <name>undef</name>
        <qualifiedname>lava::undef</qualifiedname>
        <initializer>= -1</initializer>
        <briefdescription>
<para>Undefined value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="129" column="21" bodyfile="liblava/core/types.hpp" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="types_8hpp_1a90deae5aeca0497b3b7e6c6316ac5105" prot="public" static="no" constexpr="yes" mutable="no">
        <type><ref refid="types_8hpp_1a2a40eb7fccb1ebcfd58d6d4b7a078e5c" kindref="member">index</ref> const</type>
        <definition>index const lava::no_index</definition>
        <argsstring></argsstring>
        <name>no_index</name>
        <qualifiedname>lava::no_index</qualifiedname>
        <initializer>= 0xffffffff</initializer>
        <briefdescription>
<para>No index. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="138" column="23" bodyfile="liblava/core/types.hpp" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="types_8hpp_1aa6f0dfe4257894c2b7439582eeea0bec" prot="public" static="no" constexpr="yes" mutable="no">
        <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
        <definition>name lava::_lava_</definition>
        <argsstring></argsstring>
        <name>_lava_</name>
        <qualifiedname>lava::_lava_</qualifiedname>
        <initializer>= &quot;lava&quot;</initializer>
        <briefdescription>
<para>lava </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="180" column="16" bodyfile="liblava/core/types.hpp" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="types_8hpp_1a5463322f2e652628790c04fe97367db0" prot="public" static="no" constexpr="yes" mutable="no">
        <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
        <definition>name lava::_liblava_</definition>
        <argsstring></argsstring>
        <name>_liblava_</name>
        <qualifiedname>lava::_liblava_</qualifiedname>
        <initializer>= &quot;liblava&quot;</initializer>
        <briefdescription>
<para>liblava </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="183" column="16" bodyfile="liblava/core/types.hpp" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="types_8hpp_1ab60340ffa807e0a1c02cb8a37c96e81c" prot="public" static="no" constexpr="yes" mutable="no">
        <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
        <definition>name lava::_default_</definition>
        <argsstring></argsstring>
        <name>_default_</name>
        <qualifiedname>lava::_default_</qualifiedname>
        <initializer>= &quot;default&quot;</initializer>
        <briefdescription>
<para>default </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="186" column="16" bodyfile="liblava/core/types.hpp" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="version_8hpp_1a0af71ac2aa9615cbaa92b9337bf45dd1" prot="public" static="no" constexpr="yes" mutable="no">
        <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
        <definition>name lava::g_build_date</definition>
        <argsstring></argsstring>
        <name>g_build_date</name>
        <qualifiedname>lava::g_build_date</qualifiedname>
        <initializer>= LAVA_BUILD_DATE</initializer>
        <briefdescription>
<para>Build date. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/version.hpp" line="82" column="16" bodyfile="liblava/core/version.hpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="version_8hpp_1aea2bee6f19e0d06bb1965bff5e16148a" prot="public" static="no" constexpr="yes" mutable="no">
        <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
        <definition>name lava::g_build_time</definition>
        <argsstring></argsstring>
        <name>g_build_time</name>
        <qualifiedname>lava::g_build_time</qualifiedname>
        <initializer>= LAVA_BUILD_TIME</initializer>
        <briefdescription>
<para>Build time. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/version.hpp" line="85" column="16" bodyfile="liblava/core/version.hpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="engine_2engine_8hpp_1a3693e091c595f5fa78aebc1c05b50f3c" prot="public" static="no" constexpr="yes" mutable="no">
        <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
        <definition>name lava::_props_</definition>
        <argsstring></argsstring>
        <name>_props_</name>
        <qualifiedname>lava::_props_</qualifiedname>
        <initializer>= &quot;props&quot;</initializer>
        <briefdescription>
<para>config </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/engine/engine.hpp" line="17" column="16" bodyfile="liblava/engine/engine.hpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="producer_8hpp_1ae6e393ea9aa1e3acee7ad1d7c50cfb66" prot="public" static="no" constexpr="yes" mutable="no">
        <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
        <definition>name lava::_shader_path_</definition>
        <argsstring></argsstring>
        <name>_shader_path_</name>
        <qualifiedname>lava::_shader_path_</qualifiedname>
        <initializer>= &quot;shader/&quot;</initializer>
        <briefdescription>
<para>shader folder </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/engine/producer.hpp" line="16" column="16" bodyfile="liblava/engine/producer.hpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="producer_8hpp_1ac6146986ec25ff6c869aabde9484ee1a" prot="public" static="no" constexpr="yes" mutable="no">
        <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
        <definition>name lava::_temp_path_</definition>
        <argsstring></argsstring>
        <name>_temp_path_</name>
        <qualifiedname>lava::_temp_path_</qualifiedname>
        <initializer>= &quot;temp/&quot;</initializer>
        <briefdescription>
<para>temp folder </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/engine/producer.hpp" line="19" column="16" bodyfile="liblava/engine/producer.hpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="producer_8hpp_1a69ca1e4f41adc3320c17b59617608217" prot="public" static="no" constexpr="yes" mutable="no">
        <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
        <definition>name lava::_hash_json_</definition>
        <argsstring></argsstring>
        <name>_hash_json_</name>
        <qualifiedname>lava::_hash_json_</qualifiedname>
        <initializer>= &quot;hash.json&quot;</initializer>
        <briefdescription>
<para>hash file </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/engine/producer.hpp" line="22" column="16" bodyfile="liblava/engine/producer.hpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="file_2file_8hpp_1a5fd9c8afc71c65dcf9b5b38e0cae533c" prot="public" static="no" constexpr="yes" mutable="no">
        <type><ref refid="types_8hpp_1af894ded8dd233c6505155b19777af556" kindref="member">i64</ref> const</type>
        <definition>i64 const lava::file_error_result</definition>
        <argsstring></argsstring>
        <name>file_error_result</name>
        <qualifiedname>lava::file_error_result</qualifiedname>
        <initializer>= <ref refid="types_8hpp_1a276426bd2813c3fc0cb1c6bf20a8cbae" kindref="member">undef</ref></initializer>
        <briefdescription>
<para>File error result. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/file/file.hpp" line="28" column="21" bodyfile="liblava/file/file.hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="frame_2frame_8hpp_1a011162e4caccaff2090bb941a563d5fa" prot="public" static="no" constexpr="yes" mutable="no">
        <type>bool const</type>
        <definition>bool const lava::run_abort</definition>
        <argsstring></argsstring>
        <name>run_abort</name>
        <qualifiedname>lava::run_abort</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
<para>Run abort result. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/frame.hpp" line="90" column="22" bodyfile="liblava/frame/frame.hpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="frame_2frame_8hpp_1a777200fce6b1b289bc0739186ba3d788" prot="public" static="no" constexpr="yes" mutable="no">
        <type>bool const</type>
        <definition>bool const lava::run_continue</definition>
        <argsstring></argsstring>
        <name>run_continue</name>
        <qualifiedname>lava::run_continue</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
<para>Run continue result. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/frame.hpp" line="93" column="22" bodyfile="liblava/frame/frame.hpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="input_8hpp_1a355e51d18c6561c78d6fd901240d8db4" prot="public" static="no" constexpr="yes" mutable="no">
        <type>bool const</type>
        <definition>bool const lava::input_ignore</definition>
        <argsstring></argsstring>
        <name>input_ignore</name>
        <qualifiedname>lava::input_ignore</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
<para>Input ignore result. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/input.hpp" line="574" column="22" bodyfile="liblava/frame/input.hpp" bodystart="574" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="input_8hpp_1a59127ef2ef83bf0724cb6a55558502fb" prot="public" static="no" constexpr="yes" mutable="no">
        <type>bool const</type>
        <definition>bool const lava::input_done</definition>
        <argsstring></argsstring>
        <name>input_done</name>
        <qualifiedname>lava::input_done</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
<para>Input done result. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/input.hpp" line="577" column="22" bodyfile="liblava/frame/input.hpp" bodystart="577" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hex_8hpp_1a9e0563c523141e347ff5dba0e0dd54c6" prot="public" static="no" mutable="no">
        <type><ref refid="structlava_1_1hex__cell_1a7086bca7e865d99d7bccaf11a5bfde7d" kindref="member">hex_cell::list</ref> const</type>
        <definition>hex_cell::list const lava::hex_directions</definition>
        <argsstring></argsstring>
        <name>hex_directions</name>
        <qualifiedname>lava::hex_directions</qualifiedname>
        <initializer>{
    {1, 0, -1},
    {1, -1, 0},
    {0, -1, 1},
    {-1, 0, 1},
    {-1, 1, 0},
    {0, 1, -1}}</initializer>
        <briefdescription>
<para>List of hex directions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/hex.hpp" line="219" column="22" bodyfile="liblava/util/hex.hpp" bodystart="219" bodyend="225"/>
      </memberdef>
      <memberdef kind="variable" id="hex_8hpp_1a813c3a54be3abeb12fe6814fb84167b4" prot="public" static="no" mutable="no">
        <type><ref refid="structlava_1_1hex__cell_1a7086bca7e865d99d7bccaf11a5bfde7d" kindref="member">hex_cell::list</ref> const</type>
        <definition>hex_cell::list const lava::hex_diagonals</definition>
        <argsstring></argsstring>
        <name>hex_diagonals</name>
        <qualifiedname>lava::hex_diagonals</qualifiedname>
        <initializer>{
    {2, -1, -1},
    {-1, -2, 1},
    {-1, -1, 2},
    {-2, 1, 1},
    {-1, 2, -1},
    {1, 1, -2}}</initializer>
        <briefdescription>
<para>List of hex diagonals. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/hex.hpp" line="250" column="22" bodyfile="liblava/util/hex.hpp" bodystart="250" bodyend="256"/>
      </memberdef>
      <memberdef kind="variable" id="hex_8hpp_1a5d537da1c2076b8e4a95694c88758b5d" prot="public" static="no" mutable="no">
        <type><ref refid="structlava_1_1hex__orientation" kindref="compound">hex_orientation</ref> const</type>
        <definition>hex_orientation const lava::hex_layout_point_y</definition>
        <argsstring></argsstring>
        <name>hex_layout_point_y</name>
        <qualifiedname>lava::hex_layout_point_y</qualifiedname>
        <initializer>= {
    std::sqrt(3.f),
    std::sqrt(3.f) / 2.f,
    0.f,
    3.f / 2.f,
    std::sqrt(3.f) / 3.f,
    -1.f / 3.f,
    0.f,
    2.f / 3.f,
    0.5f}</initializer>
        <briefdescription>
<para>Hex point Y layout. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/hex.hpp" line="484" column="23" bodyfile="liblava/util/hex.hpp" bodystart="484" bodyend="493"/>
      </memberdef>
      <memberdef kind="variable" id="hex_8hpp_1a73418d6cc574517a81fad81c3818158f" prot="public" static="no" mutable="no">
        <type><ref refid="structlava_1_1hex__orientation" kindref="compound">hex_orientation</ref> const</type>
        <definition>hex_orientation const lava::hex_layout_flat</definition>
        <argsstring></argsstring>
        <name>hex_layout_flat</name>
        <qualifiedname>lava::hex_layout_flat</qualifiedname>
        <initializer>= {
    3.f / 2.f,
    0.f,
    std::sqrt(3.f) / 2.f,
    std::sqrt(3.f),
    2.f / 3.f,
    0.f,
    -1.f / 3.f,
    std::sqrt(3.f) / 3.f,
    0.f}</initializer>
        <briefdescription>
<para>Hex flat layout. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/hex.hpp" line="496" column="23" bodyfile="liblava/util/hex.hpp" bodystart="496" bodyend="505"/>
      </memberdef>
      <memberdef kind="variable" id="hex_8hpp_1a0f36d2510bc406178144b0eb524e67ad" prot="public" static="no" mutable="no">
        <type><ref refid="structlava_1_1hex__cell_1a7086bca7e865d99d7bccaf11a5bfde7d" kindref="member">hex_cell::list</ref> const</type>
        <definition>hex_cell::list const lava::hex_cardinal_directions</definition>
        <argsstring></argsstring>
        <name>hex_cardinal_directions</name>
        <qualifiedname>lava::hex_cardinal_directions</qualifiedname>
        <initializer>{
    {1, 0, -1},
    {0, 1, -1},
    {-1, 1, 0},
    {-1, 0, 1},
    {0, -1, 1},
    {1, -1, 0}}</initializer>
        <briefdescription>
<para>List of hex cardinal directions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/hex.hpp" line="635" column="22" bodyfile="liblava/util/hex.hpp" bodystart="635" bodyend="641"/>
      </memberdef>
      <memberdef kind="variable" id="hex_8hpp_1a0bc43ac417551495eb0dd2c587afa071" prot="public" static="no" constexpr="yes" mutable="no">
        <type><ref refid="types_8hpp_1a3a32680a459890aa9c80b4f5533b3b1f" kindref="member">r32</ref> const</type>
        <definition>r32 const lava::hex_inner_radius_factor</definition>
        <argsstring></argsstring>
        <name>hex_inner_radius_factor</name>
        <qualifiedname>lava::hex_inner_radius_factor</qualifiedname>
        <initializer>= 0.866025404f</initializer>
        <briefdescription>
<para>Hex inner radius factor = sqrt(3) / 2. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/hex.hpp" line="665" column="21" bodyfile="liblava/util/hex.hpp" bodystart="665" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hex_8hpp_1a56f700cb1f640b51f18963e2b63649ae" prot="public" static="no" constexpr="yes" mutable="no">
        <type><ref refid="types_8hpp_1a3a32680a459890aa9c80b4f5533b3b1f" kindref="member">r32</ref> const</type>
        <definition>r32 const lava::hex_default_outer_radius</definition>
        <argsstring></argsstring>
        <name>hex_default_outer_radius</name>
        <qualifiedname>lava::hex_default_outer_radius</qualifiedname>
        <initializer>= 1.f</initializer>
        <briefdescription>
<para>Hex default outer radius. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/hex.hpp" line="668" column="21" bodyfile="liblava/util/hex.hpp" bodystart="668" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="math_8hpp_1afe888185f07103e7eee3daa64a4e0f04" prot="public" static="no" mutable="no">
        <type><ref refid="math_8hpp_1a4384995facacf81c4762b81285341e78" kindref="member">v3</ref> const</type>
        <definition>v3 const lava::default_color</definition>
        <argsstring></argsstring>
        <name>default_color</name>
        <qualifiedname>lava::default_color</qualifiedname>
        <initializer>= <ref refid="math_8hpp_1a4384995facacf81c4762b81285341e78" kindref="member">v3</ref>{0.8118f,
                            0.0627f,
                            0.1255f}</initializer>
        <briefdescription>
<para>Default color (Lava color: CF1020 : 207, 16, 32) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/math.hpp" line="169" column="10" bodyfile="liblava/util/math.hpp" bodystart="169" bodyend="171"/>
      </memberdef>
      <memberdef kind="variable" id="telegram_8hpp_1aeaf361a2570ec05ed4abfe9db5d5508e" prot="public" static="no" constexpr="yes" mutable="no">
        <type><ref refid="time_8hpp_1a8cc2ca1333c2a464b07f9c54326a4569" kindref="member">ms</ref> const</type>
        <definition>ms const lava::telegram_min_delay</definition>
        <argsstring></argsstring>
        <name>telegram_min_delay</name>
        <qualifiedname>lava::telegram_min_delay</qualifiedname>
        <initializer>{250}</initializer>
        <briefdescription>
<para>Minimal telegram delay in milliseconds. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/telegram.hpp" line="18" column="20" bodyfile="liblava/util/telegram.hpp" bodystart="18" bodyend="18"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="benchmark_8hpp_1acc2e1297ee044efbd2cb4883acad0dac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lava::parse_benchmark</definition>
        <argsstring>(cmd_line cmd_line, benchmark_data &amp;data)</argsstring>
        <name>parse_benchmark</name>
        <qualifiedname>lava::parse_benchmark</qualifiedname>
        <param>
          <type><ref refid="argh_8hpp_1a0ec69c8269dd4598981cbfeea2cc88d1" kindref="member">cmd_line</ref></type>
          <declname>cmd_line</declname>
        </param>
        <param>
          <type><ref refid="structlava_1_1benchmark__data" kindref="compound">benchmark_data</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Parse command line arguments and set benchmark data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmd_line</parametername>
</parameternamelist>
<parameterdescription>
<para>Command line arguments </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Benchmark data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Benchmark data is parsed or not ready </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/app/benchmark.hpp" line="56" column="6" declfile="liblava/app/benchmark.hpp" declline="56" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="benchmark_8hpp_1a4dc6d3014c95c22833dee1abb757d88b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lava::benchmark</definition>
        <argsstring>(frame &amp;app, benchmark_data &amp;data)</argsstring>
        <name>benchmark</name>
        <qualifiedname>lava::benchmark</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1frame" kindref="compound">frame</ref> &amp;</type>
          <declname>app</declname>
        </param>
        <param>
          <type><ref refid="structlava_1_1benchmark__data" kindref="compound">benchmark_data</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Start a benchmark run. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>app</parametername>
</parameternamelist>
<parameterdescription>
<para>App to benchmark </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Benchmark data setting </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/app/benchmark.hpp" line="63" column="6" declfile="liblava/app/benchmark.hpp" declline="63" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="benchmark_8hpp_1a4983ef01641b0d4f525cbaa0b4e090ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lava::write_frames_json</definition>
        <argsstring>(benchmark_data &amp;data)</argsstring>
        <name>write_frames_json</name>
        <qualifiedname>lava::write_frames_json</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1benchmark__data" kindref="compound">benchmark_data</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Write frames to json file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Benchmark data setting </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Write was successful or failed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/app/benchmark.hpp" line="70" column="6" declfile="liblava/app/benchmark.hpp" declline="70" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="config_8hpp_1aad95a34591ffc7d28083692b53ea99e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_window_icon</definition>
        <argsstring>(window &amp;window, string_ref icon_file=&quot;icon.png&quot;)</argsstring>
        <name>set_window_icon</name>
        <qualifiedname>lava::set_window_icon</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1window" kindref="compound">window</ref> &amp;</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a01c2a7bfa24e7ea76ef5a79d8d4daaf6" kindref="member">string_ref</ref></type>
          <declname>icon_file</declname>
          <defval>&quot;icon.png&quot;</defval>
        </param>
        <briefdescription>
<para>Set the window icon. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>Target window </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>icon_file</parametername>
</parameternamelist>
<parameterdescription>
<para>Icon file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/app/config.hpp" line="77" column="6" declfile="liblava/app/config.hpp" declline="77" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="imgui_8hpp_1ae93b1f65953d237670f6c6432a5b05e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lava::setup_imgui_font</definition>
        <argsstring>(imgui::config &amp;config, imgui::font::ref font)</argsstring>
        <name>setup_imgui_font</name>
        <qualifiedname>lava::setup_imgui_font</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1imgui_1_1config" kindref="compound">imgui::config</ref> &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type><ref refid="structlava_1_1imgui_1_1font_1a508c5bf4dea805b81f90e7c30e0194fe" kindref="member">imgui::font::ref</ref></type>
          <declname>font</declname>
        </param>
        <briefdescription>
<para>Set up ImGui font. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>ImGui configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>font</parametername>
</parameternamelist>
<parameterdescription>
<para>ImGui font </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/app/imgui.hpp" line="403" column="6" declfile="liblava/app/imgui.hpp" declline="403" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="imgui_8hpp_1a78f52c3853e8fa7daefcb96a3e99b442" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lava::setup_imgui_font_icons</definition>
        <argsstring>(imgui::font &amp;font, string filename, ui16 min, ui16 max)</argsstring>
        <name>setup_imgui_font_icons</name>
        <qualifiedname>lava::setup_imgui_font_icons</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1imgui_1_1font" kindref="compound">imgui::font</ref> &amp;</type>
          <declname>font</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a56891e6c1c56efa24abd6b84f71d9145" kindref="member">string</ref></type>
          <declname>filename</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a9726d8b17deae0ffa37db333759f197f" kindref="member">ui16</ref></type>
          <declname>min</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a9726d8b17deae0ffa37db333759f197f" kindref="member">ui16</ref></type>
          <declname>max</declname>
        </param>
        <briefdescription>
<para>Set up imgui font icons. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>font</parametername>
</parameternamelist>
<parameterdescription>
<para>Imgui font </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Font icon file name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min</parametername>
</parameternamelist>
<parameterdescription>
<para>Min range </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>Max range </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/app/imgui.hpp" line="413" column="6" declfile="liblava/app/imgui.hpp" declline="413" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="imgui_8hpp_1a3a5f26a1f68ebeb71ccb6becc4cb667b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lava::imgui_left_spacing</definition>
        <argsstring>(ui32 top=1)</argsstring>
        <name>imgui_left_spacing</name>
        <qualifiedname>lava::imgui_left_spacing</qualifiedname>
        <param>
          <type><ref refid="types_8hpp_1ae3c4bbc50dd4583ab0df2c24c49a49c9" kindref="member">ui32</ref></type>
          <declname>top</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>ImGui left spacing with top offset. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>top</parametername>
</parameternamelist>
<parameterdescription>
<para>Top offset </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/app/imgui.hpp" line="421" column="6" declfile="liblava/app/imgui.hpp" declline="421" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="load__image_8hpp_1a3acab89979010ebd16f3cd73ce8208e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structlava_1_1image__data_1ac9b1dc454efa428bdca20abbc8b077f5" kindref="member">image_data::s_ptr</ref></type>
        <definition>image_data::s_ptr lava::load_image</definition>
        <argsstring>(string_ref filename)</argsstring>
        <name>load_image</name>
        <qualifiedname>lava::load_image</qualifiedname>
        <param>
          <type><ref refid="types_8hpp_1a01c2a7bfa24e7ea76ef5a79d8d4daaf6" kindref="member">string_ref</ref></type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Load image data from file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>File to load </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structlava_1_1image__data_1ac9b1dc454efa428bdca20abbc8b077f5" kindref="member">image_data::s_ptr</ref> Loaded image </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/asset/load_image.hpp" line="19" column="19" declfile="liblava/asset/load_image.hpp" declline="19" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="load__image_8hpp_1a6beba3ce3542a17086a8bc480e73b4a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structlava_1_1image__data_1ac9b1dc454efa428bdca20abbc8b077f5" kindref="member">image_data::s_ptr</ref></type>
        <definition>image_data::s_ptr lava::load_image</definition>
        <argsstring>(c_data::ref data)</argsstring>
        <name>load_image</name>
        <qualifiedname>lava::load_image</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1c__data_1af79805daac5977755e5636b86b97c9d6" kindref="member">c_data::ref</ref></type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Load image data from memory. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Memory data to load </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structlava_1_1image__data_1ac9b1dc454efa428bdca20abbc8b077f5" kindref="member">image_data::s_ptr</ref> Loaded image </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/asset/load_image.hpp" line="26" column="19" declfile="liblava/asset/load_image.hpp" declline="26" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="load__mesh_8hpp_1a3bb6d762c88cb4bf27e5b571162acf36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structlava_1_1mesh__template_1aeeef7bb3ec744b5281a113e570bd6988" kindref="member">mesh::s_ptr</ref></type>
        <definition>mesh::s_ptr lava::load_mesh</definition>
        <argsstring>(device::ptr device, string_ref filename, string_ref temp_dir)</argsstring>
        <name>load_mesh</name>
        <qualifiedname>lava::load_mesh</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1device_1a6f7d378ef30e7bf1cd4fe208de859250" kindref="member">device::ptr</ref></type>
          <declname>device</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a01c2a7bfa24e7ea76ef5a79d8d4daaf6" kindref="member">string_ref</ref></type>
          <declname>filename</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a01c2a7bfa24e7ea76ef5a79d8d4daaf6" kindref="member">string_ref</ref></type>
          <declname>temp_dir</declname>
        </param>
        <briefdescription>
<para>Load mesh from file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>Vulkan device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>File to load </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>temp_dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Temporary directory </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structlava_1_1mesh__template_1aeeef7bb3ec744b5281a113e570bd6988" kindref="member">mesh::s_ptr</ref> Loaded mesh </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/asset/load_mesh.hpp" line="21" column="13" declfile="liblava/asset/load_mesh.hpp" declline="21" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="load__texture_8hpp_1a4fc9c0c843b346968a3fbf21186035c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structlava_1_1texture_1a0fd62a3dd974f573e5134ed498140360" kindref="member">texture::s_ptr</ref></type>
        <definition>texture::s_ptr lava::load_texture</definition>
        <argsstring>(device::ptr device, texture_file tex_file, texture_type type=texture_type::tex_2d)</argsstring>
        <name>load_texture</name>
        <qualifiedname>lava::load_texture</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1device_1a6f7d378ef30e7bf1cd4fe208de859250" kindref="member">device::ptr</ref></type>
          <declname>device</declname>
        </param>
        <param>
          <type><ref refid="structlava_1_1texture__file" kindref="compound">texture_file</ref></type>
          <declname>tex_file</declname>
        </param>
        <param>
          <type><ref refid="texture_8hpp_1abdcbbefe88a74313afdf6bf806ff3ec5" kindref="member">texture_type</ref></type>
          <declname>type</declname>
          <defval>texture_type::tex_2d</defval>
        </param>
        <briefdescription>
<para>Load texture from file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>Vulkan device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tex_file</parametername>
</parameternamelist>
<parameterdescription>
<para>Texture file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of texture </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structlava_1_1texture_1a0fd62a3dd974f573e5134ed498140360" kindref="member">texture::s_ptr</ref> Loaded texture </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/asset/load_texture.hpp" line="21" column="16" declfile="liblava/asset/load_texture.hpp" declline="21" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="load__texture_8hpp_1a473d03136bc6b702ba339aa41bbb0450" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlava_1_1texture_1a0fd62a3dd974f573e5134ed498140360" kindref="member">texture::s_ptr</ref></type>
        <definition>texture::s_ptr lava::load_texture</definition>
        <argsstring>(device::ptr device, string_ref filename, VkFormat format=VK_FORMAT_R8G8B8A8_SRGB, texture_type type=texture_type::tex_2d)</argsstring>
        <name>load_texture</name>
        <qualifiedname>lava::load_texture</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1device_1a6f7d378ef30e7bf1cd4fe208de859250" kindref="member">device::ptr</ref></type>
          <declname>device</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a01c2a7bfa24e7ea76ef5a79d8d4daaf6" kindref="member">string_ref</ref></type>
          <declname>filename</declname>
        </param>
        <param>
          <type>VkFormat</type>
          <declname>format</declname>
          <defval>VK_FORMAT_R8G8B8A8_SRGB</defval>
        </param>
        <param>
          <type><ref refid="texture_8hpp_1abdcbbefe88a74313afdf6bf806ff3ec5" kindref="member">texture_type</ref></type>
          <declname>type</declname>
          <defval>texture_type::tex_2d</defval>
        </param>
        <briefdescription>
<para>Load texture from file with default format (sRGB) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>Vulkan device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>File to load </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>Format of texture </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of texture </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structlava_1_1texture_1a0fd62a3dd974f573e5134ed498140360" kindref="member">texture::s_ptr</ref> Loaded texture </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/asset/load_texture.hpp" line="33" column="23" bodyfile="liblava/asset/load_texture.hpp" bodystart="33" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="load__texture_8hpp_1aa171c067eefd2990b38fd34b6a434da5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structlava_1_1texture_1a0fd62a3dd974f573e5134ed498140360" kindref="member">texture::s_ptr</ref></type>
        <definition>texture::s_ptr lava::create_default_texture</definition>
        <argsstring>(device::ptr device, uv2 size={512, 512}, v3 color=v3(1.f), r32 alpha=0.7529f)</argsstring>
        <name>create_default_texture</name>
        <qualifiedname>lava::create_default_texture</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1device_1a6f7d378ef30e7bf1cd4fe208de859250" kindref="member">device::ptr</ref></type>
          <declname>device</declname>
        </param>
        <param>
          <type><ref refid="math_8hpp_1ad63e913ea06491bbe4e45588b35587df" kindref="member">uv2</ref></type>
          <declname>size</declname>
          <defval>{512, 512}</defval>
        </param>
        <param>
          <type><ref refid="math_8hpp_1a4384995facacf81c4762b81285341e78" kindref="member">v3</ref></type>
          <declname>color</declname>
          <defval><ref refid="math_8hpp_1a4384995facacf81c4762b81285341e78" kindref="member">v3</ref>(1.f)</defval>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a3a32680a459890aa9c80b4f5533b3b1f" kindref="member">r32</ref></type>
          <declname>alpha</declname>
          <defval>0.7529f</defval>
        </param>
        <briefdescription>
<para>Create a default texture with checkerboard pattern. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>Vulkan device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of texture </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Color of texture </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>Alpha value of texture </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structlava_1_1texture_1a0fd62a3dd974f573e5134ed498140360" kindref="member">texture::s_ptr</ref> Loaded texture </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/asset/load_texture.hpp" line="48" column="16" declfile="liblava/asset/load_texture.hpp" declline="48" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="write__image_8hpp_1a900c0f58630db722de2273738e55ff77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lava::write_image_png</definition>
        <argsstring>(device::ptr device, image::s_ptr image, string_ref filename, bool swizzle)</argsstring>
        <name>write_image_png</name>
        <qualifiedname>lava::write_image_png</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1device_1a6f7d378ef30e7bf1cd4fe208de859250" kindref="member">device::ptr</ref></type>
          <declname>device</declname>
        </param>
        <param>
          <type><ref refid="structlava_1_1image_1a3268e2cf1bd3e74a86e42ddf8255c8bc" kindref="member">image::s_ptr</ref></type>
          <declname>image</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a01c2a7bfa24e7ea76ef5a79d8d4daaf6" kindref="member">string_ref</ref></type>
          <declname>filename</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>swizzle</declname>
        </param>
        <briefdescription>
<para>Write image data to png file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>Vulkan device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>image</parametername>
</parameternamelist>
<parameterdescription>
<para>Image to write </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>File to write </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>swizzle</parametername>
</parameternamelist>
<parameterdescription>
<para>Swizzle data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Write was successful or failed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/asset/write_image.hpp" line="22" column="6" declfile="liblava/asset/write_image.hpp" declline="22" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="base_2base_8hpp_1aacf9ec688051b9b2607db92396055d40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lava::check</definition>
        <argsstring>(VkResult result)</argsstring>
        <name>check</name>
        <qualifiedname>lava::check</qualifiedname>
        <param>
          <type>VkResult</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Check a Vulkan result. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>Result to check </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Okay or error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/base.hpp" line="124" column="6" declfile="liblava/base/base.hpp" declline="124" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="base_2base_8hpp_1a8c33378c47aea22ea0734f005f3160f6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool lava::failed</definition>
        <argsstring>(VkResult result)</argsstring>
        <name>failed</name>
        <qualifiedname>lava::failed</qualifiedname>
        <param>
          <type>VkResult</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Check if a Vulkan result failed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>Result to check </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Error or okay </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/base.hpp" line="131" column="13" bodyfile="liblava/base/base.hpp" bodystart="131" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="base_2base_8hpp_1a7f77a3e2fd6478b5d5c013607ec5bd8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="types_8hpp_1a56891e6c1c56efa24abd6b84f71d9145" kindref="member">string</ref></type>
        <definition>string lava::to_string</definition>
        <argsstring>(VkResult result)</argsstring>
        <name>to_string</name>
        <qualifiedname>lava::to_string</qualifiedname>
        <param>
          <type>VkResult</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Convert a Vulkan result to string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>Result to convert </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>string String of result </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/base.hpp" line="140" column="8" declfile="liblava/base/base.hpp" declline="140" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="base_2base_8hpp_1a526fa4ab7b30e17635a0e5ff90a45b95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="types_8hpp_1a56891e6c1c56efa24abd6b84f71d9145" kindref="member">string</ref></type>
        <definition>string lava::vk_version_to_string</definition>
        <argsstring>(VkVersion version)</argsstring>
        <name>vk_version_to_string</name>
        <qualifiedname>lava::vk_version_to_string</qualifiedname>
        <param>
          <type><ref refid="base_2base_8hpp_1aa62af46b2c296b6d19f005d5fe760670" kindref="member">VkVersion</ref></type>
          <declname>version</declname>
        </param>
        <briefdescription>
<para>Convert a Vulkan version to string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>version</parametername>
</parameternamelist>
<parameterdescription>
<para>Version to convert </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>string String of version </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/base.hpp" line="147" column="8" declfile="liblava/base/base.hpp" declline="147" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="base_2base_8hpp_1ad57acb7f3e179f57808c9c815829bd9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="version_8hpp_1ad21c2311c0d3c020c4ee9a7179d3ea2a" kindref="member">sem_version</ref></type>
        <definition>sem_version lava::to_version</definition>
        <argsstring>(VkVersion version)</argsstring>
        <name>to_version</name>
        <qualifiedname>lava::to_version</qualifiedname>
        <param>
          <type><ref refid="base_2base_8hpp_1aa62af46b2c296b6d19f005d5fe760670" kindref="member">VkVersion</ref></type>
          <declname>version</declname>
        </param>
        <briefdescription>
<para>Convert a Vulkan version to semantic version. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>version</parametername>
</parameternamelist>
<parameterdescription>
<para>Vulkan version to convert </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>sem_version Converted semantic version </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/base.hpp" line="154" column="13" declfile="liblava/base/base.hpp" declline="154" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="base_2base_8hpp_1acfad760f57f7987fa3271302d4d8377e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="base_2base_8hpp_1aa62af46b2c296b6d19f005d5fe760670" kindref="member">VkVersion</ref></type>
        <definition>VkVersion lava::to_vk_version</definition>
        <argsstring>(sem_version version)</argsstring>
        <name>to_vk_version</name>
        <qualifiedname>lava::to_vk_version</qualifiedname>
        <param>
          <type><ref refid="version_8hpp_1ad21c2311c0d3c020c4ee9a7179d3ea2a" kindref="member">sem_version</ref></type>
          <declname>version</declname>
        </param>
        <briefdescription>
<para>Convert a semantic version to Vulkan version. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>version</parametername>
</parameternamelist>
<parameterdescription>
<para>Semantic version to convert </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>VkVersion Converted Vulkan version </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/base.hpp" line="161" column="11" declfile="liblava/base/base.hpp" declline="161" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="base_2base_8hpp_1a1a3d4cc6fbab4db2ed03ae3c2f7afd4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="base_2base_8hpp_1a1bf135e6f61f0448a2fca3fbb9cd825a" kindref="member">api_version</ref></type>
        <definition>api_version lava::to_api_version</definition>
        <argsstring>(VkVersion version)</argsstring>
        <name>to_api_version</name>
        <qualifiedname>lava::to_api_version</qualifiedname>
        <param>
          <type><ref refid="base_2base_8hpp_1aa62af46b2c296b6d19f005d5fe760670" kindref="member">VkVersion</ref></type>
          <declname>version</declname>
        </param>
        <briefdescription>
<para>Convert a Vulkan version to API version. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>version</parametername>
</parameternamelist>
<parameterdescription>
<para>Vulkan version to convert </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>api_version Converted API version </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/base.hpp" line="178" column="13" declfile="liblava/base/base.hpp" declline="178" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1a11514932c54311316ad01bf47c76479e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::begin_label</definition>
        <argsstring>(VkCommandBuffer cmd_buf, name label, v4 color)</argsstring>
        <name>begin_label</name>
        <qualifiedname>lava::begin_label</qualifiedname>
        <param>
          <type>VkCommandBuffer</type>
          <declname>cmd_buf</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
          <declname>label</declname>
        </param>
        <param>
          <type><ref refid="math_8hpp_1a43bc972887896e505e428d6c7a426324" kindref="member">v4</ref></type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1a11514932c54311316ad01bf47c76479e" kindref="member">begin_label</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="105" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="105" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1ab5e43f5658b8b2ca1b863c6bfc004120" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::end_label</definition>
        <argsstring>(VkCommandBuffer cmd_buf)</argsstring>
        <name>end_label</name>
        <qualifiedname>lava::end_label</qualifiedname>
        <param>
          <type>VkCommandBuffer</type>
          <declname>cmd_buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1ab5e43f5658b8b2ca1b863c6bfc004120" kindref="member">end_label</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="110" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="110" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1a3431b58eaf31d73206bdc46d2bbbe399" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::insert_label</definition>
        <argsstring>(VkCommandBuffer cmd_buf, name label, v4 color)</argsstring>
        <name>insert_label</name>
        <qualifiedname>lava::insert_label</qualifiedname>
        <param>
          <type>VkCommandBuffer</type>
          <declname>cmd_buf</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
          <declname>label</declname>
        </param>
        <param>
          <type><ref refid="math_8hpp_1a43bc972887896e505e428d6c7a426324" kindref="member">v4</ref></type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1a3431b58eaf31d73206bdc46d2bbbe399" kindref="member">insert_label</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="113" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="113" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1ab939e1f8857ce88f0d06da2310cf0a21" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::begin_label</definition>
        <argsstring>(VkQueue queue, name label, v4 color)</argsstring>
        <name>begin_label</name>
        <qualifiedname>lava::begin_label</qualifiedname>
        <param>
          <type>VkQueue</type>
          <declname>queue</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
          <declname>label</declname>
        </param>
        <param>
          <type><ref refid="math_8hpp_1a43bc972887896e505e428d6c7a426324" kindref="member">v4</ref></type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1a11514932c54311316ad01bf47c76479e" kindref="member">begin_label</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="118" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="118" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1ad6160e88f7bbbca581d6413260efb521" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::end_label</definition>
        <argsstring>(VkQueue queue)</argsstring>
        <name>end_label</name>
        <qualifiedname>lava::end_label</qualifiedname>
        <param>
          <type>VkQueue</type>
          <declname>queue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1ab5e43f5658b8b2ca1b863c6bfc004120" kindref="member">end_label</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="123" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="123" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1a74a4410e8e021a8197672a2b802c4bca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::insert_label</definition>
        <argsstring>(VkQueue queue, name label, v4 color)</argsstring>
        <name>insert_label</name>
        <qualifiedname>lava::insert_label</qualifiedname>
        <param>
          <type>VkQueue</type>
          <declname>queue</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
          <declname>label</declname>
        </param>
        <param>
          <type><ref refid="math_8hpp_1a43bc972887896e505e428d6c7a426324" kindref="member">v4</ref></type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1a3431b58eaf31d73206bdc46d2bbbe399" kindref="member">insert_label</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="126" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="126" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1ad4631d2dc8c7f4f5d29c89f4b82d5f8c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_object_name</definition>
        <argsstring>(VkDevice device, VkObjectType type, VkObjectHandle handle, name object)</argsstring>
        <name>set_object_name</name>
        <qualifiedname>lava::set_object_name</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkObjectType</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="base_2base_8hpp_1af34c931d2c918df380c5c7afba9fd1be" kindref="member">VkObjectHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1ad4631d2dc8c7f4f5d29c89f4b82d5f8c" kindref="member">set_object_name</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="131" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="131" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1a582601e7588ceb7c358c7ffb20804547" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_object_tag</definition>
        <argsstring>(VkDevice device, VkObjectType type, VkObjectHandle handle, ui64 name, void_c_ptr tag, size_t size)</argsstring>
        <name>set_object_tag</name>
        <qualifiedname>lava::set_object_tag</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkObjectType</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="base_2base_8hpp_1af34c931d2c918df380c5c7afba9fd1be" kindref="member">VkObjectHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1abd93cf188810a5c57f1e971c1ba12db6" kindref="member">ui64</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a100af5d025fb75927f65cb6f3fbc8e5c" kindref="member">void_c_ptr</ref></type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1a582601e7588ceb7c358c7ffb20804547" kindref="member">set_object_tag</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="137" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="137" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1ad5061ad46b6cd6193ad510db8f30e64f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_name</definition>
        <argsstring>(VkDevice device, VkObjectHandle handle, name object)</argsstring>
        <name>set_name</name>
        <qualifiedname>lava::set_name</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type><ref refid="base_2base_8hpp_1af34c931d2c918df380c5c7afba9fd1be" kindref="member">VkObjectHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
          <declname>object</declname>
        </param>
        <briefdescription>
<para>Set the object name. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkObjectType.html">https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkObjectType.html</ulink> </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>Vulkan device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Object handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="182" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="182" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1a22e5f44149477265ed78d8478acb682c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_tag</definition>
        <argsstring>(VkDevice device, VkObjectHandle handle, ui64 name, void_c_ptr tag, size_t size)</argsstring>
        <name>set_tag</name>
        <qualifiedname>lava::set_tag</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type><ref refid="base_2base_8hpp_1af34c931d2c918df380c5c7afba9fd1be" kindref="member">VkObjectHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1abd93cf188810a5c57f1e971c1ba12db6" kindref="member">ui64</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a100af5d025fb75927f65cb6f3fbc8e5c" kindref="member">void_c_ptr</ref></type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Set the object tag. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkObjectType.html">https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkObjectType.html</ulink> </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>Vulkan device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Object handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of tag </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tag</parametername>
</parameternamelist>
<parameterdescription>
<para>Tag data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of tag data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="200" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="200" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1a9ca6fb449238bc8f13143909a00b5662" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_instance_name</definition>
        <argsstring>(VkDevice device, VkInstance handle, name object)</argsstring>
        <name>set_instance_name</name>
        <qualifiedname>lava::set_instance_name</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkInstance</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1ad5061ad46b6cd6193ad510db8f30e64f" kindref="member">set_name()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="218" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="218" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1a862aefdda3a65568a86c3d9213b9d92f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_instance_tag</definition>
        <argsstring>(VkDevice device, VkInstance handle, ui64 name, void_c_ptr tag, size_t size)</argsstring>
        <name>set_instance_tag</name>
        <qualifiedname>lava::set_instance_tag</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkInstance</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1abd93cf188810a5c57f1e971c1ba12db6" kindref="member">ui64</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a100af5d025fb75927f65cb6f3fbc8e5c" kindref="member">void_c_ptr</ref></type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1a22e5f44149477265ed78d8478acb682c" kindref="member">set_tag()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="230" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="230" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1ab72267034c5c9b340a1afbc3799f6f47" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_physical_device_name</definition>
        <argsstring>(VkDevice device, VkPhysicalDevice handle, name object)</argsstring>
        <name>set_physical_device_name</name>
        <qualifiedname>lava::set_physical_device_name</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkPhysicalDevice</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1ad5061ad46b6cd6193ad510db8f30e64f" kindref="member">set_name()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="248" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="248" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1a71c63c74d9adb93042d268948afd9f6f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_physical_device_tag</definition>
        <argsstring>(VkDevice device, VkPhysicalDevice handle, ui64 name, void_c_ptr tag, size_t size)</argsstring>
        <name>set_physical_device_tag</name>
        <qualifiedname>lava::set_physical_device_tag</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkPhysicalDevice</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1abd93cf188810a5c57f1e971c1ba12db6" kindref="member">ui64</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a100af5d025fb75927f65cb6f3fbc8e5c" kindref="member">void_c_ptr</ref></type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1a22e5f44149477265ed78d8478acb682c" kindref="member">set_tag()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="260" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="260" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1acf17f194d476935553848fbd95fb3fe3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_device_name</definition>
        <argsstring>(VkDevice device, name object)</argsstring>
        <name>set_device_name</name>
        <qualifiedname>lava::set_device_name</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1ad5061ad46b6cd6193ad510db8f30e64f" kindref="member">set_name()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="278" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="278" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1a811cf474564ef3681e56d28db6971fa0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_device_tag</definition>
        <argsstring>(VkDevice device, ui64 name, void_c_ptr tag, size_t size)</argsstring>
        <name>set_device_tag</name>
        <qualifiedname>lava::set_device_tag</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1abd93cf188810a5c57f1e971c1ba12db6" kindref="member">ui64</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a100af5d025fb75927f65cb6f3fbc8e5c" kindref="member">void_c_ptr</ref></type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1a22e5f44149477265ed78d8478acb682c" kindref="member">set_tag()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="289" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="289" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1adec43fe09dfaac4e8b5873992352f9f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_queue_name</definition>
        <argsstring>(VkDevice device, VkQueue handle, name object)</argsstring>
        <name>set_queue_name</name>
        <qualifiedname>lava::set_queue_name</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkQueue</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1ad5061ad46b6cd6193ad510db8f30e64f" kindref="member">set_name()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="306" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="306" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1a02bef8712aba2026f5dfb21f23eb34c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_queue_tag</definition>
        <argsstring>(VkDevice device, VkQueue handle, ui64 name, void_c_ptr tag, size_t size)</argsstring>
        <name>set_queue_tag</name>
        <qualifiedname>lava::set_queue_tag</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkQueue</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1abd93cf188810a5c57f1e971c1ba12db6" kindref="member">ui64</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a100af5d025fb75927f65cb6f3fbc8e5c" kindref="member">void_c_ptr</ref></type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1a22e5f44149477265ed78d8478acb682c" kindref="member">set_tag()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="318" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="318" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1a113744f9cbe4b3de7daca899d8ed1cd6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_semaphore_name</definition>
        <argsstring>(VkDevice device, VkSemaphore handle, name object)</argsstring>
        <name>set_semaphore_name</name>
        <qualifiedname>lava::set_semaphore_name</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkSemaphore</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1ad5061ad46b6cd6193ad510db8f30e64f" kindref="member">set_name()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="336" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="336" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1af03957988af23d156e7d5232fbf0bfcb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_semaphore_tag</definition>
        <argsstring>(VkDevice device, VkSemaphore handle, ui64 name, void_c_ptr tag, size_t size)</argsstring>
        <name>set_semaphore_tag</name>
        <qualifiedname>lava::set_semaphore_tag</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkSemaphore</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1abd93cf188810a5c57f1e971c1ba12db6" kindref="member">ui64</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a100af5d025fb75927f65cb6f3fbc8e5c" kindref="member">void_c_ptr</ref></type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1a22e5f44149477265ed78d8478acb682c" kindref="member">set_tag()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="348" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="348" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1a9f91d723414960068dc43f2612f43ef2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_command_buffer_name</definition>
        <argsstring>(VkDevice device, VkCommandBuffer handle, name object)</argsstring>
        <name>set_command_buffer_name</name>
        <qualifiedname>lava::set_command_buffer_name</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkCommandBuffer</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1ad5061ad46b6cd6193ad510db8f30e64f" kindref="member">set_name()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="366" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="366" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1a54ea1f7216c749bc3e348955a1c23928" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_command_buffer_tag</definition>
        <argsstring>(VkDevice device, VkCommandBuffer handle, ui64 name, void_c_ptr tag, size_t size)</argsstring>
        <name>set_command_buffer_tag</name>
        <qualifiedname>lava::set_command_buffer_tag</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkCommandBuffer</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1abd93cf188810a5c57f1e971c1ba12db6" kindref="member">ui64</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a100af5d025fb75927f65cb6f3fbc8e5c" kindref="member">void_c_ptr</ref></type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1a22e5f44149477265ed78d8478acb682c" kindref="member">set_tag()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="378" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="378" bodyend="389"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1a1575aaf97b8ac41556bb6df89c6141a0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_fence_name</definition>
        <argsstring>(VkDevice device, VkFence handle, name object)</argsstring>
        <name>set_fence_name</name>
        <qualifiedname>lava::set_fence_name</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkFence</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1ad5061ad46b6cd6193ad510db8f30e64f" kindref="member">set_name()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="396" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="396" bodyend="403"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1a86425bab312d6cb90d339bc7c7a5c864" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_fence_tag</definition>
        <argsstring>(VkDevice device, VkFence handle, ui64 name, void_c_ptr tag, size_t size)</argsstring>
        <name>set_fence_tag</name>
        <qualifiedname>lava::set_fence_tag</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkFence</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1abd93cf188810a5c57f1e971c1ba12db6" kindref="member">ui64</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a100af5d025fb75927f65cb6f3fbc8e5c" kindref="member">void_c_ptr</ref></type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1a22e5f44149477265ed78d8478acb682c" kindref="member">set_tag()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="408" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="408" bodyend="419"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1a49ddcfde13928ab6be2fa31accef96a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_device_memory_name</definition>
        <argsstring>(VkDevice device, VkDeviceMemory handle, name object)</argsstring>
        <name>set_device_memory_name</name>
        <qualifiedname>lava::set_device_memory_name</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkDeviceMemory</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1ad5061ad46b6cd6193ad510db8f30e64f" kindref="member">set_name()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="426" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="426" bodyend="433"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1a9c4488cf6f8e876e9c0b02b0c0c73c35" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_device_memory_tag</definition>
        <argsstring>(VkDevice device, VkDeviceMemory handle, ui64 name, void_c_ptr tag, size_t size)</argsstring>
        <name>set_device_memory_tag</name>
        <qualifiedname>lava::set_device_memory_tag</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkDeviceMemory</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1abd93cf188810a5c57f1e971c1ba12db6" kindref="member">ui64</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a100af5d025fb75927f65cb6f3fbc8e5c" kindref="member">void_c_ptr</ref></type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1a22e5f44149477265ed78d8478acb682c" kindref="member">set_tag()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="438" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="438" bodyend="449"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1aa78eb0eda53c024afc7ad957e95cc47f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_buffer_name</definition>
        <argsstring>(VkDevice device, VkBuffer handle, name object)</argsstring>
        <name>set_buffer_name</name>
        <qualifiedname>lava::set_buffer_name</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkBuffer</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1ad5061ad46b6cd6193ad510db8f30e64f" kindref="member">set_name()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="456" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="456" bodyend="463"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1a9ec2b54864408523d1cdb87c9b4e94d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_buffer_tag</definition>
        <argsstring>(VkDevice device, VkBuffer handle, ui64 name, void_c_ptr tag, size_t size)</argsstring>
        <name>set_buffer_tag</name>
        <qualifiedname>lava::set_buffer_tag</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkBuffer</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1abd93cf188810a5c57f1e971c1ba12db6" kindref="member">ui64</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a100af5d025fb75927f65cb6f3fbc8e5c" kindref="member">void_c_ptr</ref></type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1a22e5f44149477265ed78d8478acb682c" kindref="member">set_tag()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="468" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="468" bodyend="479"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1a15cd6c2df3bdbf648f37e62bbe255a1d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_image_name</definition>
        <argsstring>(VkDevice device, VkImage handle, name object)</argsstring>
        <name>set_image_name</name>
        <qualifiedname>lava::set_image_name</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkImage</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1ad5061ad46b6cd6193ad510db8f30e64f" kindref="member">set_name()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="486" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="486" bodyend="493"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1aaa5966380e6e043ea0e4792064b3ed84" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_image_tag</definition>
        <argsstring>(VkDevice device, VkImage handle, ui64 name, void_c_ptr tag, size_t size)</argsstring>
        <name>set_image_tag</name>
        <qualifiedname>lava::set_image_tag</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkImage</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1abd93cf188810a5c57f1e971c1ba12db6" kindref="member">ui64</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a100af5d025fb75927f65cb6f3fbc8e5c" kindref="member">void_c_ptr</ref></type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1a22e5f44149477265ed78d8478acb682c" kindref="member">set_tag()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="498" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="498" bodyend="509"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1a5eb0028a9227a352df569313207ade61" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_event_name</definition>
        <argsstring>(VkDevice device, VkEvent handle, name object)</argsstring>
        <name>set_event_name</name>
        <qualifiedname>lava::set_event_name</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkEvent</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1ad5061ad46b6cd6193ad510db8f30e64f" kindref="member">set_name()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="516" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="516" bodyend="523"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1a139202bb6e639e9308fb547edf2eaa53" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_event_tag</definition>
        <argsstring>(VkDevice device, VkEvent handle, ui64 name, void_c_ptr tag, size_t size)</argsstring>
        <name>set_event_tag</name>
        <qualifiedname>lava::set_event_tag</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkEvent</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1abd93cf188810a5c57f1e971c1ba12db6" kindref="member">ui64</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a100af5d025fb75927f65cb6f3fbc8e5c" kindref="member">void_c_ptr</ref></type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1a22e5f44149477265ed78d8478acb682c" kindref="member">set_tag()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="528" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="528" bodyend="539"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1a6a958cf59787688161fb4d9bbfa2755f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_query_pool_name</definition>
        <argsstring>(VkDevice device, VkQueryPool handle, name object)</argsstring>
        <name>set_query_pool_name</name>
        <qualifiedname>lava::set_query_pool_name</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkQueryPool</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1ad5061ad46b6cd6193ad510db8f30e64f" kindref="member">set_name()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="546" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="546" bodyend="553"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1aa9ca12983959ede7f9364b12d8d7f5e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_query_pool_tag</definition>
        <argsstring>(VkDevice device, VkQueryPool handle, ui64 name, void_c_ptr tag, size_t size)</argsstring>
        <name>set_query_pool_tag</name>
        <qualifiedname>lava::set_query_pool_tag</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkQueryPool</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1abd93cf188810a5c57f1e971c1ba12db6" kindref="member">ui64</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a100af5d025fb75927f65cb6f3fbc8e5c" kindref="member">void_c_ptr</ref></type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1a22e5f44149477265ed78d8478acb682c" kindref="member">set_tag()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="558" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="558" bodyend="569"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1a5b32c4e749c554b97e058a3ab1ec077e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_buffer_view_name</definition>
        <argsstring>(VkDevice device, VkBufferView handle, name object)</argsstring>
        <name>set_buffer_view_name</name>
        <qualifiedname>lava::set_buffer_view_name</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkBufferView</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1ad5061ad46b6cd6193ad510db8f30e64f" kindref="member">set_name()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="576" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="576" bodyend="583"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1a919f769d89c6bdcc7ff7e8a007a47893" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_buffer_view_tag</definition>
        <argsstring>(VkDevice device, VkBufferView handle, ui64 name, void_c_ptr tag, size_t size)</argsstring>
        <name>set_buffer_view_tag</name>
        <qualifiedname>lava::set_buffer_view_tag</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkBufferView</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1abd93cf188810a5c57f1e971c1ba12db6" kindref="member">ui64</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a100af5d025fb75927f65cb6f3fbc8e5c" kindref="member">void_c_ptr</ref></type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1a22e5f44149477265ed78d8478acb682c" kindref="member">set_tag()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="588" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="588" bodyend="599"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1afa6d83d47cc29d0e41f865c264d2b267" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_image_view_name</definition>
        <argsstring>(VkDevice device, VkImageView handle, name object)</argsstring>
        <name>set_image_view_name</name>
        <qualifiedname>lava::set_image_view_name</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkImageView</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1ad5061ad46b6cd6193ad510db8f30e64f" kindref="member">set_name()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="606" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="606" bodyend="613"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1ad830d70d02c8c7c3c0cfcf2968bb1e29" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_image_view_tag</definition>
        <argsstring>(VkDevice device, VkImageView handle, ui64 name, void_c_ptr tag, size_t size)</argsstring>
        <name>set_image_view_tag</name>
        <qualifiedname>lava::set_image_view_tag</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkImageView</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1abd93cf188810a5c57f1e971c1ba12db6" kindref="member">ui64</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a100af5d025fb75927f65cb6f3fbc8e5c" kindref="member">void_c_ptr</ref></type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1a22e5f44149477265ed78d8478acb682c" kindref="member">set_tag()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="618" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="618" bodyend="629"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1af657ced147a13788fba6b16c241d6b2f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_shader_module_name</definition>
        <argsstring>(VkDevice device, VkShaderModule handle, name object)</argsstring>
        <name>set_shader_module_name</name>
        <qualifiedname>lava::set_shader_module_name</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkShaderModule</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1ad5061ad46b6cd6193ad510db8f30e64f" kindref="member">set_name()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="636" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="636" bodyend="643"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1a47b22a539da035dec2b42f6486eb6883" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_shader_module_tag</definition>
        <argsstring>(VkDevice device, VkShaderModule handle, ui64 name, void_c_ptr tag, size_t size)</argsstring>
        <name>set_shader_module_tag</name>
        <qualifiedname>lava::set_shader_module_tag</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkShaderModule</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1abd93cf188810a5c57f1e971c1ba12db6" kindref="member">ui64</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a100af5d025fb75927f65cb6f3fbc8e5c" kindref="member">void_c_ptr</ref></type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1a22e5f44149477265ed78d8478acb682c" kindref="member">set_tag()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="648" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="648" bodyend="659"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1a24d9f76f247afc9667acc39e6c452943" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_pipeline_cache_name</definition>
        <argsstring>(VkDevice device, VkPipelineCache handle, name object)</argsstring>
        <name>set_pipeline_cache_name</name>
        <qualifiedname>lava::set_pipeline_cache_name</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkPipelineCache</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1ad5061ad46b6cd6193ad510db8f30e64f" kindref="member">set_name()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="666" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="666" bodyend="673"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1a35913c6b5d166b0c65d6ad35beec0d9c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_pipeline_cache_tag</definition>
        <argsstring>(VkDevice device, VkPipelineCache handle, ui64 name, void_c_ptr tag, size_t size)</argsstring>
        <name>set_pipeline_cache_tag</name>
        <qualifiedname>lava::set_pipeline_cache_tag</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkPipelineCache</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1abd93cf188810a5c57f1e971c1ba12db6" kindref="member">ui64</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a100af5d025fb75927f65cb6f3fbc8e5c" kindref="member">void_c_ptr</ref></type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1a22e5f44149477265ed78d8478acb682c" kindref="member">set_tag()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="678" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="678" bodyend="689"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1af5cf190f01a235568236447afdf7a6af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_pipeline_layout_name</definition>
        <argsstring>(VkDevice device, VkPipelineLayout handle, name object)</argsstring>
        <name>set_pipeline_layout_name</name>
        <qualifiedname>lava::set_pipeline_layout_name</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkPipelineLayout</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1ad5061ad46b6cd6193ad510db8f30e64f" kindref="member">set_name()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="696" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="696" bodyend="703"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1add039348cf69867998cbd8d2019ac741" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_pipeline_layout_tag</definition>
        <argsstring>(VkDevice device, VkPipelineLayout handle, ui64 name, void_c_ptr tag, size_t size)</argsstring>
        <name>set_pipeline_layout_tag</name>
        <qualifiedname>lava::set_pipeline_layout_tag</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkPipelineLayout</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1abd93cf188810a5c57f1e971c1ba12db6" kindref="member">ui64</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a100af5d025fb75927f65cb6f3fbc8e5c" kindref="member">void_c_ptr</ref></type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1a22e5f44149477265ed78d8478acb682c" kindref="member">set_tag()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="708" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="708" bodyend="719"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1aaaca6badd896f2ca7c706b956af0812f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_render_pass_name</definition>
        <argsstring>(VkDevice device, VkRenderPass handle, name object)</argsstring>
        <name>set_render_pass_name</name>
        <qualifiedname>lava::set_render_pass_name</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkRenderPass</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1ad5061ad46b6cd6193ad510db8f30e64f" kindref="member">set_name()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="726" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="726" bodyend="733"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1a458ae9b600c853a03110a86e0d2de8be" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_render_pass_tag</definition>
        <argsstring>(VkDevice device, VkRenderPass handle, ui64 name, void_c_ptr tag, size_t size)</argsstring>
        <name>set_render_pass_tag</name>
        <qualifiedname>lava::set_render_pass_tag</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkRenderPass</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1abd93cf188810a5c57f1e971c1ba12db6" kindref="member">ui64</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a100af5d025fb75927f65cb6f3fbc8e5c" kindref="member">void_c_ptr</ref></type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1a22e5f44149477265ed78d8478acb682c" kindref="member">set_tag()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="738" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="738" bodyend="749"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1a75e72cd5e1e7c75f9cf78c78682b0e49" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_pipeline_name</definition>
        <argsstring>(VkDevice device, VkPipeline handle, name object)</argsstring>
        <name>set_pipeline_name</name>
        <qualifiedname>lava::set_pipeline_name</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkPipeline</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1ad5061ad46b6cd6193ad510db8f30e64f" kindref="member">set_name()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="756" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="756" bodyend="763"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1abdd596c299936ec4c11712c12c34d92d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_pipeline_tag</definition>
        <argsstring>(VkDevice device, VkPipeline handle, ui64 name, void_c_ptr tag, size_t size)</argsstring>
        <name>set_pipeline_tag</name>
        <qualifiedname>lava::set_pipeline_tag</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkPipeline</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1abd93cf188810a5c57f1e971c1ba12db6" kindref="member">ui64</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a100af5d025fb75927f65cb6f3fbc8e5c" kindref="member">void_c_ptr</ref></type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1a22e5f44149477265ed78d8478acb682c" kindref="member">set_tag()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="768" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="768" bodyend="779"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1a68bd37a2f9ca497e73c7a96bd18e5195" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_descriptor_set_layout_name</definition>
        <argsstring>(VkDevice device, VkDescriptorSetLayout handle, name object)</argsstring>
        <name>set_descriptor_set_layout_name</name>
        <qualifiedname>lava::set_descriptor_set_layout_name</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkDescriptorSetLayout</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1ad5061ad46b6cd6193ad510db8f30e64f" kindref="member">set_name()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="786" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="786" bodyend="793"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1a5a1598f49eba2a40fb60af25842c69f8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_descriptor_set_layout_tag</definition>
        <argsstring>(VkDevice device, VkDescriptorSetLayout handle, ui64 name, void_c_ptr tag, size_t size)</argsstring>
        <name>set_descriptor_set_layout_tag</name>
        <qualifiedname>lava::set_descriptor_set_layout_tag</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkDescriptorSetLayout</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1abd93cf188810a5c57f1e971c1ba12db6" kindref="member">ui64</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a100af5d025fb75927f65cb6f3fbc8e5c" kindref="member">void_c_ptr</ref></type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1a22e5f44149477265ed78d8478acb682c" kindref="member">set_tag()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="798" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="798" bodyend="809"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1a31d51c0c71b82a07f2c7c04a2eb89854" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_sampler_name</definition>
        <argsstring>(VkDevice device, VkSampler handle, name object)</argsstring>
        <name>set_sampler_name</name>
        <qualifiedname>lava::set_sampler_name</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkSampler</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1ad5061ad46b6cd6193ad510db8f30e64f" kindref="member">set_name()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="816" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="816" bodyend="823"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1a9d9377faf07558e0f9de38dab2eb9226" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_sampler_tag</definition>
        <argsstring>(VkDevice device, VkSampler handle, ui64 name, void_c_ptr tag, size_t size)</argsstring>
        <name>set_sampler_tag</name>
        <qualifiedname>lava::set_sampler_tag</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkSampler</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1abd93cf188810a5c57f1e971c1ba12db6" kindref="member">ui64</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a100af5d025fb75927f65cb6f3fbc8e5c" kindref="member">void_c_ptr</ref></type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1a22e5f44149477265ed78d8478acb682c" kindref="member">set_tag()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="828" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="828" bodyend="839"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1a4b7b8ce28933ac0d4e5f350738e142b6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_descriptor_pool_name</definition>
        <argsstring>(VkDevice device, VkDescriptorPool handle, name object)</argsstring>
        <name>set_descriptor_pool_name</name>
        <qualifiedname>lava::set_descriptor_pool_name</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkDescriptorPool</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1ad5061ad46b6cd6193ad510db8f30e64f" kindref="member">set_name()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="846" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="846" bodyend="853"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1af283dddf045048f67577b6eeb0581aba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_descriptor_pool_tag</definition>
        <argsstring>(VkDevice device, VkDescriptorPool handle, ui64 name, void_c_ptr tag, size_t size)</argsstring>
        <name>set_descriptor_pool_tag</name>
        <qualifiedname>lava::set_descriptor_pool_tag</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkDescriptorPool</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1abd93cf188810a5c57f1e971c1ba12db6" kindref="member">ui64</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a100af5d025fb75927f65cb6f3fbc8e5c" kindref="member">void_c_ptr</ref></type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1a22e5f44149477265ed78d8478acb682c" kindref="member">set_tag()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="858" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="858" bodyend="869"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1aa98b23878c543bc2fcc6797f689619db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_descriptor_set_name</definition>
        <argsstring>(VkDevice device, VkDescriptorSet handle, name object)</argsstring>
        <name>set_descriptor_set_name</name>
        <qualifiedname>lava::set_descriptor_set_name</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkDescriptorSet</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1ad5061ad46b6cd6193ad510db8f30e64f" kindref="member">set_name()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="876" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="876" bodyend="883"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1adc27541f09cd8c220da0f95674155136" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_descriptor_set_tag</definition>
        <argsstring>(VkDevice device, VkDescriptorSet handle, ui64 name, void_c_ptr tag, size_t size)</argsstring>
        <name>set_descriptor_set_tag</name>
        <qualifiedname>lava::set_descriptor_set_tag</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkDescriptorSet</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1abd93cf188810a5c57f1e971c1ba12db6" kindref="member">ui64</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a100af5d025fb75927f65cb6f3fbc8e5c" kindref="member">void_c_ptr</ref></type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1a22e5f44149477265ed78d8478acb682c" kindref="member">set_tag()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="888" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="888" bodyend="899"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1af3265a5a4f1288e9522ccb618038afe9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_framebuffer_name</definition>
        <argsstring>(VkDevice device, VkFramebuffer handle, name object)</argsstring>
        <name>set_framebuffer_name</name>
        <qualifiedname>lava::set_framebuffer_name</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkFramebuffer</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1ad5061ad46b6cd6193ad510db8f30e64f" kindref="member">set_name()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="906" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="906" bodyend="913"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1ae30fef0c60edfed034d80d87b50269f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_framebuffer_tag</definition>
        <argsstring>(VkDevice device, VkFramebuffer handle, ui64 name, void_c_ptr tag, size_t size)</argsstring>
        <name>set_framebuffer_tag</name>
        <qualifiedname>lava::set_framebuffer_tag</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkFramebuffer</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1abd93cf188810a5c57f1e971c1ba12db6" kindref="member">ui64</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a100af5d025fb75927f65cb6f3fbc8e5c" kindref="member">void_c_ptr</ref></type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1a22e5f44149477265ed78d8478acb682c" kindref="member">set_tag()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="918" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="918" bodyend="929"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1a515d5b38271de06c797fdc985206fb20" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_command_pool_name</definition>
        <argsstring>(VkDevice device, VkCommandPool handle, name object)</argsstring>
        <name>set_command_pool_name</name>
        <qualifiedname>lava::set_command_pool_name</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkCommandPool</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1ad5061ad46b6cd6193ad510db8f30e64f" kindref="member">set_name()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="936" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="936" bodyend="943"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1aad44711c9f4718f0d59d8a42f4fcca4c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_command_pool_tag</definition>
        <argsstring>(VkDevice device, VkCommandPool handle, ui64 name, void_c_ptr tag, size_t size)</argsstring>
        <name>set_command_pool_tag</name>
        <qualifiedname>lava::set_command_pool_tag</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkCommandPool</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1abd93cf188810a5c57f1e971c1ba12db6" kindref="member">ui64</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a100af5d025fb75927f65cb6f3fbc8e5c" kindref="member">void_c_ptr</ref></type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1a22e5f44149477265ed78d8478acb682c" kindref="member">set_tag()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="948" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="948" bodyend="959"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1a361e5f2f8e977f8bdd1b177403eb9b84" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_sampler_ycbcr_conversion_name</definition>
        <argsstring>(VkDevice device, VkSamplerYcbcrConversion handle, name object)</argsstring>
        <name>set_sampler_ycbcr_conversion_name</name>
        <qualifiedname>lava::set_sampler_ycbcr_conversion_name</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkSamplerYcbcrConversion</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1ad5061ad46b6cd6193ad510db8f30e64f" kindref="member">set_name()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="966" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="966" bodyend="973"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1ac8830070a733c3da3ed0778c1c0d35ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_sampler_ycbcr_conversion_tag</definition>
        <argsstring>(VkDevice device, VkSamplerYcbcrConversion handle, ui64 name, void_c_ptr tag, size_t size)</argsstring>
        <name>set_sampler_ycbcr_conversion_tag</name>
        <qualifiedname>lava::set_sampler_ycbcr_conversion_tag</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkSamplerYcbcrConversion</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1abd93cf188810a5c57f1e971c1ba12db6" kindref="member">ui64</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a100af5d025fb75927f65cb6f3fbc8e5c" kindref="member">void_c_ptr</ref></type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1a22e5f44149477265ed78d8478acb682c" kindref="member">set_tag()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="978" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="978" bodyend="989"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1aed1646e4df5f8b74f61ef1fe328b3980" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_descriptor_update_template_name</definition>
        <argsstring>(VkDevice device, VkDescriptorUpdateTemplate handle, name object)</argsstring>
        <name>set_descriptor_update_template_name</name>
        <qualifiedname>lava::set_descriptor_update_template_name</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkDescriptorUpdateTemplate</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1ad5061ad46b6cd6193ad510db8f30e64f" kindref="member">set_name()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="996" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="996" bodyend="1003"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1aa6342795468f66cfc155ed4f66cd4f86" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_descriptor_update_template_tag</definition>
        <argsstring>(VkDevice device, VkDescriptorUpdateTemplate handle, ui64 name, void_c_ptr tag, size_t size)</argsstring>
        <name>set_descriptor_update_template_tag</name>
        <qualifiedname>lava::set_descriptor_update_template_tag</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkDescriptorUpdateTemplate</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1abd93cf188810a5c57f1e971c1ba12db6" kindref="member">ui64</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a100af5d025fb75927f65cb6f3fbc8e5c" kindref="member">void_c_ptr</ref></type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1a22e5f44149477265ed78d8478acb682c" kindref="member">set_tag()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="1008" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="1008" bodyend="1019"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1a10e59f1daaa7f4ea37f9f1dbca89ed6b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_surface_name</definition>
        <argsstring>(VkDevice device, VkSurfaceKHR handle, name object)</argsstring>
        <name>set_surface_name</name>
        <qualifiedname>lava::set_surface_name</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkSurfaceKHR</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1ad5061ad46b6cd6193ad510db8f30e64f" kindref="member">set_name()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="1026" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="1026" bodyend="1033"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1a15468ffa6600d82b0407918d94114ba1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_surface_tag</definition>
        <argsstring>(VkDevice device, VkSurfaceKHR handle, ui64 name, void_c_ptr tag, size_t size)</argsstring>
        <name>set_surface_tag</name>
        <qualifiedname>lava::set_surface_tag</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkSurfaceKHR</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1abd93cf188810a5c57f1e971c1ba12db6" kindref="member">ui64</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a100af5d025fb75927f65cb6f3fbc8e5c" kindref="member">void_c_ptr</ref></type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1a22e5f44149477265ed78d8478acb682c" kindref="member">set_tag()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="1038" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="1038" bodyend="1049"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1a0aeb0764e8b67fef86fa067452317a2e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_swapchain_name</definition>
        <argsstring>(VkDevice device, VkSwapchainKHR handle, name object)</argsstring>
        <name>set_swapchain_name</name>
        <qualifiedname>lava::set_swapchain_name</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkSwapchainKHR</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1ad5061ad46b6cd6193ad510db8f30e64f" kindref="member">set_name()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="1056" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="1056" bodyend="1063"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1ad5f3dd68c51a3206eb3604479fb540a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_swapchain_tag</definition>
        <argsstring>(VkDevice device, VkSwapchainKHR handle, ui64 name, void_c_ptr tag, size_t size)</argsstring>
        <name>set_swapchain_tag</name>
        <qualifiedname>lava::set_swapchain_tag</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkSwapchainKHR</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1abd93cf188810a5c57f1e971c1ba12db6" kindref="member">ui64</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a100af5d025fb75927f65cb6f3fbc8e5c" kindref="member">void_c_ptr</ref></type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1a22e5f44149477265ed78d8478acb682c" kindref="member">set_tag()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="1068" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="1068" bodyend="1079"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1ac3dbb020518bd0f2a9951c9e989a08d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_display_name</definition>
        <argsstring>(VkDevice device, VkDisplayKHR handle, name object)</argsstring>
        <name>set_display_name</name>
        <qualifiedname>lava::set_display_name</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkDisplayKHR</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1ad5061ad46b6cd6193ad510db8f30e64f" kindref="member">set_name()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="1086" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="1086" bodyend="1093"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1adb2d37cc4526ce47a8cdb70c938b2cf1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_display_tag</definition>
        <argsstring>(VkDevice device, VkDisplayKHR handle, ui64 name, void_c_ptr tag, size_t size)</argsstring>
        <name>set_display_tag</name>
        <qualifiedname>lava::set_display_tag</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkDisplayKHR</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1abd93cf188810a5c57f1e971c1ba12db6" kindref="member">ui64</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a100af5d025fb75927f65cb6f3fbc8e5c" kindref="member">void_c_ptr</ref></type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1a22e5f44149477265ed78d8478acb682c" kindref="member">set_tag()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="1098" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="1098" bodyend="1109"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1aa89bf505707ae2bdf8d1ab5f6dd372dc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_display_mode_name</definition>
        <argsstring>(VkDevice device, VkDisplayModeKHR handle, name object)</argsstring>
        <name>set_display_mode_name</name>
        <qualifiedname>lava::set_display_mode_name</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkDisplayModeKHR</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1ad5061ad46b6cd6193ad510db8f30e64f" kindref="member">set_name()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="1116" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="1116" bodyend="1123"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1acc6e704231a4e559065d8a0cb720bf3d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_display_mode_tag</definition>
        <argsstring>(VkDevice device, VkDisplayModeKHR handle, ui64 name, void_c_ptr tag, size_t size)</argsstring>
        <name>set_display_mode_tag</name>
        <qualifiedname>lava::set_display_mode_tag</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkDisplayModeKHR</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1abd93cf188810a5c57f1e971c1ba12db6" kindref="member">ui64</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a100af5d025fb75927f65cb6f3fbc8e5c" kindref="member">void_c_ptr</ref></type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1a22e5f44149477265ed78d8478acb682c" kindref="member">set_tag()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="1128" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="1128" bodyend="1139"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1a1a7d81226199ad3d3bba273cc8410c7c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_debug_report_callback_name</definition>
        <argsstring>(VkDevice device, VkDebugReportCallbackEXT handle, name object)</argsstring>
        <name>set_debug_report_callback_name</name>
        <qualifiedname>lava::set_debug_report_callback_name</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkDebugReportCallbackEXT</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1ad5061ad46b6cd6193ad510db8f30e64f" kindref="member">set_name()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="1146" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="1146" bodyend="1153"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1a693168b342306033cda510cf6d0b69ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_debug_report_callback_tag</definition>
        <argsstring>(VkDevice device, VkDebugReportCallbackEXT handle, ui64 name, void_c_ptr tag, size_t size)</argsstring>
        <name>set_debug_report_callback_tag</name>
        <qualifiedname>lava::set_debug_report_callback_tag</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkDebugReportCallbackEXT</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1abd93cf188810a5c57f1e971c1ba12db6" kindref="member">ui64</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a100af5d025fb75927f65cb6f3fbc8e5c" kindref="member">void_c_ptr</ref></type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1a22e5f44149477265ed78d8478acb682c" kindref="member">set_tag()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="1158" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="1158" bodyend="1169"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1a6a1636c4b6ee438b2bc6d58ae529fd5c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_indirect_commands_layout_name</definition>
        <argsstring>(VkDevice device, VkIndirectCommandsLayoutNV handle, name object)</argsstring>
        <name>set_indirect_commands_layout_name</name>
        <qualifiedname>lava::set_indirect_commands_layout_name</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkIndirectCommandsLayoutNV</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1ad5061ad46b6cd6193ad510db8f30e64f" kindref="member">set_name()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="1176" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="1176" bodyend="1183"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1af3d6680e063f3837dd8f21a22adbb0d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_indirect_commands_layout_tag</definition>
        <argsstring>(VkDevice device, VkIndirectCommandsLayoutNV handle, ui64 name, void_c_ptr tag, size_t size)</argsstring>
        <name>set_indirect_commands_layout_tag</name>
        <qualifiedname>lava::set_indirect_commands_layout_tag</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkIndirectCommandsLayoutNV</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1abd93cf188810a5c57f1e971c1ba12db6" kindref="member">ui64</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a100af5d025fb75927f65cb6f3fbc8e5c" kindref="member">void_c_ptr</ref></type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1a22e5f44149477265ed78d8478acb682c" kindref="member">set_tag()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="1188" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="1188" bodyend="1199"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1ac313bc536eec88a57529c3ad2c847a66" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_debug_utils_messenger_name</definition>
        <argsstring>(VkDevice device, VkDebugUtilsMessengerEXT handle, name object)</argsstring>
        <name>set_debug_utils_messenger_name</name>
        <qualifiedname>lava::set_debug_utils_messenger_name</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkDebugUtilsMessengerEXT</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1ad5061ad46b6cd6193ad510db8f30e64f" kindref="member">set_name()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="1206" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="1206" bodyend="1213"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1ac8c49987eb20e29e75633bf64d6d1df7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_debug_utils_messenger_tag</definition>
        <argsstring>(VkDevice device, VkDebugUtilsMessengerEXT handle, ui64 name, void_c_ptr tag, size_t size)</argsstring>
        <name>set_debug_utils_messenger_tag</name>
        <qualifiedname>lava::set_debug_utils_messenger_tag</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkDebugUtilsMessengerEXT</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1abd93cf188810a5c57f1e971c1ba12db6" kindref="member">ui64</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a100af5d025fb75927f65cb6f3fbc8e5c" kindref="member">void_c_ptr</ref></type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1a22e5f44149477265ed78d8478acb682c" kindref="member">set_tag()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="1218" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="1218" bodyend="1229"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1afa9ecdf0d2ede4519ce5b844a4f20e6b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_validation_cache_name</definition>
        <argsstring>(VkDevice device, VkValidationCacheEXT handle, name object)</argsstring>
        <name>set_validation_cache_name</name>
        <qualifiedname>lava::set_validation_cache_name</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkValidationCacheEXT</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1ad5061ad46b6cd6193ad510db8f30e64f" kindref="member">set_name()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="1236" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="1236" bodyend="1243"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1afa4916245cb32cf3742d57c91d572fe8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_validation_cache_tag</definition>
        <argsstring>(VkDevice device, VkValidationCacheEXT handle, ui64 name, void_c_ptr tag, size_t size)</argsstring>
        <name>set_validation_cache_tag</name>
        <qualifiedname>lava::set_validation_cache_tag</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkValidationCacheEXT</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1abd93cf188810a5c57f1e971c1ba12db6" kindref="member">ui64</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a100af5d025fb75927f65cb6f3fbc8e5c" kindref="member">void_c_ptr</ref></type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1a22e5f44149477265ed78d8478acb682c" kindref="member">set_tag()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="1248" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="1248" bodyend="1259"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1a559f908838c26789c5dea7de8e3059b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_acceleration_structure_nv_name</definition>
        <argsstring>(VkDevice device, VkAccelerationStructureNV handle, name object)</argsstring>
        <name>set_acceleration_structure_nv_name</name>
        <qualifiedname>lava::set_acceleration_structure_nv_name</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkAccelerationStructureNV</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1ad5061ad46b6cd6193ad510db8f30e64f" kindref="member">set_name()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="1266" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="1266" bodyend="1273"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1a5bbca18af2bba44f3b11095915d8648f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_acceleration_structure_nv_tag</definition>
        <argsstring>(VkDevice device, VkAccelerationStructureNV handle, ui64 name, void_c_ptr tag, size_t size)</argsstring>
        <name>set_acceleration_structure_nv_tag</name>
        <qualifiedname>lava::set_acceleration_structure_nv_tag</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkAccelerationStructureNV</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1abd93cf188810a5c57f1e971c1ba12db6" kindref="member">ui64</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a100af5d025fb75927f65cb6f3fbc8e5c" kindref="member">void_c_ptr</ref></type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1a22e5f44149477265ed78d8478acb682c" kindref="member">set_tag()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="1278" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="1278" bodyend="1289"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1acac1efcd9a235faea2867659cae05532" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_acceleration_structure_name</definition>
        <argsstring>(VkDevice device, VkAccelerationStructureKHR handle, name object)</argsstring>
        <name>set_acceleration_structure_name</name>
        <qualifiedname>lava::set_acceleration_structure_name</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkAccelerationStructureKHR</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1ad5061ad46b6cd6193ad510db8f30e64f" kindref="member">set_name()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="1296" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="1296" bodyend="1303"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1a87a279c7dab6cddd8205d50b23e4e0aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_acceleration_structure_tag</definition>
        <argsstring>(VkDevice device, VkAccelerationStructureKHR handle, ui64 name, void_c_ptr tag, size_t size)</argsstring>
        <name>set_acceleration_structure_tag</name>
        <qualifiedname>lava::set_acceleration_structure_tag</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkAccelerationStructureKHR</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1abd93cf188810a5c57f1e971c1ba12db6" kindref="member">ui64</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a100af5d025fb75927f65cb6f3fbc8e5c" kindref="member">void_c_ptr</ref></type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1a22e5f44149477265ed78d8478acb682c" kindref="member">set_tag()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="1308" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="1308" bodyend="1319"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1a6db6b5408619d9bf6622502d78219912" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_performance_configuration_name</definition>
        <argsstring>(VkDevice device, VkPerformanceConfigurationINTEL handle, name object)</argsstring>
        <name>set_performance_configuration_name</name>
        <qualifiedname>lava::set_performance_configuration_name</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkPerformanceConfigurationINTEL</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1ad5061ad46b6cd6193ad510db8f30e64f" kindref="member">set_name()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="1326" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="1326" bodyend="1333"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1ac59a6515ab3f8120eda203af1d94441e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_performance_configuration_tag</definition>
        <argsstring>(VkDevice device, VkPerformanceConfigurationINTEL handle, ui64 name, void_c_ptr tag, size_t size)</argsstring>
        <name>set_performance_configuration_tag</name>
        <qualifiedname>lava::set_performance_configuration_tag</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkPerformanceConfigurationINTEL</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1abd93cf188810a5c57f1e971c1ba12db6" kindref="member">ui64</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a100af5d025fb75927f65cb6f3fbc8e5c" kindref="member">void_c_ptr</ref></type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1a22e5f44149477265ed78d8478acb682c" kindref="member">set_tag()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="1338" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="1338" bodyend="1349"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1ab952d94354da8e059c5495f6bfde0baf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_deferred_operation_name</definition>
        <argsstring>(VkDevice device, VkDeferredOperationKHR handle, name object)</argsstring>
        <name>set_deferred_operation_name</name>
        <qualifiedname>lava::set_deferred_operation_name</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkDeferredOperationKHR</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1ad5061ad46b6cd6193ad510db8f30e64f" kindref="member">set_name()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="1356" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="1356" bodyend="1363"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1ab751af1c8673b294692b3962cc2b4e93" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_deferred_operation_tag</definition>
        <argsstring>(VkDevice device, VkDeferredOperationKHR handle, ui64 name, void_c_ptr tag, size_t size)</argsstring>
        <name>set_deferred_operation_tag</name>
        <qualifiedname>lava::set_deferred_operation_tag</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkDeferredOperationKHR</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1abd93cf188810a5c57f1e971c1ba12db6" kindref="member">ui64</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a100af5d025fb75927f65cb6f3fbc8e5c" kindref="member">void_c_ptr</ref></type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1a22e5f44149477265ed78d8478acb682c" kindref="member">set_tag()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="1368" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="1368" bodyend="1379"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1a128aa5324effec6720427eb63fc04cfa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_private_data_slot_name</definition>
        <argsstring>(VkDevice device, VkPrivateDataSlotEXT handle, name object)</argsstring>
        <name>set_private_data_slot_name</name>
        <qualifiedname>lava::set_private_data_slot_name</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkPrivateDataSlotEXT</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1ad5061ad46b6cd6193ad510db8f30e64f" kindref="member">set_name()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="1386" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="1386" bodyend="1393"/>
      </memberdef>
      <memberdef kind="function" id="debug__utils_8hpp_1ab8bfe89a6a345d8a8d8c170d506e00ea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_private_data_slot_tag</definition>
        <argsstring>(VkDevice device, VkPrivateDataSlotEXT handle, ui64 name, void_c_ptr tag, size_t size)</argsstring>
        <name>set_private_data_slot_tag</name>
        <qualifiedname>lava::set_private_data_slot_tag</qualifiedname>
        <param>
          <type>VkDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkPrivateDataSlotEXT</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1abd93cf188810a5c57f1e971c1ba12db6" kindref="member">ui64</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a100af5d025fb75927f65cb6f3fbc8e5c" kindref="member">void_c_ptr</ref></type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="debug__utils_8hpp_1a22e5f44149477265ed78d8478acb682c" kindref="member">set_tag()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/debug_utils.hpp" line="1398" column="13" bodyfile="liblava/base/debug_utils.hpp" bodystart="1398" bodyend="1409"/>
      </memberdef>
      <memberdef kind="function" id="device_8hpp_1ad0623c3984b28b17fe0bc5be7d0230b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VkShaderModule</type>
        <definition>VkShaderModule lava::create_shader_module</definition>
        <argsstring>(device::ptr device, c_data::ref data)</argsstring>
        <name>create_shader_module</name>
        <qualifiedname>lava::create_shader_module</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1device_1a6f7d378ef30e7bf1cd4fe208de859250" kindref="member">device::ptr</ref></type>
          <declname>device</declname>
        </param>
        <param>
          <type><ref refid="structlava_1_1c__data_1af79805daac5977755e5636b86b97c9d6" kindref="member">c_data::ref</ref></type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Create a shader module. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>Vulkan device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Shader data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>VkShaderModule Shader module </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/device.hpp" line="374" column="16" declfile="liblava/base/device.hpp" declline="374" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="device_8hpp_1a522d7268899231c4bcc6a32250572fe6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lava::one_time_submit_pool</definition>
        <argsstring>(device::ptr device, VkCommandPool pool, queue::ref queue, one_time_command_func callback)</argsstring>
        <name>one_time_submit_pool</name>
        <qualifiedname>lava::one_time_submit_pool</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1device_1a6f7d378ef30e7bf1cd4fe208de859250" kindref="member">device::ptr</ref></type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkCommandPool</type>
          <declname>pool</declname>
        </param>
        <param>
          <type><ref refid="structlava_1_1queue_1af8793c31f0843b03522175736a8a16b1" kindref="member">queue::ref</ref></type>
          <declname>queue</declname>
        </param>
        <param>
          <type><ref refid="device_8hpp_1a6db76d453364cce7a63819b1464a1618" kindref="member">one_time_command_func</ref></type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Submit one time command function with pool. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>Vulkan device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pool</parametername>
</parameternamelist>
<parameterdescription>
<para>Command pool (VK_NULL_HANDLE: managed) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>queue</parametername>
</parameternamelist>
<parameterdescription>
<para>Target queue </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>Function to be called </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Submit was successful or failed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/device.hpp" line="388" column="6" declfile="liblava/base/device.hpp" declline="388" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="device_8hpp_1ae5805fb1642e6a4c2162639e3b245a1f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool lava::one_time_submit</definition>
        <argsstring>(device::ptr device, queue::ref queue, one_time_command_func callback)</argsstring>
        <name>one_time_submit</name>
        <qualifiedname>lava::one_time_submit</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1device_1a6f7d378ef30e7bf1cd4fe208de859250" kindref="member">device::ptr</ref></type>
          <declname>device</declname>
        </param>
        <param>
          <type><ref refid="structlava_1_1queue_1af8793c31f0843b03522175736a8a16b1" kindref="member">queue::ref</ref></type>
          <declname>queue</declname>
        </param>
        <param>
          <type><ref refid="device_8hpp_1a6db76d453364cce7a63819b1464a1618" kindref="member">one_time_command_func</ref></type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Submit one time command function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>Vulkan device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>queue</parametername>
</parameternamelist>
<parameterdescription>
<para>Target queue </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>Function to be called </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Submit was successful or failed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/device.hpp" line="400" column="13" bodyfile="liblava/base/device.hpp" bodystart="400" bodyend="407"/>
      </memberdef>
      <memberdef kind="function" id="instance_8hpp_1a02039b1af3ce40e1e3eb0fd5c51f6548" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lava::check</definition>
        <argsstring>(instance::create_param::ref param)</argsstring>
        <name>check</name>
        <qualifiedname>lava::check</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1instance_1_1create__param_1a0b66823fbd56bf7d1dbe5eb3025234d8" kindref="member">instance::create_param::ref</ref></type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>Check instance create parameters. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>param</parametername>
</parameternamelist>
<parameterdescription>
<para>Create parameters </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Check was successful or failed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/instance.hpp" line="196" column="6" declfile="liblava/base/instance.hpp" declline="196" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="instance_8hpp_1a1989b9705d9320e5d10639ef1640d9ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="version_8hpp_1ad21c2311c0d3c020c4ee9a7179d3ea2a" kindref="member">sem_version</ref></type>
        <definition>sem_version lava::get_instance_version</definition>
        <argsstring>()</argsstring>
        <name>get_instance_version</name>
        <qualifiedname>lava::get_instance_version</qualifiedname>
        <briefdescription>
<para>Get the instance version. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>sem_version Version </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/instance.hpp" line="202" column="13" declfile="liblava/base/instance.hpp" declline="202" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="instance_8hpp_1a556bdf6c21c077ee4296a46b816db543" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="base_2base_8hpp_1ad7b553b09e6cd35151635ed61efbe4a4" kindref="member">VkLayerPropertiesList</ref></type>
        <definition>VkLayerPropertiesList lava::enumerate_layer_properties</definition>
        <argsstring>()</argsstring>
        <name>enumerate_layer_properties</name>
        <qualifiedname>lava::enumerate_layer_properties</qualifiedname>
        <briefdescription>
<para>Enumerate enabled layer properties. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>VkLayerPropertiesList List of layer properties </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/instance.hpp" line="208" column="23" declfile="liblava/base/instance.hpp" declline="208" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="instance_8hpp_1aa33e957df60837d53d392a1ce30e3968" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="base_2base_8hpp_1a333be9f107cf99eb1bd039d36fc6ee02" kindref="member">VkExtensionPropertiesList</ref></type>
        <definition>VkExtensionPropertiesList lava::enumerate_extension_properties</definition>
        <argsstring>(name layer_name=nullptr)</argsstring>
        <name>enumerate_extension_properties</name>
        <qualifiedname>lava::enumerate_extension_properties</qualifiedname>
        <param>
          <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
          <declname>layer_name</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Enumerate enabled extension properties. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>layer_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of layer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>VkExtensionPropertiesList List of extension properties </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/instance.hpp" line="215" column="27" declfile="liblava/base/instance.hpp" declline="215" declcolumn="27"/>
      </memberdef>
      <memberdef kind="function" id="memory_8hpp_1a021206737032024500fda8195795e5ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlava_1_1allocator_1ab7f304804ff970ac1436b31ebf5647d8" kindref="member">allocator::s_ptr</ref></type>
        <definition>allocator::s_ptr lava::create_allocator</definition>
        <argsstring>(allocator::device_c_ptr device, VmaAllocatorCreateFlags flags=0)</argsstring>
        <name>create_allocator</name>
        <qualifiedname>lava::create_allocator</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1allocator_1ac694ae1eb7b09a888504a757a63ef08e" kindref="member">allocator::device_c_ptr</ref></type>
          <declname>device</declname>
        </param>
        <param>
          <type>VmaAllocatorCreateFlags</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Create a allocator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>Vulkan device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>VMA allocator create flags </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structlava_1_1allocator_1ab7f304804ff970ac1436b31ebf5647d8" kindref="member">allocator::s_ptr</ref> Allocator </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/memory.hpp" line="92" column="25" bodyfile="liblava/base/memory.hpp" bodystart="92" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="memory_8hpp_1a033009b2750404dee2dbcaa5f7a869a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="types_8hpp_1a2a40eb7fccb1ebcfd58d6d4b7a078e5c" kindref="member">index</ref></type>
        <definition>index lava::find_memory_type_with_properties</definition>
        <argsstring>(VkPhysicalDeviceMemoryProperties properties, ui32 type_bits, VkMemoryPropertyFlags required_properties)</argsstring>
        <name>find_memory_type_with_properties</name>
        <qualifiedname>lava::find_memory_type_with_properties</qualifiedname>
        <param>
          <type>VkPhysicalDeviceMemoryProperties</type>
          <declname>properties</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1ae3c4bbc50dd4583ab0df2c24c49a49c9" kindref="member">ui32</ref></type>
          <declname>type_bits</declname>
        </param>
        <param>
          <type>VkMemoryPropertyFlags</type>
          <declname>required_properties</declname>
        </param>
        <briefdescription>
<para>Find the memory type with properties. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>properties</parametername>
</parameternamelist>
<parameterdescription>
<para>Physical device memory properties </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type_bits</parametername>
</parameternamelist>
<parameterdescription>
<para>Type bits </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>required_properties</parametername>
</parameternamelist>
<parameterdescription>
<para>Memory property flags </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>type Result type </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/memory.hpp" line="161" column="7" declfile="liblava/base/memory.hpp" declline="161" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="memory_8hpp_1a82f310a9f64c8e0390df94cdaccad831" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="types_8hpp_1a2a40eb7fccb1ebcfd58d6d4b7a078e5c" kindref="member">index</ref></type>
        <definition>index lava::find_memory_type</definition>
        <argsstring>(VkPhysicalDevice gpu, VkMemoryPropertyFlags properties, ui32 type_bits)</argsstring>
        <name>find_memory_type</name>
        <qualifiedname>lava::find_memory_type</qualifiedname>
        <param>
          <type>VkPhysicalDevice</type>
          <declname>gpu</declname>
        </param>
        <param>
          <type>VkMemoryPropertyFlags</type>
          <declname>properties</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1ae3c4bbc50dd4583ab0df2c24c49a49c9" kindref="member">ui32</ref></type>
          <declname>type_bits</declname>
        </param>
        <briefdescription>
<para>Find the memory type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gpu</parametername>
</parameternamelist>
<parameterdescription>
<para>Physical device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>properties</parametername>
</parameternamelist>
<parameterdescription>
<para>Memory properties flags </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type_bits</parametername>
</parameternamelist>
<parameterdescription>
<para>Type bits </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>type Result type </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/memory.hpp" line="172" column="7" declfile="liblava/base/memory.hpp" declline="172" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="queue_8hpp_1a3a95d4fb6a75e074295c1a46695397ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_default_queues</definition>
        <argsstring>(queue_family_info::list &amp;list)</argsstring>
        <name>set_default_queues</name>
        <qualifiedname>lava::set_default_queues</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1queue__family__info_1a419c065ba098d0cad7d1ae8750336502" kindref="member">queue_family_info::list</ref> &amp;</type>
          <declname>list</declname>
        </param>
        <briefdescription>
<para>Set the default queues. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>List of queue family informations </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/queue.hpp" line="122" column="6" declfile="liblava/base/queue.hpp" declline="122" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="queue_8hpp_1a625654669a4963a2daf910561b6282b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_all_queues</definition>
        <argsstring>(queue_family_info::list &amp;list, VkQueueFamilyPropertiesList const &amp;properties)</argsstring>
        <name>set_all_queues</name>
        <qualifiedname>lava::set_all_queues</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1queue__family__info_1a419c065ba098d0cad7d1ae8750336502" kindref="member">queue_family_info::list</ref> &amp;</type>
          <declname>list</declname>
        </param>
        <param>
          <type><ref refid="base_2base_8hpp_1abf600c76d74b79d839b9f25aa7ae8228" kindref="member">VkQueueFamilyPropertiesList</ref> const &amp;</type>
          <declname>properties</declname>
        </param>
        <briefdescription>
<para>Set all queues. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>List of queue family informations </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>properties</parametername>
</parameternamelist>
<parameterdescription>
<para>List of queue family properties </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/queue.hpp" line="129" column="6" declfile="liblava/base/queue.hpp" declline="129" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="queue_8hpp_1ab7f1d0e25ab487cecd007ab6cd580b4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lava::add_queues</definition>
        <argsstring>(queue_family_info::list &amp;list, VkQueueFamilyPropertiesList const &amp;properties, VkQueueFlags flags, ui32 count, r32 priority=1.f)</argsstring>
        <name>add_queues</name>
        <qualifiedname>lava::add_queues</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1queue__family__info_1a419c065ba098d0cad7d1ae8750336502" kindref="member">queue_family_info::list</ref> &amp;</type>
          <declname>list</declname>
        </param>
        <param>
          <type><ref refid="base_2base_8hpp_1abf600c76d74b79d839b9f25aa7ae8228" kindref="member">VkQueueFamilyPropertiesList</ref> const &amp;</type>
          <declname>properties</declname>
        </param>
        <param>
          <type>VkQueueFlags</type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1ae3c4bbc50dd4583ab0df2c24c49a49c9" kindref="member">ui32</ref></type>
          <declname>count</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a3a32680a459890aa9c80b4f5533b3b1f" kindref="member">r32</ref></type>
          <declname>priority</declname>
          <defval>1.f</defval>
        </param>
        <briefdescription>
<para>Add queues. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>List of queue family informations </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>properties</parametername>
</parameternamelist>
<parameterdescription>
<para>List of queue family properties </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Queue flags </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of queues </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>priority</parametername>
</parameternamelist>
<parameterdescription>
<para>Queue priority </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Add was successful or failed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/queue.hpp" line="141" column="6" declfile="liblava/base/queue.hpp" declline="141" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="queue_8hpp_1aa9e3a3836f529f0147d0a9a2556ac764" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lava::add_dedicated_queues</definition>
        <argsstring>(queue_family_info::list &amp;list, VkQueueFamilyPropertiesList const &amp;properties, r32 priority=1.f)</argsstring>
        <name>add_dedicated_queues</name>
        <qualifiedname>lava::add_dedicated_queues</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1queue__family__info_1a419c065ba098d0cad7d1ae8750336502" kindref="member">queue_family_info::list</ref> &amp;</type>
          <declname>list</declname>
        </param>
        <param>
          <type><ref refid="base_2base_8hpp_1abf600c76d74b79d839b9f25aa7ae8228" kindref="member">VkQueueFamilyPropertiesList</ref> const &amp;</type>
          <declname>properties</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a3a32680a459890aa9c80b4f5533b3b1f" kindref="member">r32</ref></type>
          <declname>priority</declname>
          <defval>1.f</defval>
        </param>
        <briefdescription>
<para>Add dedicated queues. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>List of queue family informations </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>properties</parametername>
</parameternamelist>
<parameterdescription>
<para>List of queue family properties </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>priority</parametername>
</parameternamelist>
<parameterdescription>
<para>Queue priority </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Add was successful or failed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/queue.hpp" line="154" column="6" declfile="liblava/base/queue.hpp" declline="154" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="queue_8hpp_1a6dce4074f13b98f4a822013d1b51b016" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="queue_8hpp_1ae36be97f14d22001f41c2164d08457d6" kindref="member">verify_queues_result</ref></type>
        <definition>verify_queues_result lava::verify_queues</definition>
        <argsstring>(queue_family_info::list const &amp;list, VkQueueFamilyPropertiesList const &amp;properties)</argsstring>
        <name>verify_queues</name>
        <qualifiedname>lava::verify_queues</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1queue__family__info_1a419c065ba098d0cad7d1ae8750336502" kindref="member">queue_family_info::list</ref> const &amp;</type>
          <declname>list</declname>
        </param>
        <param>
          <type><ref refid="base_2base_8hpp_1abf600c76d74b79d839b9f25aa7ae8228" kindref="member">VkQueueFamilyPropertiesList</ref> const &amp;</type>
          <declname>properties</declname>
        </param>
        <briefdescription>
<para>Verify queues. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>List of queue family informations </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>properties</parametername>
</parameternamelist>
<parameterdescription>
<para>List of queue family properties </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>verify_queues_result Verification result </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/queue.hpp" line="178" column="22" declfile="liblava/base/queue.hpp" declline="178" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="pipeline_8hpp_1a7c57f2548b7b4b6f8c0a9edc452ef2d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structlava_1_1pipeline_1_1shader__stage_1a5ab676fbe6a1d5d340a49fa8a9c615b9" kindref="member">pipeline::shader_stage::s_ptr</ref></type>
        <definition>pipeline::shader_stage::s_ptr lava::create_pipeline_shader_stage</definition>
        <argsstring>(device::ptr device, c_data::ref data, VkShaderStageFlagBits stage)</argsstring>
        <name>create_pipeline_shader_stage</name>
        <qualifiedname>lava::create_pipeline_shader_stage</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1device_1a6f7d378ef30e7bf1cd4fe208de859250" kindref="member">device::ptr</ref></type>
          <declname>device</declname>
        </param>
        <param>
          <type><ref refid="structlava_1_1c__data_1af79805daac5977755e5636b86b97c9d6" kindref="member">c_data::ref</ref></type>
          <declname>data</declname>
        </param>
        <param>
          <type>VkShaderStageFlagBits</type>
          <declname>stage</declname>
        </param>
        <briefdescription>
<para>Create a new pipeline shader stage. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>Vulkan device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Shader data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stage</parametername>
</parameternamelist>
<parameterdescription>
<para>Shader stage flag bits </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structlava_1_1pipeline_1_1shader__stage_1a5ab676fbe6a1d5d340a49fa8a9c615b9" kindref="member">pipeline::shader_stage::s_ptr</ref> Shared pointer to pipeline shader stage </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/block/pipeline.hpp" line="264" column="31" declfile="liblava/block/pipeline.hpp" declline="264" declcolumn="31"/>
      </memberdef>
      <memberdef kind="function" id="render__pipeline_8hpp_1a07d4b545947e7c5581176c646f47e8a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VkPipelineColorBlendAttachmentState</type>
        <definition>VkPipelineColorBlendAttachmentState lava::create_pipeline_color_blend_attachment</definition>
        <argsstring>()</argsstring>
        <name>create_pipeline_color_blend_attachment</name>
        <qualifiedname>lava::create_pipeline_color_blend_attachment</qualifiedname>
        <briefdescription>
<para>Create a color blend attachment. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>VkPipelineColorBlendAttachmentState Pipeline color blend attachment state </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/block/render_pipeline.hpp" line="477" column="37" declfile="liblava/block/render_pipeline.hpp" declline="477" declcolumn="37"/>
      </memberdef>
      <memberdef kind="function" id="data_8hpp_1a56f4c8a3f02629235b9dc4427f52db69" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto lava::align_up</definition>
        <argsstring>(auto value, auto align)</argsstring>
        <name>align_up</name>
        <qualifiedname>lava::align_up</qualifiedname>
        <param>
          <type>auto</type>
          <declname>value</declname>
        </param>
        <param>
          <type>auto</type>
          <declname>align</declname>
        </param>
        <briefdescription>
<para>Align value up. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to align </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>Target alignment </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>auto Aligned value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/data.hpp" line="21" column="13" bodyfile="liblava/core/data.hpp" bodystart="21" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="data_8hpp_1ab2b69c06a3aadc778c09a4242b7d29e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
        <definition>size_t lava::align</definition>
        <argsstring>(size_t size, size_t min=0)</argsstring>
        <name>align</name>
        <qualifiedname>lava::align</qualifiedname>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
          <declname>min</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Align a size. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Site to align </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min</parametername>
</parameternamelist>
<parameterdescription>
<para>Minimal alignment </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>size_t Aligned size </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/data.hpp" line="32" column="15" bodyfile="liblava/core/data.hpp" bodystart="32" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="data_8hpp_1a5805f59ec7d4cf0ddd74b8a7d465b2b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
        <definition>size_t lava::align</definition>
        <argsstring>(size_t min=0)</argsstring>
        <name>align</name>
        <qualifiedname>lava::align</qualifiedname>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
          <declname>min</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Get alignment of type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Type to align </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>min</parametername>
</parameternamelist>
<parameterdescription>
<para>Minimal alignment </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>size_t Aligned size </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/data.hpp" line="47" column="15" bodyfile="liblava/core/data.hpp" bodystart="47" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="data_8hpp_1a5e6b9f9d4a5afd1ee0bcf24aaeff76c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void *</type>
        <definition>void * lava::alloc_data</definition>
        <argsstring>(size_t size, size_t alignment=sizeof(c8))</argsstring>
        <name>alloc_data</name>
        <qualifiedname>lava::alloc_data</qualifiedname>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
          <declname>alignment</declname>
          <defval>sizeof(<ref refid="types_8hpp_1a1bb7daf385cfc0f8087becb05fe969d1" kindref="member">c8</ref>)</defval>
        </param>
        <briefdescription>
<para>Allocate data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>alignment</parametername>
</parameternamelist>
<parameterdescription>
<para>Target alignment </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void* Allocated data </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/data.hpp" line="57" column="13" bodyfile="liblava/core/data.hpp" bodystart="57" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="data_8hpp_1a3f58e009deb522d7036f8dcf79298fc8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::free_data</definition>
        <argsstring>(void *data)</argsstring>
        <name>free_data</name>
        <qualifiedname>lava::free_data</qualifiedname>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Free data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to free </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/data.hpp" line="74" column="13" bodyfile="liblava/core/data.hpp" bodystart="74" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="data_8hpp_1aa685596acc6a1166a20302e7dacfebc6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void *</type>
        <definition>void * lava::realloc_data</definition>
        <argsstring>(void *data, size_t size, size_t alignment=sizeof(c8))</argsstring>
        <name>realloc_data</name>
        <qualifiedname>lava::realloc_data</qualifiedname>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
          <declname>alignment</declname>
          <defval>sizeof(<ref refid="types_8hpp_1a1bb7daf385cfc0f8087becb05fe969d1" kindref="member">c8</ref>)</defval>
        </param>
        <briefdescription>
<para>Reallocate data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to reallocate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>alignment</parametername>
</parameternamelist>
<parameterdescription>
<para>Target alignment </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void* Reallocated data </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/data.hpp" line="89" column="13" bodyfile="liblava/core/data.hpp" bodystart="89" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="data_8hpp_1ace1d98fa03ff75fbe231dbc741c70ce3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
        <definition>size_t lava::next_pow_2</definition>
        <argsstring>(size_t x)</argsstring>
        <name>next_pow_2</name>
        <qualifiedname>lava::next_pow_2</qualifiedname>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Get next power of two. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Source value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>size_t Next power of two </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/data.hpp" line="311" column="15" bodyfile="liblava/core/data.hpp" bodystart="311" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="id_8hpp_1afddb4bf323e954e08ff48b8514cb573e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlava_1_1id" kindref="compound">id</ref></type>
        <definition>id lava::to_id</definition>
        <argsstring>(auto value)</argsstring>
        <name>to_id</name>
        <qualifiedname>lava::to_id</qualifiedname>
        <param>
          <type>auto</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Convert to id. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Source value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>id Converted value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/id.hpp" line="99" column="11" bodyfile="liblava/core/id.hpp" bodystart="99" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="id_8hpp_1a41a466c284bc15c02b328e694b8ea3da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structlava_1_1id" kindref="compound">id</ref></type>
        <definition>id lava::add_id_map</definition>
        <argsstring>(T const &amp;object, std::map&lt; id, T &gt; &amp;map)</argsstring>
        <name>add_id_map</name>
        <qualifiedname>lava::add_id_map</qualifiedname>
        <param>
          <type>T const &amp;</type>
          <declname>object</declname>
        </param>
        <param>
          <type>std::map&lt; <ref refid="structlava_1_1id" kindref="compound">id</ref>, T &gt; &amp;</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Add object to id map. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>Object to add </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>map</parametername>
</parameternamelist>
<parameterdescription>
<para>Target map </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>id Id of object in map </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/id.hpp" line="137" column="11" bodyfile="liblava/core/id.hpp" bodystart="137" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="id_8hpp_1aecb510e0885f800ae029d60aa3c9e131" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool lava::remove_id_map</definition>
        <argsstring>(id::ref object_id, std::map&lt; id, T &gt; &amp;map)</argsstring>
        <name>remove_id_map</name>
        <qualifiedname>lava::remove_id_map</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1id_1a226df789a94177f765bdcaac2988eda0" kindref="member">id::ref</ref></type>
          <declname>object_id</declname>
        </param>
        <param>
          <type>std::map&lt; <ref refid="structlava_1_1id" kindref="compound">id</ref>, T &gt; &amp;</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Remove object from id map. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Object to remove </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>map</parametername>
</parameternamelist>
<parameterdescription>
<para>Target map </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Removed object from map or object not found </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/id.hpp" line="152" column="13" bodyfile="liblava/core/id.hpp" bodystart="152" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="misc_8hpp_1a68c5d5751dad0b46aa8af3022c0ac84b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool lava::exists</definition>
        <argsstring>(names_ref list, name item)</argsstring>
        <name>exists</name>
        <qualifiedname>lava::exists</qualifiedname>
        <param>
          <type><ref refid="types_8hpp_1a1daaccd9a417ece0398eabcc0b82c0a1" kindref="member">names_ref</ref></type>
          <declname>list</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Check if name exists in name list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>List of names </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>item</parametername>
</parameternamelist>
<parameterdescription>
<para>Item to check </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Item exists or not found </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/misc.hpp" line="23" column="13" bodyfile="liblava/core/misc.hpp" bodystart="23" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="misc_8hpp_1a3ea11a6e491adb92e302e6dd9b80e47b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void lava::remove</definition>
        <argsstring>(std::vector&lt; T &gt; &amp;list, T item)</argsstring>
        <name>remove</name>
        <qualifiedname>lava::remove</qualifiedname>
        <param>
          <type>std::vector&lt; T &gt; &amp;</type>
          <declname>list</declname>
        </param>
        <param>
          <type>T</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Remove item from list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of list </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>List of items </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>item</parametername>
</parameternamelist>
<parameterdescription>
<para>Item to remove </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/misc.hpp" line="36" column="13" bodyfile="liblava/core/misc.hpp" bodystart="36" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="misc_8hpp_1a3e180fc39604b9da8475bfa7539a513b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool lava::contains</definition>
        <argsstring>(std::vector&lt; T &gt; &amp;list, T item)</argsstring>
        <name>contains</name>
        <qualifiedname>lava::contains</qualifiedname>
        <param>
          <type>std::vector&lt; T &gt; &amp;</type>
          <declname>list</declname>
        </param>
        <param>
          <type>T</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Check if item is included in list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of list </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>List of items </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>item</parametername>
</parameternamelist>
<parameterdescription>
<para>Item to check </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Item exists or not found </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/misc.hpp" line="48" column="13" bodyfile="liblava/core/misc.hpp" bodystart="48" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="misc_8hpp_1a4f4ed7173bd51a56474672dda78f7818" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void lava::append</definition>
        <argsstring>(std::vector&lt; T &gt; &amp;list, std::vector&lt; T &gt; &amp;items)</argsstring>
        <name>append</name>
        <qualifiedname>lava::append</qualifiedname>
        <param>
          <type>std::vector&lt; T &gt; &amp;</type>
          <declname>list</declname>
        </param>
        <param>
          <type>std::vector&lt; T &gt; &amp;</type>
          <declname>items</declname>
        </param>
        <briefdescription>
<para>Append a list of items to another list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of list </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>List of items </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>items</parametername>
</parameternamelist>
<parameterdescription>
<para>Items to append </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/misc.hpp" line="59" column="13" bodyfile="liblava/core/misc.hpp" bodystart="59" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="misc_8hpp_1a7e1bc9d4cd6ee8f8ffcde5d9f4f9a279" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::trim_start</definition>
        <argsstring>(string &amp;s)</argsstring>
        <name>trim_start</name>
        <qualifiedname>lava::trim_start</qualifiedname>
        <param>
          <type><ref refid="types_8hpp_1a56891e6c1c56efa24abd6b84f71d9145" kindref="member">string</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Trim string only from start (in place) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>String to trim </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/misc.hpp" line="67" column="13" bodyfile="liblava/core/misc.hpp" bodystart="67" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="misc_8hpp_1a1785712bd663d71b6cea4fca9e5e8d42" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::trim_end</definition>
        <argsstring>(string &amp;s)</argsstring>
        <name>trim_end</name>
        <qualifiedname>lava::trim_end</qualifiedname>
        <param>
          <type><ref refid="types_8hpp_1a56891e6c1c56efa24abd6b84f71d9145" kindref="member">string</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Trim string only from end (in place) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>String to trim </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/misc.hpp" line="77" column="13" bodyfile="liblava/core/misc.hpp" bodystart="77" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="misc_8hpp_1a3097d82814968317612b1b45be15de96" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::trim</definition>
        <argsstring>(string &amp;s)</argsstring>
        <name>trim</name>
        <qualifiedname>lava::trim</qualifiedname>
        <param>
          <type><ref refid="types_8hpp_1a56891e6c1c56efa24abd6b84f71d9145" kindref="member">string</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Trim string from both ends (in place) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>String to trim </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/misc.hpp" line="88" column="13" bodyfile="liblava/core/misc.hpp" bodystart="88" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="misc_8hpp_1af40494df3c596554e83effc66c9a7eab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8hpp_1a56891e6c1c56efa24abd6b84f71d9145" kindref="member">string</ref></type>
        <definition>string lava::trim_start_copy</definition>
        <argsstring>(string s)</argsstring>
        <name>trim_start_copy</name>
        <qualifiedname>lava::trim_start_copy</qualifiedname>
        <param>
          <type><ref refid="types_8hpp_1a56891e6c1c56efa24abd6b84f71d9145" kindref="member">string</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Trim string only from start (copying) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>String to trim </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>string Trimmed string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/misc.hpp" line="98" column="15" bodyfile="liblava/core/misc.hpp" bodystart="98" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="misc_8hpp_1a47af42df9eefc88d6047ed8cddb28fe1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8hpp_1a56891e6c1c56efa24abd6b84f71d9145" kindref="member">string</ref></type>
        <definition>string lava::trim_end_copy</definition>
        <argsstring>(string s)</argsstring>
        <name>trim_end_copy</name>
        <qualifiedname>lava::trim_end_copy</qualifiedname>
        <param>
          <type><ref refid="types_8hpp_1a56891e6c1c56efa24abd6b84f71d9145" kindref="member">string</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Trim string only from end (copying) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>String to trim </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>string Trimmed string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/misc.hpp" line="108" column="15" bodyfile="liblava/core/misc.hpp" bodystart="108" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="misc_8hpp_1a164b31b1e097ef980b8d408126783fe6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8hpp_1a56891e6c1c56efa24abd6b84f71d9145" kindref="member">string</ref></type>
        <definition>string lava::trim_copy</definition>
        <argsstring>(string s)</argsstring>
        <name>trim_copy</name>
        <qualifiedname>lava::trim_copy</qualifiedname>
        <param>
          <type><ref refid="types_8hpp_1a56891e6c1c56efa24abd6b84f71d9145" kindref="member">string</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Trim string from both ends (copying) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>String to trim </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>string Trimmed string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/misc.hpp" line="118" column="15" bodyfile="liblava/core/misc.hpp" bodystart="118" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="misc_8hpp_1af97c6f296407bd8c2b7049fd0b06b73d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8hpp_1a56891e6c1c56efa24abd6b84f71d9145" kindref="member">string</ref> &amp;</type>
        <definition>string &amp; lava::remove_chars</definition>
        <argsstring>(string &amp;s, string_ref chars)</argsstring>
        <name>remove_chars</name>
        <qualifiedname>lava::remove_chars</qualifiedname>
        <param>
          <type><ref refid="types_8hpp_1a56891e6c1c56efa24abd6b84f71d9145" kindref="member">string</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a01c2a7bfa24e7ea76ef5a79d8d4daaf6" kindref="member">string_ref</ref></type>
          <declname>chars</declname>
        </param>
        <briefdescription>
<para>Remove chars in string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>Target string </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chars</parametername>
</parameternamelist>
<parameterdescription>
<para>Chars to remove </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>string&amp; Cleared string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/misc.hpp" line="129" column="15" bodyfile="liblava/core/misc.hpp" bodystart="129" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="misc_8hpp_1a685c6acbad52fbad672ed983c0c3c509" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8hpp_1a56891e6c1c56efa24abd6b84f71d9145" kindref="member">string</ref> &amp;</type>
        <definition>string &amp; lava::remove_punctuation_marks</definition>
        <argsstring>(string &amp;s)</argsstring>
        <name>remove_punctuation_marks</name>
        <qualifiedname>lava::remove_punctuation_marks</qualifiedname>
        <param>
          <type><ref refid="types_8hpp_1a56891e6c1c56efa24abd6b84f71d9145" kindref="member">string</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Remove punctuation marks in string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>Target string </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>string&amp; Cleared string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/misc.hpp" line="145" column="15" bodyfile="liblava/core/misc.hpp" bodystart="145" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="misc_8hpp_1ad900a8cab7ab57c4ad78c5334c78a9c9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8hpp_1a56891e6c1c56efa24abd6b84f71d9145" kindref="member">string</ref></type>
        <definition>string lava::remove_chars_copy</definition>
        <argsstring>(string s, string_ref chars)</argsstring>
        <name>remove_chars_copy</name>
        <qualifiedname>lava::remove_chars_copy</qualifiedname>
        <param>
          <type><ref refid="types_8hpp_1a56891e6c1c56efa24abd6b84f71d9145" kindref="member">string</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a01c2a7bfa24e7ea76ef5a79d8d4daaf6" kindref="member">string_ref</ref></type>
          <declname>chars</declname>
        </param>
        <briefdescription>
<para>Remove chars in string (copying) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>Target string </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chars</parametername>
</parameternamelist>
<parameterdescription>
<para>Chars to remove </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>string Cleared string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/misc.hpp" line="155" column="15" bodyfile="liblava/core/misc.hpp" bodystart="155" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="misc_8hpp_1a6baf2dbae56b17e410e0c29f0be7eacc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8hpp_1a56891e6c1c56efa24abd6b84f71d9145" kindref="member">string</ref> &amp;</type>
        <definition>string &amp; lava::remove_nondigit</definition>
        <argsstring>(string &amp;s)</argsstring>
        <name>remove_nondigit</name>
        <qualifiedname>lava::remove_nondigit</qualifiedname>
        <param>
          <type><ref refid="types_8hpp_1a56891e6c1c56efa24abd6b84f71d9145" kindref="member">string</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Remove all non digit chars in string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>Target string </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>string&amp; Cleared string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/misc.hpp" line="164" column="15" bodyfile="liblava/core/misc.hpp" bodystart="164" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="misc_8hpp_1aa01e067bd89cde00a300f326f9d5a5a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8hpp_1a56891e6c1c56efa24abd6b84f71d9145" kindref="member">string</ref></type>
        <definition>string lava::remove_nondigit_copy</definition>
        <argsstring>(string s)</argsstring>
        <name>remove_nondigit_copy</name>
        <qualifiedname>lava::remove_nondigit_copy</qualifiedname>
        <param>
          <type><ref refid="types_8hpp_1a56891e6c1c56efa24abd6b84f71d9145" kindref="member">string</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Remove all non digit chars in string (copying) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>Target string </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>string Cleared string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/misc.hpp" line="177" column="15" bodyfile="liblava/core/misc.hpp" bodystart="177" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="misc_8hpp_1a0cd915bfde1f60eb370ed9b1552f3191" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8hpp_1a56891e6c1c56efa24abd6b84f71d9145" kindref="member">string</ref> &amp;</type>
        <definition>string &amp; lava::remove_chars_if_not</definition>
        <argsstring>(string &amp;s, string_ref allowed)</argsstring>
        <name>remove_chars_if_not</name>
        <qualifiedname>lava::remove_chars_if_not</qualifiedname>
        <param>
          <type><ref refid="types_8hpp_1a56891e6c1c56efa24abd6b84f71d9145" kindref="member">string</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a01c2a7bfa24e7ea76ef5a79d8d4daaf6" kindref="member">string_ref</ref></type>
          <declname>allowed</declname>
        </param>
        <briefdescription>
<para>Remove all chars in string which are not allowed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>Target string </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>allowed</parametername>
</parameternamelist>
<parameterdescription>
<para>Allowed chars </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>string&amp; Cleared string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/misc.hpp" line="187" column="15" bodyfile="liblava/core/misc.hpp" bodystart="187" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="misc_8hpp_1a4d9a6856ce0d2ae7bb67c157cc74bcd3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8hpp_1a56891e6c1c56efa24abd6b84f71d9145" kindref="member">string</ref></type>
        <definition>string lava::remove_chars_if_not_copy</definition>
        <argsstring>(string s, string_ref allowed)</argsstring>
        <name>remove_chars_if_not_copy</name>
        <qualifiedname>lava::remove_chars_if_not_copy</qualifiedname>
        <param>
          <type><ref refid="types_8hpp_1a56891e6c1c56efa24abd6b84f71d9145" kindref="member">string</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a01c2a7bfa24e7ea76ef5a79d8d4daaf6" kindref="member">string_ref</ref></type>
          <declname>allowed</declname>
        </param>
        <briefdescription>
<para>Remove all chars in string which are not allowed (copying) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>Target string </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>allowed</parametername>
</parameternamelist>
<parameterdescription>
<para>Allowed chars </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>string Cleared string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/misc.hpp" line="201" column="15" bodyfile="liblava/core/misc.hpp" bodystart="201" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="misc_8hpp_1a610f848d04b46c2b7b7fe1b10d233859" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto lava::begin</definition>
        <argsstring>(reversion_wrapper&lt; T &gt; w)</argsstring>
        <name>begin</name>
        <qualifiedname>lava::begin</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1reversion__wrapper" kindref="compound">reversion_wrapper</ref>&lt; T &gt;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
<para>Begin the iterator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of iterable </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>w</parametername>
</parameternamelist>
<parameterdescription>
<para>Reversion wrapper </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>auto Iterator </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/misc.hpp" line="222" column="13" bodyfile="liblava/core/misc.hpp" bodystart="222" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="misc_8hpp_1a25642fea583db16ad4d444ba91c0821c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto lava::end</definition>
        <argsstring>(reversion_wrapper&lt; T &gt; w)</argsstring>
        <name>end</name>
        <qualifiedname>lava::end</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1reversion__wrapper" kindref="compound">reversion_wrapper</ref>&lt; T &gt;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
<para>End the iterator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of iterable </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>w</parametername>
</parameternamelist>
<parameterdescription>
<para>Reversion wrapper </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>auto Iterator </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/misc.hpp" line="233" column="13" bodyfile="liblava/core/misc.hpp" bodystart="233" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="misc_8hpp_1a6be2bfbc12c6162b059b375f84fa988a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structlava_1_1reversion__wrapper" kindref="compound">reversion_wrapper</ref>&lt; T &gt;</type>
        <definition>reversion_wrapper&lt; T &gt; lava::reverse</definition>
        <argsstring>(T &amp;&amp;iterable)</argsstring>
        <name>reverse</name>
        <qualifiedname>lava::reverse</qualifiedname>
        <param>
          <type>T &amp;&amp;</type>
          <declname>iterable</declname>
        </param>
        <briefdescription>
<para>Reverse iteration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of iterable </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iterable</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterable </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>reversion_wrapper&lt;T&gt; Wrapper </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/misc.hpp" line="244" column="26" bodyfile="liblava/core/misc.hpp" bodystart="244" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="time_8hpp_1a56103af37e9e492515a76dc05975b379" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8hpp_1a5b5c372cf05c5834c538aad2b937aa9b" kindref="member">delta</ref></type>
        <definition>delta lava::to_delta</definition>
        <argsstring>(milliseconds ms)</argsstring>
        <name>to_delta</name>
        <qualifiedname>lava::to_delta</qualifiedname>
        <param>
          <type><ref refid="time_8hpp_1a2420fab3139b1aa75388807c29fabbfb" kindref="member">milliseconds</ref></type>
          <declname>ms</declname>
        </param>
        <briefdescription>
<para>Convert milliseconds to delta. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ms</parametername>
</parameternamelist>
<parameterdescription>
<para>Milliseconds to convert </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>delta Converted delta </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/time.hpp" line="58" column="14" bodyfile="liblava/core/time.hpp" bodystart="58" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="time_8hpp_1a5a9ff164b025aac83c0ae087b5c31e3d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8hpp_1a5b5c372cf05c5834c538aad2b937aa9b" kindref="member">delta</ref></type>
        <definition>delta lava::to_dt</definition>
        <argsstring>(milliseconds ms)</argsstring>
        <name>to_dt</name>
        <qualifiedname>lava::to_dt</qualifiedname>
        <param>
          <type><ref refid="time_8hpp_1a2420fab3139b1aa75388807c29fabbfb" kindref="member">milliseconds</ref></type>
          <declname>ms</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="time_8hpp_1a56103af37e9e492515a76dc05975b379" kindref="member">to_delta()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/time.hpp" line="65" column="14" bodyfile="liblava/core/time.hpp" bodystart="65" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="time_8hpp_1a9d5bf259deae56c66dd9eeaf562c5c42" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8hpp_1ac5a07aee91729f6ed77bd47fd1095218" kindref="member">real</ref></type>
        <definition>real lava::to_sec</definition>
        <argsstring>(milliseconds ms)</argsstring>
        <name>to_sec</name>
        <qualifiedname>lava::to_sec</qualifiedname>
        <param>
          <type><ref refid="time_8hpp_1a2420fab3139b1aa75388807c29fabbfb" kindref="member">milliseconds</ref></type>
          <declname>ms</declname>
        </param>
        <briefdescription>
<para>Convert milliseconds to seconds. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ms</parametername>
</parameternamelist>
<parameterdescription>
<para>Milliseconds to convert </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>real Converted seconds </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/time.hpp" line="74" column="13" bodyfile="liblava/core/time.hpp" bodystart="74" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="time_8hpp_1a8626d59679b46f72c1d605edc6a66235" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8hpp_1a7e5d7f16aff5126a54243302372b43b1" kindref="member">i32</ref></type>
        <definition>i32 lava::to_sec_fix</definition>
        <argsstring>(milliseconds ms)</argsstring>
        <name>to_sec_fix</name>
        <qualifiedname>lava::to_sec_fix</qualifiedname>
        <param>
          <type><ref refid="time_8hpp_1a2420fab3139b1aa75388807c29fabbfb" kindref="member">milliseconds</ref></type>
          <declname>ms</declname>
        </param>
        <briefdescription>
<para>Convert milliseconds to fixed seconds. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ms</parametername>
</parameternamelist>
<parameterdescription>
<para>Milliseconds to convert </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>i32 Converted fixed seconds </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/time.hpp" line="83" column="12" bodyfile="liblava/core/time.hpp" bodystart="83" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="time_8hpp_1ac2432e735e962579aa315c70a152ea90" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="time_8hpp_1a8cc2ca1333c2a464b07f9c54326a4569" kindref="member">ms</ref></type>
        <definition>ms lava::to_ms</definition>
        <argsstring>(delta dt)</argsstring>
        <name>to_ms</name>
        <qualifiedname>lava::to_ms</qualifiedname>
        <param>
          <type><ref refid="types_8hpp_1a5b5c372cf05c5834c538aad2b937aa9b" kindref="member">delta</ref></type>
          <declname>dt</declname>
        </param>
        <briefdescription>
<para>Convert delta to milliseconds. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dt</parametername>
</parameternamelist>
<parameterdescription>
<para>Delta to convert </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ms Converted milliseconds </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/time.hpp" line="92" column="11" bodyfile="liblava/core/time.hpp" bodystart="92" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="time_8hpp_1a4f8df81b62fc4f7fd4a1fd213268c6c9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="time_8hpp_1a8cc2ca1333c2a464b07f9c54326a4569" kindref="member">ms</ref></type>
        <definition>ms lava::to_ms</definition>
        <argsstring>(real sec)</argsstring>
        <name>to_ms</name>
        <qualifiedname>lava::to_ms</qualifiedname>
        <param>
          <type><ref refid="types_8hpp_1ac5a07aee91729f6ed77bd47fd1095218" kindref="member">real</ref></type>
          <declname>sec</declname>
        </param>
        <briefdescription>
<para>Convert seconds to milliseconds. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sec</parametername>
</parameternamelist>
<parameterdescription>
<para>Seconds to convert </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ms Converted milliseconds </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/time.hpp" line="101" column="11" bodyfile="liblava/core/time.hpp" bodystart="101" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="time_8hpp_1a5234ff682ffd6e6cebd07408286a1c12" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CLOCK_TYPE</type>
            <defval>std::chrono::system_clock</defval>
          </param>
        </templateparamlist>
        <type><ref refid="types_8hpp_1a56891e6c1c56efa24abd6b84f71d9145" kindref="member">string</ref></type>
        <definition>string lava::timestamp</definition>
        <argsstring>(const typename CLOCK_TYPE::time_point &amp;time_point, string_ref format=&quot;%Y-%m-%d %H-%M-%S&quot;)</argsstring>
        <name>timestamp</name>
        <qualifiedname>lava::timestamp</qualifiedname>
        <param>
          <type>const typename CLOCK_TYPE::time_point &amp;</type>
          <declname>time_point</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a01c2a7bfa24e7ea76ef5a79d8d4daaf6" kindref="member">string_ref</ref></type>
          <declname>format</declname>
          <defval>&quot;%Y-%m-%d %H-%M-%S&quot;</defval>
        </param>
        <briefdescription>
<para>Convert timestamp to string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>CLOCK_TYPE</parametername>
</parameternamelist>
<parameterdescription>
<para>Clock type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time_point</parametername>
</parameternamelist>
<parameterdescription>
<para>Time point </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>String format </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>string Converted string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/time.hpp" line="175" column="15" bodyfile="liblava/core/time.hpp" bodystart="175" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="time_8hpp_1a386bd7c3577aefd1a30788b1aa88d95a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8hpp_1a56891e6c1c56efa24abd6b84f71d9145" kindref="member">string</ref></type>
        <definition>string lava::get_current_time</definition>
        <argsstring>()</argsstring>
        <name>get_current_time</name>
        <qualifiedname>lava::get_current_time</qualifiedname>
        <briefdescription>
<para>Get the current time as string. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>string Time and date representation </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/time.hpp" line="194" column="15" bodyfile="liblava/core/time.hpp" bodystart="194" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="time_8hpp_1ab3c0e85a397c761e92162b76a4ee369e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="time_8hpp_1a8cc2ca1333c2a464b07f9c54326a4569" kindref="member">ms</ref></type>
        <definition>ms lava::get_current_timestamp_ms</definition>
        <argsstring>()</argsstring>
        <name>get_current_timestamp_ms</name>
        <qualifiedname>lava::get_current_timestamp_ms</qualifiedname>
        <briefdescription>
<para>Get the current timestamp in milliseconds. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>ms Timestamp in ms </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/time.hpp" line="207" column="11" bodyfile="liblava/core/time.hpp" bodystart="207" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="time_8hpp_1a426ec2454365e2707061effc9e72d623" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="time_8hpp_1a8583565dc80df92137aee37ba544c024" kindref="member">us</ref></type>
        <definition>us lava::get_current_timestamp_us</definition>
        <argsstring>()</argsstring>
        <name>get_current_timestamp_us</name>
        <qualifiedname>lava::get_current_timestamp_us</qualifiedname>
        <briefdescription>
<para>Get the current timestamp in microseconds. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>us Timestamp in us </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/time.hpp" line="216" column="11" bodyfile="liblava/core/time.hpp" bodystart="216" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="time_8hpp_1a7a41bf2f96da788189a29b8e9363cfa2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8hpp_1abd93cf188810a5c57f1e971c1ba12db6" kindref="member">ui64</ref></type>
        <definition>ui64 lava::get_current_timestamp</definition>
        <argsstring>()</argsstring>
        <name>get_current_timestamp</name>
        <qualifiedname>lava::get_current_timestamp</qualifiedname>
        <briefdescription>
<para>Get the current timestamp in milliseconds (uint) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>ui64 Timestamp in ms (uint) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/time.hpp" line="225" column="13" bodyfile="liblava/core/time.hpp" bodystart="225" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="types_8hpp_1ad11094258ce2dac54b79917ae31198b6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
        <definition>name lava::str</definition>
        <argsstring>(string_ref value)</argsstring>
        <name>str</name>
        <qualifiedname>lava::str</qualifiedname>
        <param>
          <type><ref refid="types_8hpp_1a01c2a7bfa24e7ea76ef5a79d8d4daaf6" kindref="member">string_ref</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Get c-string representation of string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Source string </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>name C-string representation </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="193" column="13" bodyfile="liblava/core/types.hpp" bodystart="193" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="types_8hpp_1ad3df134e8770529a2644dd8a4673ce22" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8hpp_1a3a32680a459890aa9c80b4f5533b3b1f" kindref="member">r32</ref></type>
        <definition>r32 lava::to_r32</definition>
        <argsstring>(auto value)</argsstring>
        <name>to_r32</name>
        <qualifiedname>lava::to_r32</qualifiedname>
        <param>
          <type>auto</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Convert to r32. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Source value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>r32 Converted value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="202" column="12" bodyfile="liblava/core/types.hpp" bodystart="202" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="types_8hpp_1afe30d55ad7a71c535f6b19ea62da8fa1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8hpp_1aeb5fe0bd98dc4fba84d1e81c12d31476" kindref="member">r64</ref></type>
        <definition>r64 lava::to_r64</definition>
        <argsstring>(auto value)</argsstring>
        <name>to_r64</name>
        <qualifiedname>lava::to_r64</qualifiedname>
        <param>
          <type>auto</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Convert to r64. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Source value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>r64 Converted value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="211" column="12" bodyfile="liblava/core/types.hpp" bodystart="211" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="types_8hpp_1a39cae746a7d2b802c1bd35d63b899532" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8hpp_1a7e5d7f16aff5126a54243302372b43b1" kindref="member">i32</ref></type>
        <definition>i32 lava::to_i32</definition>
        <argsstring>(auto value)</argsstring>
        <name>to_i32</name>
        <qualifiedname>lava::to_i32</qualifiedname>
        <param>
          <type>auto</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Convert to i32. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Source value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>i32 Converted value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="220" column="12" bodyfile="liblava/core/types.hpp" bodystart="220" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="types_8hpp_1a45314ec1799c5849eb937045cb65c5e2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8hpp_1af894ded8dd233c6505155b19777af556" kindref="member">i64</ref></type>
        <definition>i64 lava::to_i64</definition>
        <argsstring>(auto value)</argsstring>
        <name>to_i64</name>
        <qualifiedname>lava::to_i64</qualifiedname>
        <param>
          <type>auto</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Convert to i64. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Source value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>i64 Converted value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="229" column="12" bodyfile="liblava/core/types.hpp" bodystart="229" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="types_8hpp_1aeeecf3eba131cdad020bbd82d0db68c9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8hpp_1ae3c4bbc50dd4583ab0df2c24c49a49c9" kindref="member">ui32</ref></type>
        <definition>ui32 lava::to_ui32</definition>
        <argsstring>(auto value)</argsstring>
        <name>to_ui32</name>
        <qualifiedname>lava::to_ui32</qualifiedname>
        <param>
          <type>auto</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Convert to ui32. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Source value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ui32 Converted value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="238" column="13" bodyfile="liblava/core/types.hpp" bodystart="238" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="types_8hpp_1a52a659311126b89d05817c269505f14d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8hpp_1abd93cf188810a5c57f1e971c1ba12db6" kindref="member">ui64</ref></type>
        <definition>ui64 lava::to_ui64</definition>
        <argsstring>(auto value)</argsstring>
        <name>to_ui64</name>
        <qualifiedname>lava::to_ui64</qualifiedname>
        <param>
          <type>auto</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Convert to ui64. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Source value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ui64 Converted value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="247" column="13" bodyfile="liblava/core/types.hpp" bodystart="247" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="types_8hpp_1ab8e6637fd6f18692d24992fd9df90171" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
        <definition>size_t lava::to_size_t</definition>
        <argsstring>(auto value)</argsstring>
        <name>to_size_t</name>
        <qualifiedname>lava::to_size_t</qualifiedname>
        <param>
          <type>auto</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Convert to size_t. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Source value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>size_t Converted value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="256" column="15" bodyfile="liblava/core/types.hpp" bodystart="256" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="types_8hpp_1a5da1a3211b6ee5bed1b706d8962ad10b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8hpp_1a2a40eb7fccb1ebcfd58d6d4b7a078e5c" kindref="member">index</ref></type>
        <definition>index lava::to_index</definition>
        <argsstring>(auto value)</argsstring>
        <name>to_index</name>
        <qualifiedname>lava::to_index</qualifiedname>
        <param>
          <type>auto</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Convert to index. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Source value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>index Converted value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="265" column="14" bodyfile="liblava/core/types.hpp" bodystart="265" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="types_8hpp_1a591d8f47274518e2cf3f33c42a8995ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>char const *</type>
        <definition>char const  * lava::to_char</definition>
        <argsstring>(auto value)</argsstring>
        <name>to_char</name>
        <qualifiedname>lava::to_char</qualifiedname>
        <param>
          <type>auto</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Convert to pointer const char. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Source value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>char const* Converted value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="274" column="19" bodyfile="liblava/core/types.hpp" bodystart="274" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="types_8hpp_1a5572f85d1a8e98f9312e25f986d59c1c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void lava::hash_combine</definition>
        <argsstring>(size_t &amp;seed, T const &amp;val)</argsstring>
        <name>hash_combine</name>
        <qualifiedname>lava::hash_combine</qualifiedname>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref> &amp;</type>
          <declname>seed</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Combine hash seed with value - from boost (functional/hash) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://www.boost.org/doc/libs/1_77_0/doc/html/hash/combine.html">https://www.boost.org/doc/libs/1_77_0/doc/html/hash/combine.html</ulink> </para>
</simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>seed</parametername>
</parameternamelist>
<parameterdescription>
<para>Seed to combine </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to combine </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="316" column="13" bodyfile="liblava/core/types.hpp" bodystart="316" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="types_8hpp_1a53cef41aea160cf568aa5dd576c9bd6b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void lava::hash_value</definition>
        <argsstring>(size_t &amp;seed, T const &amp;val)</argsstring>
        <name>hash_value</name>
        <qualifiedname>lava::hash_value</qualifiedname>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref> &amp;</type>
          <declname>seed</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Auxiliary generic functions to create a hash value using a seed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>seed</parametername>
</parameternamelist>
<parameterdescription>
<para>Seed for hash </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Hash value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="329" column="13" bodyfile="liblava/core/types.hpp" bodystart="329" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="types_8hpp_1ac1b95fd404d9e4e4318d37da61dae384" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Types</declname>
            <defname>Types</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void lava::hash_value</definition>
        <argsstring>(size_t &amp;seed, T const &amp;val, Types const &amp;... args)</argsstring>
        <name>hash_value</name>
        <qualifiedname>lava::hash_value</qualifiedname>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref> &amp;</type>
          <declname>seed</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>val</declname>
        </param>
        <param>
          <type>Types const &amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="types_8hpp_1a53cef41aea160cf568aa5dd576c9bd6b" kindref="member">hash_value&lt;T&gt;()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="338" column="13" bodyfile="liblava/core/types.hpp" bodystart="338" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="types_8hpp_1a854d276fa6bb3bbc17ce3bc01600fa12" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Types</declname>
            <defname>Types</defname>
          </param>
        </templateparamlist>
        <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
        <definition>size_t lava::hash_value</definition>
        <argsstring>(Types const &amp;... args)</argsstring>
        <name>hash_value</name>
        <qualifiedname>lava::hash_value</qualifiedname>
        <param>
          <type>Types const &amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="types_8hpp_1a53cef41aea160cf568aa5dd576c9bd6b" kindref="member">hash_value&lt;T&gt;()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/types.hpp" line="349" column="15" bodyfile="liblava/core/types.hpp" bodystart="349" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="version_8hpp_1a273284a1f05f4eb9a4e33a7420ff2b10" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="version_8hpp_1ad21c2311c0d3c020c4ee9a7179d3ea2a" kindref="member">sem_version</ref></type>
        <definition>sem_version lava::to_version</definition>
        <argsstring>(string_ref str)</argsstring>
        <name>to_version</name>
        <qualifiedname>lava::to_version</qualifiedname>
        <param>
          <type><ref refid="types_8hpp_1a01c2a7bfa24e7ea76ef5a79d8d4daaf6" kindref="member">string_ref</ref></type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Convert string to semantic version. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>String to convert </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>sem_version Semantic version </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/core/version.hpp" line="41" column="20" bodyfile="liblava/core/version.hpp" bodystart="41" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="file_2file_8hpp_1a7aaf917bd12b10e762020a0bd7bf009d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool lava::file_error</definition>
        <argsstring>(i64 result)</argsstring>
        <name>file_error</name>
        <qualifiedname>lava::file_error</qualifiedname>
        <param>
          <type><ref refid="types_8hpp_1af894ded8dd233c6505155b19777af556" kindref="member">i64</ref></type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Check file error result. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>Result code to check </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Error result or okay </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/file/file.hpp" line="35" column="13" bodyfile="liblava/file/file.hpp" bodystart="35" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="file__utils_8hpp_1a4c3e9d3f0d95eb8a88b768ee76e226b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lava::read_file</definition>
        <argsstring>(std::vector&lt; char &gt; &amp;out, string_ref filename)</argsstring>
        <name>read_file</name>
        <qualifiedname>lava::read_file</qualifiedname>
        <param>
          <type>std::vector&lt; char &gt; &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a01c2a7bfa24e7ea76ef5a79d8d4daaf6" kindref="member">string_ref</ref></type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Read data from file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>File data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Read was successful or failed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/file/file_utils.hpp" line="20" column="6" declfile="liblava/file/file_utils.hpp" declline="20" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="file__utils_8hpp_1a76549be42a251ec8fea5859c59966048" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lava::write_file</definition>
        <argsstring>(string_ref filename, char const *data, size_t data_size)</argsstring>
        <name>write_file</name>
        <qualifiedname>lava::write_file</qualifiedname>
        <param>
          <type><ref refid="types_8hpp_1a01c2a7bfa24e7ea76ef5a79d8d4daaf6" kindref="member">string_ref</ref></type>
          <declname>filename</declname>
        </param>
        <param>
          <type>char const *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a38bc8f04d76c66293330e126a20cd303" kindref="member">size_t</ref></type>
          <declname>data_size</declname>
        </param>
        <briefdescription>
<para>Write data to file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to write </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Write was successful or failed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/file/file_utils.hpp" line="29" column="6" declfile="liblava/file/file_utils.hpp" declline="29" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="file__utils_8hpp_1ae1308f8f78ed75e822b67a4e2a29bdc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lava::extension</definition>
        <argsstring>(string_ref filename, string_ref extension)</argsstring>
        <name>extension</name>
        <qualifiedname>lava::extension</qualifiedname>
        <param>
          <type><ref refid="types_8hpp_1a01c2a7bfa24e7ea76ef5a79d8d4daaf6" kindref="member">string_ref</ref></type>
          <declname>filename</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a01c2a7bfa24e7ea76ef5a79d8d4daaf6" kindref="member">string_ref</ref></type>
          <declname>extension</declname>
        </param>
        <briefdescription>
<para>Check extension of file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>extension</parametername>
</parameternamelist>
<parameterdescription>
<para>Extension to check </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Extension found or not </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/file/file_utils.hpp" line="39" column="6" declfile="liblava/file/file_utils.hpp" declline="39" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="file__utils_8hpp_1ab5791d1141824979d18967f30cbcd1b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lava::extension</definition>
        <argsstring>(string_ref filename, string_list_ref extensions)</argsstring>
        <name>extension</name>
        <qualifiedname>lava::extension</qualifiedname>
        <param>
          <type><ref refid="types_8hpp_1a01c2a7bfa24e7ea76ef5a79d8d4daaf6" kindref="member">string_ref</ref></type>
          <declname>filename</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a84b64f09909c198d14fadc65b0776272" kindref="member">string_list_ref</ref></type>
          <declname>extensions</declname>
        </param>
        <briefdescription>
<para>Check extensions of file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>extensions</parametername>
</parameternamelist>
<parameterdescription>
<para>List of extensions to check </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Extension found or not </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/file/file_utils.hpp" line="47" column="6" declfile="liblava/file/file_utils.hpp" declline="47" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="file__utils_8hpp_1a79582249a9e8729cd0482fc78f99308c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="types_8hpp_1a56891e6c1c56efa24abd6b84f71d9145" kindref="member">string</ref></type>
        <definition>string lava::get_filename_from</definition>
        <argsstring>(string_ref path, bool with_extension=false)</argsstring>
        <name>get_filename_from</name>
        <qualifiedname>lava::get_filename_from</qualifiedname>
        <param>
          <type><ref refid="types_8hpp_1a01c2a7bfa24e7ea76ef5a79d8d4daaf6" kindref="member">string_ref</ref></type>
          <declname>path</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>with_extension</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get the file name from path. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>Target path </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>with_extension</parametername>
</parameternamelist>
<parameterdescription>
<para>Include extension in file name </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>string File name </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/file/file_utils.hpp" line="56" column="8" declfile="liblava/file/file_utils.hpp" declline="56" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="file__utils_8hpp_1a0e41f2f9fa6d3d436271c3a93487aa6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lava::remove_existing_path</definition>
        <argsstring>(string &amp;target, string_ref path)</argsstring>
        <name>remove_existing_path</name>
        <qualifiedname>lava::remove_existing_path</qualifiedname>
        <param>
          <type><ref refid="types_8hpp_1a56891e6c1c56efa24abd6b84f71d9145" kindref="member">string</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a01c2a7bfa24e7ea76ef5a79d8d4daaf6" kindref="member">string_ref</ref></type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Remove existing path. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>Target path </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>Path to remove </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Remove was successful or failed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/file/file_utils.hpp" line="65" column="6" declfile="liblava/file/file_utils.hpp" declline="65" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="file__utils_8hpp_1a54ed54233a7a48dc4ebd5afcfc9abba7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lava::load_file_data</definition>
        <argsstring>(string_ref filename, data &amp;target)</argsstring>
        <name>load_file_data</name>
        <qualifiedname>lava::load_file_data</qualifiedname>
        <param>
          <type><ref refid="types_8hpp_1a01c2a7bfa24e7ea76ef5a79d8d4daaf6" kindref="member">string_ref</ref></type>
          <declname>filename</declname>
        </param>
        <param>
          <type><ref refid="structlava_1_1data" kindref="compound">data</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <briefdescription>
<para>Load file data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>Target data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Load was successful or failed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/file/file_utils.hpp" line="74" column="6" declfile="liblava/file/file_utils.hpp" declline="74" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="argh_8hpp_1afd197b24f5f0a6899e5c789be5423d44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lava::log_command_line</definition>
        <argsstring>(cmd_line cmd_line)</argsstring>
        <name>log_command_line</name>
        <qualifiedname>lava::log_command_line</qualifiedname>
        <param>
          <type><ref refid="argh_8hpp_1a0ec69c8269dd4598981cbfeea2cc88d1" kindref="member">cmd_line</ref></type>
          <declname>cmd_line</declname>
        </param>
        <briefdescription>
<para>Log command line. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmd_line</parametername>
</parameternamelist>
<parameterdescription>
<para>Command line arguments </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/argh.hpp" line="22" column="6" declfile="liblava/frame/argh.hpp" declline="22" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="argh_8hpp_1a062975a34441fc9c4bdebaac998431c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="types_8hpp_1a56891e6c1c56efa24abd6b84f71d9145" kindref="member">string</ref></type>
        <definition>string lava::get_cmd</definition>
        <argsstring>(cmd_line cmd_line, std::initializer_list&lt; name const &gt; names)</argsstring>
        <name>get_cmd</name>
        <qualifiedname>lava::get_cmd</qualifiedname>
        <param>
          <type><ref refid="argh_8hpp_1a0ec69c8269dd4598981cbfeea2cc88d1" kindref="member">cmd_line</ref></type>
          <declname>cmd_line</declname>
        </param>
        <param>
          <type>std::initializer_list&lt; <ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref> const &gt;</type>
          <declname>names</declname>
        </param>
        <briefdescription>
<para>Get the value from command line arguments. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmd_line</parametername>
</parameternamelist>
<parameterdescription>
<para>Command line arguments </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>names</parametername>
</parameternamelist>
<parameterdescription>
<para>Argument names </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>string Value of command line argument </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/argh.hpp" line="30" column="8" declfile="liblava/frame/argh.hpp" declline="30" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="frame_2frame_8hpp_1a0c842d5a8e181f26ac56e0cb9890f4fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="time_8hpp_1a8cc2ca1333c2a464b07f9c54326a4569" kindref="member">ms</ref></type>
        <definition>ms lava::now</definition>
        <argsstring>()</argsstring>
        <name>now</name>
        <qualifiedname>lava::now</qualifiedname>
        <briefdescription>
<para>Get the current time. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>ms Current milliseconds </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/frame.hpp" line="87" column="4" declfile="liblava/frame/frame.hpp" declline="87" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="frame_2frame_8hpp_1a9326b703f3378a53589c04a56414e20f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lava::handle_events</definition>
        <argsstring>(bool wait=false)</argsstring>
        <name>handle_events</name>
        <qualifiedname>lava::handle_events</qualifiedname>
        <param>
          <type>bool</type>
          <declname>wait</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Handle events. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>wait</parametername>
</parameternamelist>
<parameterdescription>
<para>Wait for events </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/frame.hpp" line="323" column="6" declfile="liblava/frame/frame.hpp" declline="323" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="frame_2frame_8hpp_1a7e2843c4ce32c8a7103c0fc92531c938" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lava::handle_events_timeout</definition>
        <argsstring>(ms timeout)</argsstring>
        <name>handle_events_timeout</name>
        <qualifiedname>lava::handle_events_timeout</qualifiedname>
        <param>
          <type><ref refid="time_8hpp_1a8cc2ca1333c2a464b07f9c54326a4569" kindref="member">ms</ref></type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Handle events with timeout. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>Wait timeout in milliseconds </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/frame.hpp" line="329" column="6" declfile="liblava/frame/frame.hpp" declline="329" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="frame_2frame_8hpp_1a12696017c434c033e4a97f57d54ccc7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lava::handle_events_timeout</definition>
        <argsstring>(seconds timeout)</argsstring>
        <name>handle_events_timeout</name>
        <qualifiedname>lava::handle_events_timeout</qualifiedname>
        <param>
          <type><ref refid="time_8hpp_1a44912e21e239eb2372d12ebb2cb0ce24" kindref="member">seconds</ref></type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Handle events with timeout. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>Wait timeout in seconds </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/frame.hpp" line="335" column="6" declfile="liblava/frame/frame.hpp" declline="335" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="frame_2frame_8hpp_1ab3fe2f7aa3cbd0d972be4a09b10d80dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lava::post_empty_event</definition>
        <argsstring>()</argsstring>
        <name>post_empty_event</name>
        <qualifiedname>lava::post_empty_event</qualifiedname>
        <briefdescription>
<para>Post an empty event. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/frame.hpp" line="340" column="6" declfile="liblava/frame/frame.hpp" declline="340" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="gamepad_8hpp_1a7a776fd083c4b25475e8aadfe3ad7b2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structlava_1_1gamepad_1a4f3fd03973e46439e28b2579567c66c5" kindref="member">gamepad::list</ref></type>
        <definition>gamepad::list lava::gamepads</definition>
        <argsstring>()</argsstring>
        <name>gamepads</name>
        <qualifiedname>lava::gamepads</qualifiedname>
        <briefdescription>
<para>Get list of all gamepads. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="structlava_1_1gamepad_1a4f3fd03973e46439e28b2579567c66c5" kindref="member">gamepad::list</ref> List of gamepads </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/gamepad.hpp" line="186" column="15" declfile="liblava/frame/gamepad.hpp" declline="186" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="input_8hpp_1a1b1952aaad3122db329f75dd20ee5e56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="types_8hpp_1a56891e6c1c56efa24abd6b84f71d9145" kindref="member">string</ref></type>
        <definition>string lava::to_string</definition>
        <argsstring>(key k)</argsstring>
        <name>to_string</name>
        <qualifiedname>lava::to_string</qualifiedname>
        <param>
          <type><ref refid="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831" kindref="member">key</ref></type>
          <declname>k</declname>
        </param>
        <briefdescription>
<para>Convert input key to string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>Input key </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>string String representation </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/input.hpp" line="178" column="8" declfile="liblava/frame/input.hpp" declline="178" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="input_8hpp_1a0f8cc3e9766eaac51a22d0e25ccf9df8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="types_8hpp_1a7e5d7f16aff5126a54243302372b43b1" kindref="member">i32</ref></type>
        <definition>i32 lava::get_scancode</definition>
        <argsstring>(key key)</argsstring>
        <name>get_scancode</name>
        <qualifiedname>lava::get_scancode</qualifiedname>
        <param>
          <type><ref refid="input_8hpp_1a9f1f9c2e6ae8192d1adecd3314877831" kindref="member">key</ref></type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Get scancode based on key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>Input key </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>i32 Input scan code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/input.hpp" line="185" column="5" declfile="liblava/frame/input.hpp" declline="185" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="input_8hpp_1aae1ae981718d104ae1e4e3093901b766" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool lava::check_mod</definition>
        <argsstring>(mod m, mod c)</argsstring>
        <name>check_mod</name>
        <qualifiedname>lava::check_mod</qualifiedname>
        <param>
          <type><ref refid="input_8hpp_1a83cec806a5f7af14a6981b4760aef6fb" kindref="member">mod</ref></type>
          <declname>m</declname>
        </param>
        <param>
          <type><ref refid="input_8hpp_1a83cec806a5f7af14a6981b4760aef6fb" kindref="member">mod</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Check if mod is active. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>Target mod </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>Mod to check </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mod is active or not </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/input.hpp" line="220" column="13" bodyfile="liblava/frame/input.hpp" bodystart="220" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="input_8hpp_1a54400320ffe7fc0c142fccb819bad958" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="types_8hpp_1a56891e6c1c56efa24abd6b84f71d9145" kindref="member">string</ref></type>
        <definition>string lava::to_string</definition>
        <argsstring>(mod m)</argsstring>
        <name>to_string</name>
        <qualifiedname>lava::to_string</qualifiedname>
        <param>
          <type><ref refid="input_8hpp_1a83cec806a5f7af14a6981b4760aef6fb" kindref="member">mod</ref></type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Convert input mod to string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>Input mod </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>string String representation </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/input.hpp" line="232" column="8" declfile="liblava/frame/input.hpp" declline="232" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="render__target_8hpp_1a396d9438e62a79e60ded5e2691a1e72c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structlava_1_1render__target_1ad897aa3c29eff085b2b4e3d44c869db1" kindref="member">render_target::s_ptr</ref></type>
        <definition>render_target::s_ptr lava::create_target</definition>
        <argsstring>(window *window, device::ptr device, bool v_sync=false, bool triple_buffer=true, surface_format_request request={})</argsstring>
        <name>create_target</name>
        <qualifiedname>lava::create_target</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1window" kindref="compound">window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="structlava_1_1device_1a6f7d378ef30e7bf1cd4fe208de859250" kindref="member">device::ptr</ref></type>
          <declname>device</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>v_sync</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>triple_buffer</declname>
          <defval>true</defval>
        </param>
        <param>
          <type><ref refid="structlava_1_1surface__format__request" kindref="compound">surface_format_request</ref></type>
          <declname>request</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>Create a new render target. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>Target window </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>Vulkan device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v_sync</parametername>
</parameternamelist>
<parameterdescription>
<para>V-Sync enabled </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>triple_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>VK_PRESENT_MODE_MAILBOX_KHR preferred over VK_PRESENT_MODE_IMMEDIATE_KHR </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>request</parametername>
</parameternamelist>
<parameterdescription>
<para>Surface format request </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structlava_1_1render__target_1ad897aa3c29eff085b2b4e3d44c869db1" kindref="member">render_target::s_ptr</ref> Shared pointer to render target </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/render_target.hpp" line="216" column="22" declfile="liblava/frame/render_target.hpp" declline="216" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="render__target_8hpp_1a62b9da0a3e63f98456db5e85ff3e6ba5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlava_1_1render__target_1ad897aa3c29eff085b2b4e3d44c869db1" kindref="member">render_target::s_ptr</ref></type>
        <definition>render_target::s_ptr lava::create_target_v_sync</definition>
        <argsstring>(window *window, device::ptr device, surface_format_request request={})</argsstring>
        <name>create_target_v_sync</name>
        <qualifiedname>lava::create_target_v_sync</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1window" kindref="compound">window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="structlava_1_1device_1a6f7d378ef30e7bf1cd4fe208de859250" kindref="member">device::ptr</ref></type>
          <declname>device</declname>
        </param>
        <param>
          <type><ref refid="structlava_1_1surface__format__request" kindref="compound">surface_format_request</ref></type>
          <declname>request</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>Create a new render target with V-Sync enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>Target window </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>Vulkan device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>request</parametername>
</parameternamelist>
<parameterdescription>
<para>Surface format request </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structlava_1_1render__target_1ad897aa3c29eff085b2b4e3d44c869db1" kindref="member">render_target::s_ptr</ref> Shared pointer to render target </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/render_target.hpp" line="229" column="29" bodyfile="liblava/frame/render_target.hpp" bodystart="229" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="render__target_8hpp_1a8e4b3c82e56c886bae2518119a2ef716" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlava_1_1render__target_1ad897aa3c29eff085b2b4e3d44c869db1" kindref="member">render_target::s_ptr</ref></type>
        <definition>render_target::s_ptr lava::create_target_no_triple_buffer</definition>
        <argsstring>(window *window, device::ptr device, surface_format_request request={})</argsstring>
        <name>create_target_no_triple_buffer</name>
        <qualifiedname>lava::create_target_no_triple_buffer</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1window" kindref="compound">window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="structlava_1_1device_1a6f7d378ef30e7bf1cd4fe208de859250" kindref="member">device::ptr</ref></type>
          <declname>device</declname>
        </param>
        <param>
          <type><ref refid="structlava_1_1surface__format__request" kindref="compound">surface_format_request</ref></type>
          <declname>request</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>Create a new render target that prefers VK_PRESENT_MODE_IMMEDIATE_KHR over VK_PRESENT_MODE_MAILBOX_KHR. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>Target window </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>Vulkan device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>request</parametername>
</parameternamelist>
<parameterdescription>
<para>Surface format request </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structlava_1_1render__target_1ad897aa3c29eff085b2b4e3d44c869db1" kindref="member">render_target::s_ptr</ref> Shared pointer to render target </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/render_target.hpp" line="246" column="29" bodyfile="liblava/frame/render_target.hpp" bodystart="246" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="window_8hpp_1a83bdbe791a46c86d3096a037a1c260ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VkSurfaceKHR</type>
        <definition>VkSurfaceKHR lava::create_surface</definition>
        <argsstring>(GLFWwindow *window)</argsstring>
        <name>create_surface</name>
        <qualifiedname>lava::create_surface</qualifiedname>
        <param>
          <type>GLFWwindow *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Create a new surface. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>GLFW window handle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>VkSurfaceKHR Vulkan surface </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/window.hpp" line="535" column="14" declfile="liblava/frame/window.hpp" declline="535" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="window_8hpp_1ac53aead78134d695be87a92e4e784e1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structlava_1_1window" kindref="compound">window</ref> *</type>
        <definition>window * lava::get_window</definition>
        <argsstring>(GLFWwindow *handle)</argsstring>
        <name>get_window</name>
        <qualifiedname>lava::get_window</qualifiedname>
        <param>
          <type>GLFWwindow *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Get the window by GLFW handle. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>GLFW window handle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>window* Assigned Window </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/window.hpp" line="542" column="8" declfile="liblava/frame/window.hpp" declline="542" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="buffer_8hpp_1a4fe4f0c45b11610b735dd4ec5eb1d36a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VkPipelineStageFlags</type>
        <definition>VkPipelineStageFlags lava::buffer_usage_to_possible_stages</definition>
        <argsstring>(VkBufferUsageFlags usage)</argsstring>
        <name>buffer_usage_to_possible_stages</name>
        <qualifiedname>lava::buffer_usage_to_possible_stages</qualifiedname>
        <param>
          <type>VkBufferUsageFlags</type>
          <declname>usage</declname>
        </param>
        <briefdescription>
<para>Get possible stages by bufferusage flags. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>usage</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer usage flags </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>VkPipelineStageFlags Pipeline stage flags </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/buffer.hpp" line="196" column="22" declfile="liblava/resource/buffer.hpp" declline="196" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="buffer_8hpp_1a32e379ae053c501d6874da51314cf6ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VkAccessFlags</type>
        <definition>VkAccessFlags lava::buffer_usage_to_possible_access</definition>
        <argsstring>(VkBufferUsageFlags usage)</argsstring>
        <name>buffer_usage_to_possible_access</name>
        <qualifiedname>lava::buffer_usage_to_possible_access</qualifiedname>
        <param>
          <type>VkBufferUsageFlags</type>
          <declname>usage</declname>
        </param>
        <briefdescription>
<para>Get possible access by buffer usage flags. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>usage</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer usage flags </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>VkAccessFlags Access flags </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/buffer.hpp" line="203" column="15" declfile="liblava/resource/buffer.hpp" declline="203" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="format_8hpp_1ad7316f12587b541990a1d46e1fd32afb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lava::format_depth</definition>
        <argsstring>(VkFormat format)</argsstring>
        <name>format_depth</name>
        <qualifiedname>lava::format_depth</qualifiedname>
        <param>
          <type>VkFormat</type>
          <declname>format</declname>
        </param>
        <briefdescription>
<para>Check if format is depth compatible. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>Format to check </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Format is depth compatible or not </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/format.hpp" line="23" column="6" declfile="liblava/resource/format.hpp" declline="23" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="format_8hpp_1ae8674587a9dc4313b9813cf6f7066174" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lava::format_stencil</definition>
        <argsstring>(VkFormat format)</argsstring>
        <name>format_stencil</name>
        <qualifiedname>lava::format_stencil</qualifiedname>
        <param>
          <type>VkFormat</type>
          <declname>format</declname>
        </param>
        <briefdescription>
<para>Check if format is stencil compatible. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>Format to check </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Format is stencil compatible or not </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/format.hpp" line="30" column="6" declfile="liblava/resource/format.hpp" declline="30" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="format_8hpp_1ae30231d1f0c571506e4102d5673761d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lava::format_depth_stencil</definition>
        <argsstring>(VkFormat format)</argsstring>
        <name>format_depth_stencil</name>
        <qualifiedname>lava::format_depth_stencil</qualifiedname>
        <param>
          <type>VkFormat</type>
          <declname>format</declname>
        </param>
        <briefdescription>
<para>Check if format is depth or stencil compatible. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>Format to check </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Format is depth or stencil compatible or not </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/format.hpp" line="37" column="6" declfile="liblava/resource/format.hpp" declline="37" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="format_8hpp_1a9234ef73c88aa800da25d11f328de77b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lava::format_srgb</definition>
        <argsstring>(VkFormat format)</argsstring>
        <name>format_srgb</name>
        <qualifiedname>lava::format_srgb</qualifiedname>
        <param>
          <type>VkFormat</type>
          <declname>format</declname>
        </param>
        <briefdescription>
<para>Check if format is sRGB compatible. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>Format to check </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Format is sRGB compatible or not </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/format.hpp" line="44" column="6" declfile="liblava/resource/format.hpp" declline="44" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="format_8hpp_1a31a809859399cd7de8a35ca3ff65ddc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lava::format_bgr</definition>
        <argsstring>(VkFormat format)</argsstring>
        <name>format_bgr</name>
        <qualifiedname>lava::format_bgr</qualifiedname>
        <param>
          <type>VkFormat</type>
          <declname>format</declname>
        </param>
        <briefdescription>
<para>Check if format has BGR order. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>Format to check </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Format has BGR order or not </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/format.hpp" line="51" column="6" declfile="liblava/resource/format.hpp" declline="51" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="format_8hpp_1a949fe016a3e6201b2dfcfa7d01947999" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VkImageAspectFlags</type>
        <definition>VkImageAspectFlags lava::format_aspect_mask</definition>
        <argsstring>(VkFormat format)</argsstring>
        <name>format_aspect_mask</name>
        <qualifiedname>lava::format_aspect_mask</qualifiedname>
        <param>
          <type>VkFormat</type>
          <declname>format</declname>
        </param>
        <briefdescription>
<para>Get image aspect mask of format. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>Target format </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>VkImageAspectFlags Image aspect flags </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/format.hpp" line="58" column="20" declfile="liblava/resource/format.hpp" declline="58" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="format_8hpp_1aa2d890c441457bf2005ed9112fb537d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lava::format_block_dim</definition>
        <argsstring>(VkFormat format, ui32 &amp;width, ui32 &amp;height)</argsstring>
        <name>format_block_dim</name>
        <qualifiedname>lava::format_block_dim</qualifiedname>
        <param>
          <type>VkFormat</type>
          <declname>format</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1ae3c4bbc50dd4583ab0df2c24c49a49c9" kindref="member">ui32</ref> &amp;</type>
          <declname>width</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1ae3c4bbc50dd4583ab0df2c24c49a49c9" kindref="member">ui32</ref> &amp;</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Get block dimension of format. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>Target format </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>Block width </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>Block height </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/format.hpp" line="66" column="6" declfile="liblava/resource/format.hpp" declline="66" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="format_8hpp_1af714d7b98f2be790335ccb3333095c9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lava::format_align_dim</definition>
        <argsstring>(VkFormat format, ui32 &amp;width, ui32 &amp;height)</argsstring>
        <name>format_align_dim</name>
        <qualifiedname>lava::format_align_dim</qualifiedname>
        <param>
          <type>VkFormat</type>
          <declname>format</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1ae3c4bbc50dd4583ab0df2c24c49a49c9" kindref="member">ui32</ref> &amp;</type>
          <declname>width</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1ae3c4bbc50dd4583ab0df2c24c49a49c9" kindref="member">ui32</ref> &amp;</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Get align dimension of format. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>Target format </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>Align width </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>Align height </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/format.hpp" line="76" column="6" declfile="liblava/resource/format.hpp" declline="76" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="format_8hpp_1ab89533f6381ab10db6c87200eef9422d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lava::format_num_blocks</definition>
        <argsstring>(VkFormat format, ui32 &amp;width, ui32 &amp;height)</argsstring>
        <name>format_num_blocks</name>
        <qualifiedname>lava::format_num_blocks</qualifiedname>
        <param>
          <type>VkFormat</type>
          <declname>format</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1ae3c4bbc50dd4583ab0df2c24c49a49c9" kindref="member">ui32</ref> &amp;</type>
          <declname>width</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1ae3c4bbc50dd4583ab0df2c24c49a49c9" kindref="member">ui32</ref> &amp;</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Get format number of blocks. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>Target format </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>Number blocks width </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>Number blocks height </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/format.hpp" line="86" column="6" declfile="liblava/resource/format.hpp" declline="86" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="format_8hpp_1a856acae74ef90030e43d5fd5b8395c9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="types_8hpp_1ae3c4bbc50dd4583ab0df2c24c49a49c9" kindref="member">ui32</ref></type>
        <definition>ui32 lava::format_block_size</definition>
        <argsstring>(VkFormat format, VkImageAspectFlags aspect)</argsstring>
        <name>format_block_size</name>
        <qualifiedname>lava::format_block_size</qualifiedname>
        <param>
          <type>VkFormat</type>
          <declname>format</declname>
        </param>
        <param>
          <type>VkImageAspectFlags</type>
          <declname>aspect</declname>
        </param>
        <briefdescription>
<para>Get format block size. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>Target format </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aspect</parametername>
</parameternamelist>
<parameterdescription>
<para>Target aspect </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ui32 Size of block </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/format.hpp" line="96" column="6" declfile="liblava/resource/format.hpp" declline="96" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="format_8hpp_1a0488b9c5fb9795264012185298ea9b8b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8hpp_1ae3c4bbc50dd4583ab0df2c24c49a49c9" kindref="member">ui32</ref></type>
        <definition>ui32 lava::format_block_size</definition>
        <argsstring>(VkFormat format)</argsstring>
        <name>format_block_size</name>
        <qualifiedname>lava::format_block_size</qualifiedname>
        <param>
          <type>VkFormat</type>
          <declname>format</declname>
        </param>
        <briefdescription>
<para>Get format block size (with respective aspect mask) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>Target format </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ui32 Size of block </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/format.hpp" line="104" column="13" bodyfile="liblava/resource/format.hpp" bodystart="104" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="format_8hpp_1a5e13c55c419eba78e91aceb28520bafd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="format_8hpp_1ad8e0e7d7b4c7550a9827f681c248e63b" kindref="member">VkFormat_optional</ref></type>
        <definition>VkFormat_optional lava::find_supported_depth_format</definition>
        <argsstring>(VkPhysicalDevice physical_device)</argsstring>
        <name>find_supported_depth_format</name>
        <qualifiedname>lava::find_supported_depth_format</qualifiedname>
        <param>
          <type>VkPhysicalDevice</type>
          <declname>physical_device</declname>
        </param>
        <briefdescription>
<para>Find the supported depth format. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername><ref refid="structlava_1_1physical__device" kindref="compound">physical_device</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Physical device </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>VkFormat_optional Optional format </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/format.hpp" line="113" column="19" declfile="liblava/resource/format.hpp" declline="113" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="format_8hpp_1a034d348c43f62ff663eb28e18bdfe52a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="format_8hpp_1ad8e0e7d7b4c7550a9827f681c248e63b" kindref="member">VkFormat_optional</ref></type>
        <definition>VkFormat_optional lava::find_supported_format</definition>
        <argsstring>(VkPhysicalDevice physical_device, VkFormats const &amp;possible_formats, VkImageUsageFlags usage)</argsstring>
        <name>find_supported_format</name>
        <qualifiedname>lava::find_supported_format</qualifiedname>
        <param>
          <type>VkPhysicalDevice</type>
          <declname>physical_device</declname>
        </param>
        <param>
          <type><ref refid="base_2base_8hpp_1a12338e204d106f4602b9bf70a1573f8b" kindref="member">VkFormats</ref> const &amp;</type>
          <declname>possible_formats</declname>
        </param>
        <param>
          <type>VkImageUsageFlags</type>
          <declname>usage</declname>
        </param>
        <briefdescription>
<para>Find the supported format. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername><ref refid="structlava_1_1physical__device" kindref="compound">physical_device</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Physical device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>possible_formats</parametername>
</parameternamelist>
<parameterdescription>
<para>List of possible formats </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>usage</parametername>
</parameternamelist>
<parameterdescription>
<para>Image usage flags </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>VkFormat_optional Optional format </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/format.hpp" line="122" column="19" declfile="liblava/resource/format.hpp" declline="122" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="format_8hpp_1acc1dae293ccc165303879bf130eebefb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VkImageMemoryBarrier</type>
        <definition>VkImageMemoryBarrier lava::image_memory_barrier</definition>
        <argsstring>(VkImage image, VkImageLayout old_layout, VkImageLayout new_layout)</argsstring>
        <name>image_memory_barrier</name>
        <qualifiedname>lava::image_memory_barrier</qualifiedname>
        <param>
          <type>VkImage</type>
          <declname>image</declname>
        </param>
        <param>
          <type>VkImageLayout</type>
          <declname>old_layout</declname>
        </param>
        <param>
          <type>VkImageLayout</type>
          <declname>new_layout</declname>
        </param>
        <briefdescription>
<para>Get image memory barrier. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>image</parametername>
</parameternamelist>
<parameterdescription>
<para>Target image </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>old_layout</parametername>
</parameternamelist>
<parameterdescription>
<para>Old image layout </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>new_layout</parametername>
</parameternamelist>
<parameterdescription>
<para>New image layout </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>VkImageMemoryBarrier Image memory barrier </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/format.hpp" line="133" column="22" declfile="liblava/resource/format.hpp" declline="133" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="format_8hpp_1a4bd39899b8c974719b915f1c426b4b35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_image_layout</definition>
        <argsstring>(device::ptr device, VkCommandBuffer cmd_buffer, VkImage image, VkImageLayout old_image_layout, VkImageLayout new_image_layout, VkImageSubresourceRange subresource_range, VkPipelineStageFlags src_stage_mask=VK_PIPELINE_STAGE_ALL_COMMANDS_BIT, VkPipelineStageFlags dst_stage_mask=VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)</argsstring>
        <name>set_image_layout</name>
        <qualifiedname>lava::set_image_layout</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1device_1a6f7d378ef30e7bf1cd4fe208de859250" kindref="member">device::ptr</ref></type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkCommandBuffer</type>
          <declname>cmd_buffer</declname>
        </param>
        <param>
          <type>VkImage</type>
          <declname>image</declname>
        </param>
        <param>
          <type>VkImageLayout</type>
          <declname>old_image_layout</declname>
        </param>
        <param>
          <type>VkImageLayout</type>
          <declname>new_image_layout</declname>
        </param>
        <param>
          <type>VkImageSubresourceRange</type>
          <declname>subresource_range</declname>
        </param>
        <param>
          <type>VkPipelineStageFlags</type>
          <declname>src_stage_mask</declname>
          <defval>VK_PIPELINE_STAGE_ALL_COMMANDS_BIT</defval>
        </param>
        <param>
          <type>VkPipelineStageFlags</type>
          <declname>dst_stage_mask</declname>
          <defval>VK_PIPELINE_STAGE_ALL_COMMANDS_BIT</defval>
        </param>
        <briefdescription>
<para>Set the image layout. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>Vulkan device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cmd_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Command buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>image</parametername>
</parameternamelist>
<parameterdescription>
<para>Target image </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>old_image_layout</parametername>
</parameternamelist>
<parameterdescription>
<para>Old image layout </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>new_image_layout</parametername>
</parameternamelist>
<parameterdescription>
<para>New image layout </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>subresource_range</parametername>
</parameternamelist>
<parameterdescription>
<para>Image subresource range </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src_stage_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Source pipeline stage flags </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst_stage_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination pipeline stage flags </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/format.hpp" line="148" column="6" declfile="liblava/resource/format.hpp" declline="148" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="format_8hpp_1aecb48bf95ba3e25793262c7963ab4b80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lava::set_image_layout</definition>
        <argsstring>(device::ptr device, VkCommandBuffer cmd_buffer, VkImage image, VkImageAspectFlags aspect_mask, VkImageLayout old_image_layout, VkImageLayout new_image_layout, VkPipelineStageFlags src_stage_mask=VK_PIPELINE_STAGE_ALL_COMMANDS_BIT, VkPipelineStageFlags dst_stage_mask=VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)</argsstring>
        <name>set_image_layout</name>
        <qualifiedname>lava::set_image_layout</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1device_1a6f7d378ef30e7bf1cd4fe208de859250" kindref="member">device::ptr</ref></type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkCommandBuffer</type>
          <declname>cmd_buffer</declname>
        </param>
        <param>
          <type>VkImage</type>
          <declname>image</declname>
        </param>
        <param>
          <type>VkImageAspectFlags</type>
          <declname>aspect_mask</declname>
        </param>
        <param>
          <type>VkImageLayout</type>
          <declname>old_image_layout</declname>
        </param>
        <param>
          <type>VkImageLayout</type>
          <declname>new_image_layout</declname>
        </param>
        <param>
          <type>VkPipelineStageFlags</type>
          <declname>src_stage_mask</declname>
          <defval>VK_PIPELINE_STAGE_ALL_COMMANDS_BIT</defval>
        </param>
        <param>
          <type>VkPipelineStageFlags</type>
          <declname>dst_stage_mask</declname>
          <defval>VK_PIPELINE_STAGE_ALL_COMMANDS_BIT</defval>
        </param>
        <briefdescription>
<para>Set the image layout. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>Vulkan device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cmd_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Command buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>image</parametername>
</parameternamelist>
<parameterdescription>
<para>Target image </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aspect_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Image aspect flags </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>old_image_layout</parametername>
</parameternamelist>
<parameterdescription>
<para>Old image layout </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>new_image_layout</parametername>
</parameternamelist>
<parameterdescription>
<para>New image layout </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src_stage_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Source pipeline stage flags </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst_stage_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination pipeline stage flags </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/format.hpp" line="168" column="6" declfile="liblava/resource/format.hpp" declline="168" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="format_8hpp_1a399a24a46d69a60dd636b1254b38b2c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lava::insert_image_memory_barrier</definition>
        <argsstring>(device::ptr device, VkCommandBuffer cmd_buffer, VkImage image, VkAccessFlags src_access_mask, VkAccessFlags dst_access_mask, VkImageLayout old_image_layout, VkImageLayout new_image_layout, VkPipelineStageFlags src_stage_mask, VkPipelineStageFlags dst_stage_mask, VkImageSubresourceRange subresource_range)</argsstring>
        <name>insert_image_memory_barrier</name>
        <qualifiedname>lava::insert_image_memory_barrier</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1device_1a6f7d378ef30e7bf1cd4fe208de859250" kindref="member">device::ptr</ref></type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkCommandBuffer</type>
          <declname>cmd_buffer</declname>
        </param>
        <param>
          <type>VkImage</type>
          <declname>image</declname>
        </param>
        <param>
          <type>VkAccessFlags</type>
          <declname>src_access_mask</declname>
        </param>
        <param>
          <type>VkAccessFlags</type>
          <declname>dst_access_mask</declname>
        </param>
        <param>
          <type>VkImageLayout</type>
          <declname>old_image_layout</declname>
        </param>
        <param>
          <type>VkImageLayout</type>
          <declname>new_image_layout</declname>
        </param>
        <param>
          <type>VkPipelineStageFlags</type>
          <declname>src_stage_mask</declname>
        </param>
        <param>
          <type>VkPipelineStageFlags</type>
          <declname>dst_stage_mask</declname>
        </param>
        <param>
          <type>VkImageSubresourceRange</type>
          <declname>subresource_range</declname>
        </param>
        <briefdescription>
<para>Insert image memory barrier. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>Vulkan device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cmd_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Command buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>image</parametername>
</parameternamelist>
<parameterdescription>
<para>Target image </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src_access_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Source access mask </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst_access_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination access mask </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>old_image_layout</parametername>
</parameternamelist>
<parameterdescription>
<para>Old image layout </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>new_image_layout</parametername>
</parameternamelist>
<parameterdescription>
<para>New image layout </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src_stage_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Source pipeline stage flags </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst_stage_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination pipeline stage flags </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>subresource_range</parametername>
</parameternamelist>
<parameterdescription>
<para>Image subresource range </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/format.hpp" line="190" column="6" declfile="liblava/resource/format.hpp" declline="190" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="format_8hpp_1adfbee6e4d093b57c2dc961376b2e1aaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VkSurfaceFormatKHR</type>
        <definition>VkSurfaceFormatKHR lava::find_surface_format</definition>
        <argsstring>(VkPhysicalDevice device, VkSurfaceKHR surface, surface_format_request request={})</argsstring>
        <name>find_surface_format</name>
        <qualifiedname>lava::find_surface_format</qualifiedname>
        <param>
          <type>VkPhysicalDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkSurfaceKHR</type>
          <declname>surface</declname>
        </param>
        <param>
          <type><ref refid="structlava_1_1surface__format__request" kindref="compound">surface_format_request</ref></type>
          <declname>request</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>Find the surface format. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>Vulkan device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>surface</parametername>
</parameternamelist>
<parameterdescription>
<para>Vulkan surface </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>request</parametername>
</parameternamelist>
<parameterdescription>
<para>Surface format request </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>VkSurfaceFormatKHR Chosen surface format </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/format.hpp" line="228" column="20" declfile="liblava/resource/format.hpp" declline="228" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="format_8hpp_1ab3b5bbebb9ee932deb0371bce8f08f16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lava::support_blit</definition>
        <argsstring>(VkPhysicalDevice device, VkFormat format)</argsstring>
        <name>support_blit</name>
        <qualifiedname>lava::support_blit</qualifiedname>
        <param>
          <type>VkPhysicalDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkFormat</type>
          <declname>format</declname>
        </param>
        <briefdescription>
<para>Check if format supports bltting. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>Vulkan physical device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>Format to check </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Blitting is supported or not </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/format.hpp" line="238" column="6" declfile="liblava/resource/format.hpp" declline="238" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="format_8hpp_1a8cf3ce4ea20cbc3a7d1bc17399c239a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lava::support_vertex_buffer_format</definition>
        <argsstring>(VkPhysicalDevice device, VkFormat format)</argsstring>
        <name>support_vertex_buffer_format</name>
        <qualifiedname>lava::support_vertex_buffer_format</qualifiedname>
        <param>
          <type>VkPhysicalDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkFormat</type>
          <declname>format</declname>
        </param>
        <briefdescription>
<para>Check if vertex buffer format is supported. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>Vulkan physical device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>Format to check </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Format is supported or not </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/format.hpp" line="247" column="6" declfile="liblava/resource/format.hpp" declline="247" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="image_8hpp_1a29e7772ec45fe3ace0a7d7be184cf67f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structlava_1_1image_1a3268e2cf1bd3e74a86e42ddf8255c8bc" kindref="member">image::s_ptr</ref></type>
        <definition>image::s_ptr lava::create_image</definition>
        <argsstring>(device::ptr device, VkFormat format, uv2 size, VkImage vk_image=0)</argsstring>
        <name>create_image</name>
        <qualifiedname>lava::create_image</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1device_1a6f7d378ef30e7bf1cd4fe208de859250" kindref="member">device::ptr</ref></type>
          <declname>device</declname>
        </param>
        <param>
          <type>VkFormat</type>
          <declname>format</declname>
        </param>
        <param>
          <type><ref refid="math_8hpp_1ad63e913ea06491bbe4e45588b35587df" kindref="member">uv2</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type>VkImage</type>
          <declname>vk_image</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Create a new image. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>Vulkan device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>Image format </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Image size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vk_image</parametername>
</parameternamelist>
<parameterdescription>
<para>Vulkan image </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structlava_1_1image_1a3268e2cf1bd3e74a86e42ddf8255c8bc" kindref="member">image::s_ptr</ref> Shared pointer to image </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/image.hpp" line="312" column="14" declfile="liblava/resource/image.hpp" declline="312" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="image_8hpp_1a452ed8cdca15befcd7d903f435edb805" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structlava_1_1image_1a3268e2cf1bd3e74a86e42ddf8255c8bc" kindref="member">image::s_ptr</ref></type>
        <definition>image::s_ptr lava::grab_image</definition>
        <argsstring>(image::s_ptr source)</argsstring>
        <name>grab_image</name>
        <qualifiedname>lava::grab_image</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1image_1a3268e2cf1bd3e74a86e42ddf8255c8bc" kindref="member">image::s_ptr</ref></type>
          <declname>source</declname>
        </param>
        <briefdescription>
<para>Grab an image (with blit/copy) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>Source image </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structlava_1_1image_1a3268e2cf1bd3e74a86e42ddf8255c8bc" kindref="member">image::s_ptr</ref> Grabbed image </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/image.hpp" line="322" column="14" declfile="liblava/resource/image.hpp" declline="322" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="mesh_8hpp_1af8b68ead65c4b87bb71accae44b5e693" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
            <defval>vertex</defval>
          </param>
          <param>
            <type>bool</type>
            <declname>generate_colors</declname>
            <defname>generate_colors</defname>
            <defval>true</defval>
          </param>
          <param>
            <type>bool</type>
            <declname>generate_normals</declname>
            <defname>generate_normals</defname>
            <defval>true</defval>
          </param>
          <param>
            <type>bool</type>
            <declname>generate_uvs</declname>
            <defname>generate_uvs</defname>
            <defval>true</defval>
          </param>
          <param>
            <type>bool</type>
            <declname>has_colors</declname>
            <defname>has_colors</defname>
            <defval>true</defval>
          </param>
          <param>
            <type>bool</type>
            <declname>has_normals</declname>
            <defname>has_normals</defname>
            <defval>true</defval>
          </param>
          <param>
            <type>bool</type>
            <declname>has_uvs</declname>
            <defname>has_uvs</defname>
            <defval>true</defval>
          </param>
        </templateparamlist>
        <type><ref refid="structlava_1_1mesh__template__data" kindref="compound">mesh_template_data</ref>&lt; T &gt;</type>
        <definition>mesh_template_data&lt; T &gt; lava::create_mesh_data</definition>
        <argsstring>(mesh_type type)</argsstring>
        <name>create_mesh_data</name>
        <qualifiedname>lava::create_mesh_data</qualifiedname>
        <param>
          <type><ref refid="primitive_8hpp_1afa8a64b09dc1ec2d28ac5cb426fb79bf" kindref="member">mesh_type</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Create a new primitive mesh_data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of vertex struct </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>generate_colors</parametername>
</parameternamelist>
<parameterdescription>
<para>If color may be generated </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>generate_normals</parametername>
</parameternamelist>
<parameterdescription>
<para>If normals may be generated </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>generate_uvs</parametername>
</parameternamelist>
<parameterdescription>
<para>If UVs may be generated </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>has_colors</parametername>
</parameternamelist>
<parameterdescription>
<para>On MSVC, specifies if a <computeroutput>color</computeroutput> field exists </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>has_normals</parametername>
</parameternamelist>
<parameterdescription>
<para>On MSVC, specifies if a <computeroutput>normal</computeroutput> field exists </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>has_uvs</parametername>
</parameternamelist>
<parameterdescription>
<para>On MSVC, specifies if a <computeroutput>uv</computeroutput> field exists </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Mesh type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>mesh_template_data&lt;T&gt; Mesh data </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/mesh.hpp" line="467" column="20" bodyfile="liblava/resource/mesh.hpp" bodystart="467" bodyend="673" declfile="liblava/resource/mesh.hpp" declline="331" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="mesh_8hpp_1a25995a38215b3b15ea88b0da495cec74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
            <defval>vertex</defval>
          </param>
          <param>
            <type>bool</type>
            <declname>generate_colors</declname>
            <defname>generate_colors</defname>
            <defval>true</defval>
          </param>
          <param>
            <type>bool</type>
            <declname>generate_normals</declname>
            <defname>generate_normals</defname>
            <defval>true</defval>
          </param>
          <param>
            <type>bool</type>
            <declname>generate_uvs</declname>
            <defname>generate_uvs</defname>
            <defval>true</defval>
          </param>
          <param>
            <type>bool</type>
            <declname>has_colors</declname>
            <defname>has_colors</defname>
            <defval>true</defval>
          </param>
          <param>
            <type>bool</type>
            <declname>has_normals</declname>
            <defname>has_normals</defname>
            <defval>true</defval>
          </param>
          <param>
            <type>bool</type>
            <declname>has_uvs</declname>
            <defname>has_uvs</defname>
            <defval>true</defval>
          </param>
        </templateparamlist>
        <type>std::shared_ptr&lt; <ref refid="structlava_1_1mesh__template" kindref="compound">mesh_template</ref>&lt; T &gt; &gt;</type>
        <definition>std::shared_ptr&lt; mesh_template&lt; T &gt; &gt; lava::create_mesh</definition>
        <argsstring>(device::ptr &amp;device, mesh_type type)</argsstring>
        <name>create_mesh</name>
        <qualifiedname>lava::create_mesh</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1device_1a6f7d378ef30e7bf1cd4fe208de859250" kindref="member">device::ptr</ref> &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type><ref refid="primitive_8hpp_1afa8a64b09dc1ec2d28ac5cb426fb79bf" kindref="member">mesh_type</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Create a new primitive mesh. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of vertex struct </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>generate_colors</parametername>
</parameternamelist>
<parameterdescription>
<para>If color may be generated </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>generate_normals</parametername>
</parameternamelist>
<parameterdescription>
<para>If normals may be generated </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>generate_uvs</parametername>
</parameternamelist>
<parameterdescription>
<para>If UVs may be generated </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>has_colors</parametername>
</parameternamelist>
<parameterdescription>
<para>On MSVC, specifies if a <computeroutput>color</computeroutput> field exists </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>has_normals</parametername>
</parameternamelist>
<parameterdescription>
<para>On MSVC, specifies if a <computeroutput>normal</computeroutput> field exists </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>has_uvs</parametername>
</parameternamelist>
<parameterdescription>
<para>On MSVC, specifies if a <computeroutput>uv</computeroutput> field exists </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>Vulkan device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Mesh type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::shared_ptr&lt;mesh_template&lt;T&gt;&gt; Shared pointer to mesh </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/mesh.hpp" line="443" column="17" bodyfile="liblava/resource/mesh.hpp" bodystart="443" bodyend="457" declfile="liblava/resource/mesh.hpp" declline="353" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="mesh_8hpp_1a312d360329d073e59e7ce7a7fd9a663b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PosType</type>
          </param>
          <param>
            <type>size_t</type>
            <declname>vert_count</declname>
            <defname>vert_count</defname>
          </param>
          <param>
            <type>bool</type>
            <declname>is_complex</declname>
            <defname>is_complex</defname>
          </param>
        </templateparamlist>
        <type>std::array&lt; PosType, vert_count &gt;</type>
        <definition>std::array&lt; PosType, vert_count &gt; lava::make_primitive_positions_cube</definition>
        <argsstring>()</argsstring>
        <name>make_primitive_positions_cube</name>
        <qualifiedname>lava::make_primitive_positions_cube</qualifiedname>
        <briefdescription>
<para>Make primitive positions for cube. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PosType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of position </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vert_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of vertices </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_complex</parametername>
</parameternamelist>
<parameterdescription>
<para>Complex state </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>constexpr std::array&lt;PosType, vert_count&gt; Array of positions </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/mesh.hpp" line="679" column="22" bodyfile="liblava/resource/mesh.hpp" bodystart="679" bodyend="711" declfile="liblava/resource/mesh.hpp" declline="404" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="mesh_8hpp_1ae50e966abbcab53539b2b30ec1cc1238" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>is_complex</declname>
            <defname>is_complex</defname>
          </param>
        </templateparamlist>
        <type>std::vector&lt; <ref refid="types_8hpp_1a2a40eb7fccb1ebcfd58d6d4b7a078e5c" kindref="member">index</ref> &gt;</type>
        <definition>std::vector&lt; index &gt; lava::make_primitive_indices_cube</definition>
        <argsstring>()</argsstring>
        <name>make_primitive_indices_cube</name>
        <qualifiedname>lava::make_primitive_indices_cube</qualifiedname>
        <briefdescription>
<para>Make primitive indices for cube. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>is_complex</parametername>
</parameternamelist>
<parameterdescription>
<para>Complex state </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::vector&lt;index&gt; Array for indices </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/mesh.hpp" line="715" column="13" bodyfile="liblava/resource/mesh.hpp" bodystart="715" bodyend="758" declfile="liblava/resource/mesh.hpp" declline="417" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="mesh_8hpp_1af87a63e28c639e3fcce909291d92117f" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename NormType</type>
          </param>
        </templateparamlist>
        <type>std::array&lt; NormType, 6 &gt;</type>
        <definition>std::array&lt; NormType, 6 &gt; lava::make_primitive_normals_cube</definition>
        <argsstring>()</argsstring>
        <name>make_primitive_normals_cube</name>
        <qualifiedname>lava::make_primitive_normals_cube</qualifiedname>
        <briefdescription>
<para>Make primitive normals for cube. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>NormType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of normal </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>constexpr std::array&lt;NormType, 6&gt; Array of normals </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/mesh.hpp" line="762" column="22" bodyfile="liblava/resource/mesh.hpp" bodystart="762" bodyend="770" declfile="liblava/resource/mesh.hpp" declline="425" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="mesh_8hpp_1a30ccf5eed07b27155682ddd4597e4a92" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename UVType</type>
          </param>
        </templateparamlist>
        <type>std::array&lt; UVType, 24 &gt;</type>
        <definition>std::array&lt; UVType, 24 &gt; lava::make_primitive_uvs_cube</definition>
        <argsstring>()</argsstring>
        <name>make_primitive_uvs_cube</name>
        <qualifiedname>lava::make_primitive_uvs_cube</qualifiedname>
        <briefdescription>
<para>Make primitive uvs for cube. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>UVType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of uv </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>constexpr std::array&lt;UVType, 24&gt; Array of uvs </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/resource/mesh.hpp" line="774" column="22" bodyfile="liblava/resource/mesh.hpp" bodystart="774" bodyend="786" declfile="liblava/resource/mesh.hpp" declline="433" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="hex_8hpp_1a7ca014ec5e5a02dda82dc24ba4eda276" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8hpp_1a7e5d7f16aff5126a54243302372b43b1" kindref="member">i32</ref></type>
        <definition>i32 lava::hex_get_s</definition>
        <argsstring>(i32 q, i32 r)</argsstring>
        <name>hex_get_s</name>
        <qualifiedname>lava::hex_get_s</qualifiedname>
        <param>
          <type><ref refid="types_8hpp_1a7e5d7f16aff5126a54243302372b43b1" kindref="member">i32</ref></type>
          <declname>q</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a7e5d7f16aff5126a54243302372b43b1" kindref="member">i32</ref></type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Get S axis from Q and R axes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>q</parametername>
</parameternamelist>
<parameterdescription>
<para>Q axis </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>R axis </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>i32 S axis </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/hex.hpp" line="118" column="12" bodyfile="liblava/util/hex.hpp" bodystart="118" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="hex_8hpp_1ad5e454169eed0c6193064321c2f290ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlava_1_1hex__cell" kindref="compound">hex_cell</ref></type>
        <definition>hex_cell lava::hex_cell_from_pair</definition>
        <argsstring>(hex_cell::pair const &amp;pair)</argsstring>
        <name>hex_cell_from_pair</name>
        <qualifiedname>lava::hex_cell_from_pair</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1hex__cell_1a7fb0840d44620bd022088ecb3e658c44" kindref="member">hex_cell::pair</ref> const &amp;</type>
          <declname>pair</declname>
        </param>
        <briefdescription>
<para>Get hex cell from pair. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pair</parametername>
</parameternamelist>
<parameterdescription>
<para>Hex pair </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structlava_1_1hex__cell" kindref="compound">hex_cell</ref> Hex cell </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/hex.hpp" line="127" column="17" bodyfile="liblava/util/hex.hpp" bodystart="127" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="hex_8hpp_1a9182ebdc614f1415b3482ec84f809ca5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool lava::hex_is_valid</definition>
        <argsstring>(hex_cell const &amp;cell)</argsstring>
        <name>hex_is_valid</name>
        <qualifiedname>lava::hex_is_valid</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1hex__cell" kindref="compound">hex_cell</ref> const &amp;</type>
          <declname>cell</declname>
        </param>
        <briefdescription>
<para>Check if hex cell is valid. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cell</parametername>
</parameternamelist>
<parameterdescription>
<para>Hex cell to check </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Hex cell is valid or not </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/hex.hpp" line="154" column="13" bodyfile="liblava/util/hex.hpp" bodystart="154" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="hex_8hpp_1a8a16da974409e2757c6f17d3c6a04145" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlava_1_1hex__cell" kindref="compound">hex_cell</ref></type>
        <definition>hex_cell lava::hex_direction</definition>
        <argsstring>(index direction)</argsstring>
        <name>hex_direction</name>
        <qualifiedname>lava::hex_direction</qualifiedname>
        <param>
          <type><ref refid="types_8hpp_1a2a40eb7fccb1ebcfd58d6d4b7a078e5c" kindref="member">index</ref></type>
          <declname>direction</declname>
        </param>
        <briefdescription>
<para>Get the hex cell from direction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>direction</parametername>
</parameternamelist>
<parameterdescription>
<para>Direction index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structlava_1_1hex__cell" kindref="compound">hex_cell</ref> Hex cell </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/hex.hpp" line="232" column="17" bodyfile="liblava/util/hex.hpp" bodystart="232" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="hex_8hpp_1a898ffd15cb1a51808d3c2d78f5025ec6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlava_1_1hex__cell" kindref="compound">hex_cell</ref></type>
        <definition>hex_cell lava::hex_neighbor</definition>
        <argsstring>(hex_cell const &amp;cell, index direction)</argsstring>
        <name>hex_neighbor</name>
        <qualifiedname>lava::hex_neighbor</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1hex__cell" kindref="compound">hex_cell</ref> const &amp;</type>
          <declname>cell</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a2a40eb7fccb1ebcfd58d6d4b7a078e5c" kindref="member">index</ref></type>
          <declname>direction</declname>
        </param>
        <briefdescription>
<para>Get the neighbor of hex cell by direction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cell</parametername>
</parameternamelist>
<parameterdescription>
<para>Target hex cell </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>direction</parametername>
</parameternamelist>
<parameterdescription>
<para>Direction index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structlava_1_1hex__cell" kindref="compound">hex_cell</ref> Neighbor hex cell </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/hex.hpp" line="242" column="17" bodyfile="liblava/util/hex.hpp" bodystart="242" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="hex_8hpp_1adfb53fa51a50b93e353e5101d9a03e3e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlava_1_1hex__cell" kindref="compound">hex_cell</ref></type>
        <definition>hex_cell lava::hex_diagonal</definition>
        <argsstring>(index direction)</argsstring>
        <name>hex_diagonal</name>
        <qualifiedname>lava::hex_diagonal</qualifiedname>
        <param>
          <type><ref refid="types_8hpp_1a2a40eb7fccb1ebcfd58d6d4b7a078e5c" kindref="member">index</ref></type>
          <declname>direction</declname>
        </param>
        <briefdescription>
<para>Get the diagonal from direction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>direction</parametername>
</parameternamelist>
<parameterdescription>
<para>Direction index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structlava_1_1hex__cell" kindref="compound">hex_cell</ref> Hex cell </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/hex.hpp" line="263" column="17" bodyfile="liblava/util/hex.hpp" bodystart="263" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="hex_8hpp_1ad5acac030efb7626bb99fb663324da8a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlava_1_1hex__cell" kindref="compound">hex_cell</ref></type>
        <definition>hex_cell lava::hex_diagonal_neighbor</definition>
        <argsstring>(hex_cell const &amp;cell, index direction)</argsstring>
        <name>hex_diagonal_neighbor</name>
        <qualifiedname>lava::hex_diagonal_neighbor</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1hex__cell" kindref="compound">hex_cell</ref> const &amp;</type>
          <declname>cell</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a2a40eb7fccb1ebcfd58d6d4b7a078e5c" kindref="member">index</ref></type>
          <declname>direction</declname>
        </param>
        <briefdescription>
<para>Get the diagonal neighbor of hex cell by direction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cell</parametername>
</parameternamelist>
<parameterdescription>
<para>Target hex cell </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>direction</parametername>
</parameternamelist>
<parameterdescription>
<para>Direction index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structlava_1_1hex__cell" kindref="compound">hex_cell</ref> Diagonal neighbor hex cell </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/hex.hpp" line="273" column="17" bodyfile="liblava/util/hex.hpp" bodystart="273" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="hex_8hpp_1aacff1394173374911b79331d353ef449" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8hpp_1a7e5d7f16aff5126a54243302372b43b1" kindref="member">i32</ref></type>
        <definition>i32 lava::hex_length</definition>
        <argsstring>(hex_cell const &amp;cell)</argsstring>
        <name>hex_length</name>
        <qualifiedname>lava::hex_length</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1hex__cell" kindref="compound">hex_cell</ref> const &amp;</type>
          <declname>cell</declname>
        </param>
        <briefdescription>
<para>Get the length of hex cell. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cell</parametername>
</parameternamelist>
<parameterdescription>
<para>Target hex cell </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>i32 Length of hex cell </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/hex.hpp" line="285" column="12" bodyfile="liblava/util/hex.hpp" bodystart="285" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="hex_8hpp_1a5c5b747307cac342033640acf1b22b37" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8hpp_1a7e5d7f16aff5126a54243302372b43b1" kindref="member">i32</ref></type>
        <definition>i32 lava::hex_distance</definition>
        <argsstring>(hex_cell const &amp;a, hex_cell const &amp;b)</argsstring>
        <name>hex_distance</name>
        <qualifiedname>lava::hex_distance</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1hex__cell" kindref="compound">hex_cell</ref> const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structlava_1_1hex__cell" kindref="compound">hex_cell</ref> const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Get the distance between 2 hex cells. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>Source hex cell </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>Target hex cell </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>i32 Distance </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/hex.hpp" line="297" column="12" bodyfile="liblava/util/hex.hpp" bodystart="297" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="hex_8hpp_1ae4c5b0472d2d467bc97987ec0c8308f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlava_1_1hex__cell" kindref="compound">hex_cell</ref></type>
        <definition>hex_cell lava::hex_round</definition>
        <argsstring>(hex_frac_cell const &amp;cell)</argsstring>
        <name>hex_round</name>
        <qualifiedname>lava::hex_round</qualifiedname>
        <param>
          <type><ref refid="hex_8hpp_1a32178b9e3e4755c33909cdd40922fe4a" kindref="member">hex_frac_cell</ref> const &amp;</type>
          <declname>cell</declname>
        </param>
        <briefdescription>
<para>Round a fractional cell to hex cell. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cell</parametername>
</parameternamelist>
<parameterdescription>
<para>Target fractional cell </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structlava_1_1hex__cell" kindref="compound">hex_cell</ref> Rounded hex cell </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/hex.hpp" line="309" column="17" bodyfile="liblava/util/hex.hpp" bodystart="309" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="hex_8hpp_1a79131e23aba708d19fb30fe1f6fa77a5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="hex_8hpp_1a32178b9e3e4755c33909cdd40922fe4a" kindref="member">hex_frac_cell</ref></type>
        <definition>hex_frac_cell lava::hex_lerp</definition>
        <argsstring>(hex_frac_cell const &amp;a, hex_frac_cell const &amp;b, r32 t)</argsstring>
        <name>hex_lerp</name>
        <qualifiedname>lava::hex_lerp</qualifiedname>
        <param>
          <type><ref refid="hex_8hpp_1a32178b9e3e4755c33909cdd40922fe4a" kindref="member">hex_frac_cell</ref> const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="hex_8hpp_1a32178b9e3e4755c33909cdd40922fe4a" kindref="member">hex_frac_cell</ref> const &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a3a32680a459890aa9c80b4f5533b3b1f" kindref="member">r32</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Get the linear interpolation between 2 hex cells. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>Source fractional hex cell </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>Target fractional hex cell </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>Factor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>hex_frac_cell Fractional hex cell </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/hex.hpp" line="335" column="22" bodyfile="liblava/util/hex.hpp" bodystart="335" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="hex_8hpp_1a01c50ea26d302c05a4eede033863ca9b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlava_1_1hex__cell_1a7086bca7e865d99d7bccaf11a5bfde7d" kindref="member">hex_cell::list</ref></type>
        <definition>hex_cell::list lava::hex_line</definition>
        <argsstring>(hex_cell const &amp;a, hex_cell const &amp;b)</argsstring>
        <name>hex_line</name>
        <qualifiedname>lava::hex_line</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1hex__cell" kindref="compound">hex_cell</ref> const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structlava_1_1hex__cell" kindref="compound">hex_cell</ref> const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Get the line between 2 hex cells. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>Source hex cell </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>Target hex cell </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structlava_1_1hex__cell_1a7086bca7e865d99d7bccaf11a5bfde7d" kindref="member">hex_cell::list</ref> List of hex cells </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/hex.hpp" line="350" column="23" bodyfile="liblava/util/hex.hpp" bodystart="350" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="hex_8hpp_1aa509932a3cb8382abc5086b699f55d99" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlava_1_1hex__offset__coord" kindref="compound">hex_offset_coord</ref></type>
        <definition>hex_offset_coord lava::hex_q_offset_from_cube</definition>
        <argsstring>(hex_offset offset, hex_cell const &amp;cell)</argsstring>
        <name>hex_q_offset_from_cube</name>
        <qualifiedname>lava::hex_q_offset_from_cube</qualifiedname>
        <param>
          <type><ref refid="hex_8hpp_1ab4521519620230034db22e97e95d42b3" kindref="member">hex_offset</ref></type>
          <declname>offset</declname>
        </param>
        <param>
          <type><ref refid="structlava_1_1hex__cell" kindref="compound">hex_cell</ref> const &amp;</type>
          <declname>cell</declname>
        </param>
        <briefdescription>
<para>Get the Q offset from hex cube. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Hex offset </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cell</parametername>
</parameternamelist>
<parameterdescription>
<para>Hex cell </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structlava_1_1hex__offset__coord" kindref="compound">hex_offset_coord</ref> Hex offset coordinates </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/hex.hpp" line="385" column="25" bodyfile="liblava/util/hex.hpp" bodystart="385" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="hex_8hpp_1a3e916b0ac0ab4fe8198c90554e6c388b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlava_1_1hex__cell" kindref="compound">hex_cell</ref></type>
        <definition>hex_cell lava::hex_q_offset_to_cube</definition>
        <argsstring>(hex_offset offset, hex_offset_coord const &amp;coord)</argsstring>
        <name>hex_q_offset_to_cube</name>
        <qualifiedname>lava::hex_q_offset_to_cube</qualifiedname>
        <param>
          <type><ref refid="hex_8hpp_1ab4521519620230034db22e97e95d42b3" kindref="member">hex_offset</ref></type>
          <declname>offset</declname>
        </param>
        <param>
          <type><ref refid="structlava_1_1hex__offset__coord" kindref="compound">hex_offset_coord</ref> const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
<para>Get the Q offset to hex cube. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Hex offset </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Hex offset coordinates </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structlava_1_1hex__cell" kindref="compound">hex_cell</ref> Hex cell </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/hex.hpp" line="399" column="17" bodyfile="liblava/util/hex.hpp" bodystart="399" bodyend="406"/>
      </memberdef>
      <memberdef kind="function" id="hex_8hpp_1a140bd9814b6cef5a138c7001866fcf78" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlava_1_1hex__offset__coord" kindref="compound">hex_offset_coord</ref></type>
        <definition>hex_offset_coord lava::hex_r_offset_from_cube</definition>
        <argsstring>(hex_offset offset, hex_cell const &amp;cell)</argsstring>
        <name>hex_r_offset_from_cube</name>
        <qualifiedname>lava::hex_r_offset_from_cube</qualifiedname>
        <param>
          <type><ref refid="hex_8hpp_1ab4521519620230034db22e97e95d42b3" kindref="member">hex_offset</ref></type>
          <declname>offset</declname>
        </param>
        <param>
          <type><ref refid="structlava_1_1hex__cell" kindref="compound">hex_cell</ref> const &amp;</type>
          <declname>cell</declname>
        </param>
        <briefdescription>
<para>Get the R offset from hex cube. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Hex offset </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cell</parametername>
</parameternamelist>
<parameterdescription>
<para>Hex cell </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structlava_1_1hex__offset__coord" kindref="compound">hex_offset_coord</ref> Hex offset coordinates </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/hex.hpp" line="414" column="25" bodyfile="liblava/util/hex.hpp" bodystart="414" bodyend="420"/>
      </memberdef>
      <memberdef kind="function" id="hex_8hpp_1a03b854cf6039784e37ae5f5a5d2a9aff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlava_1_1hex__cell" kindref="compound">hex_cell</ref></type>
        <definition>hex_cell lava::hex_r_offset_to_cube</definition>
        <argsstring>(hex_offset offset, hex_offset_coord const &amp;coord)</argsstring>
        <name>hex_r_offset_to_cube</name>
        <qualifiedname>lava::hex_r_offset_to_cube</qualifiedname>
        <param>
          <type><ref refid="hex_8hpp_1ab4521519620230034db22e97e95d42b3" kindref="member">hex_offset</ref></type>
          <declname>offset</declname>
        </param>
        <param>
          <type><ref refid="structlava_1_1hex__offset__coord" kindref="compound">hex_offset_coord</ref> const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
<para>Get the R offset to hex cube. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Hex offset </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Hex offset coordinates </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structlava_1_1hex__cell" kindref="compound">hex_cell</ref> Hex cell </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/hex.hpp" line="428" column="17" bodyfile="liblava/util/hex.hpp" bodystart="428" bodyend="435"/>
      </memberdef>
      <memberdef kind="function" id="hex_8hpp_1a5d65e4531828807f633a0a62525c22c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="hex_8hpp_1a84c9d74193a06be5b9c461dc1fef2ecb" kindref="member">hex_doubled_coord</ref></type>
        <definition>hex_doubled_coord lava::hex_q_doubled_from_cube</definition>
        <argsstring>(hex_cell const &amp;cell)</argsstring>
        <name>hex_q_doubled_from_cube</name>
        <qualifiedname>lava::hex_q_doubled_from_cube</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1hex__cell" kindref="compound">hex_cell</ref> const &amp;</type>
          <declname>cell</declname>
        </param>
        <briefdescription>
<para>Get the Q doubled from hex cube. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cell</parametername>
</parameternamelist>
<parameterdescription>
<para>Hex cell </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>hex_doubled_coord Hex doubled coordinates </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/hex.hpp" line="442" column="26" bodyfile="liblava/util/hex.hpp" bodystart="442" bodyend="446"/>
      </memberdef>
      <memberdef kind="function" id="hex_8hpp_1a4fee9dc0368a70ba9aac2d0b5640084b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlava_1_1hex__cell" kindref="compound">hex_cell</ref></type>
        <definition>hex_cell lava::hex_q_doubled_to_cube</definition>
        <argsstring>(hex_doubled_coord const &amp;coord)</argsstring>
        <name>hex_q_doubled_to_cube</name>
        <qualifiedname>lava::hex_q_doubled_to_cube</qualifiedname>
        <param>
          <type><ref refid="hex_8hpp_1a84c9d74193a06be5b9c461dc1fef2ecb" kindref="member">hex_doubled_coord</ref> const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
<para>Get the Q doubled to hex cube. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Hex doubled coordinates </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structlava_1_1hex__cell" kindref="compound">hex_cell</ref> Hex cell </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/hex.hpp" line="453" column="17" bodyfile="liblava/util/hex.hpp" bodystart="453" bodyend="458"/>
      </memberdef>
      <memberdef kind="function" id="hex_8hpp_1aa4a3c70aa527a679eae96f56273e0d59" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="hex_8hpp_1a84c9d74193a06be5b9c461dc1fef2ecb" kindref="member">hex_doubled_coord</ref></type>
        <definition>hex_doubled_coord lava::hex_r_doubled_from_cube</definition>
        <argsstring>(hex_cell const &amp;cell)</argsstring>
        <name>hex_r_doubled_from_cube</name>
        <qualifiedname>lava::hex_r_doubled_from_cube</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1hex__cell" kindref="compound">hex_cell</ref> const &amp;</type>
          <declname>cell</declname>
        </param>
        <briefdescription>
<para>Get the R offset from hex cube. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cell</parametername>
</parameternamelist>
<parameterdescription>
<para>Hex cell </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>hex_doubled_coord Hex doubled coordinates </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/hex.hpp" line="465" column="26" bodyfile="liblava/util/hex.hpp" bodystart="465" bodyend="469"/>
      </memberdef>
      <memberdef kind="function" id="hex_8hpp_1a94c56d07872b9ee1b320751f7ea36981" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlava_1_1hex__cell" kindref="compound">hex_cell</ref></type>
        <definition>hex_cell lava::hex_r_doubled_to_cube</definition>
        <argsstring>(hex_doubled_coord const &amp;coord)</argsstring>
        <name>hex_r_doubled_to_cube</name>
        <qualifiedname>lava::hex_r_doubled_to_cube</qualifiedname>
        <param>
          <type><ref refid="hex_8hpp_1a84c9d74193a06be5b9c461dc1fef2ecb" kindref="member">hex_doubled_coord</ref> const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
<para>Get the R doubled to hex cube. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Hex doubled coordinates </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structlava_1_1hex__cell" kindref="compound">hex_cell</ref> Hex cell </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/hex.hpp" line="476" column="17" bodyfile="liblava/util/hex.hpp" bodystart="476" bodyend="481"/>
      </memberdef>
      <memberdef kind="function" id="hex_8hpp_1a742ae7a0920b028dbd4100ab164769bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlava_1_1hex__point" kindref="compound">hex_point</ref></type>
        <definition>hex_point lava::hex_to_pixel</definition>
        <argsstring>(hex_layout const &amp;layout, hex_cell const &amp;cell)</argsstring>
        <name>hex_to_pixel</name>
        <qualifiedname>lava::hex_to_pixel</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1hex__layout" kindref="compound">hex_layout</ref> const &amp;</type>
          <declname>layout</declname>
        </param>
        <param>
          <type><ref refid="structlava_1_1hex__cell" kindref="compound">hex_cell</ref> const &amp;</type>
          <declname>cell</declname>
        </param>
        <briefdescription>
<para>Convert the hex cell to pixel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>layout</parametername>
</parameternamelist>
<parameterdescription>
<para>Hex layout </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cell</parametername>
</parameternamelist>
<parameterdescription>
<para>Hex cell </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structlava_1_1hex__point" kindref="compound">hex_point</ref> Hex point </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/hex.hpp" line="513" column="18" bodyfile="liblava/util/hex.hpp" bodystart="513" bodyend="521"/>
      </memberdef>
      <memberdef kind="function" id="hex_8hpp_1a904901a544a66a5b6226e373ab97da4c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="hex_8hpp_1a32178b9e3e4755c33909cdd40922fe4a" kindref="member">hex_frac_cell</ref></type>
        <definition>hex_frac_cell lava::hex_pixel_to_cell</definition>
        <argsstring>(hex_layout const &amp;layout, hex_point const &amp;p)</argsstring>
        <name>hex_pixel_to_cell</name>
        <qualifiedname>lava::hex_pixel_to_cell</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1hex__layout" kindref="compound">hex_layout</ref> const &amp;</type>
          <declname>layout</declname>
        </param>
        <param>
          <type><ref refid="structlava_1_1hex__point" kindref="compound">hex_point</ref> const &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Convert the hex point to cell. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>layout</parametername>
</parameternamelist>
<parameterdescription>
<para>Hex layout </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Hex point </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>hex_frac_cell Hex fractional cell </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/hex.hpp" line="529" column="22" bodyfile="liblava/util/hex.hpp" bodystart="529" bodyend="539"/>
      </memberdef>
      <memberdef kind="function" id="hex_8hpp_1a05b05a162ad716a49e8f5b7d36874bc3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlava_1_1hex__point" kindref="compound">hex_point</ref></type>
        <definition>hex_point lava::hex_corner_offset</definition>
        <argsstring>(hex_layout const &amp;layout, i32 corner)</argsstring>
        <name>hex_corner_offset</name>
        <qualifiedname>lava::hex_corner_offset</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1hex__layout" kindref="compound">hex_layout</ref> const &amp;</type>
          <declname>layout</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a7e5d7f16aff5126a54243302372b43b1" kindref="member">i32</ref></type>
          <declname>corner</declname>
        </param>
        <briefdescription>
<para>Get the hex corner offset. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>layout</parametername>
</parameternamelist>
<parameterdescription>
<para>Hex layout </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>corner</parametername>
</parameternamelist>
<parameterdescription>
<para>Corner </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structlava_1_1hex__point" kindref="compound">hex_point</ref> Hex point </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/hex.hpp" line="547" column="18" bodyfile="liblava/util/hex.hpp" bodystart="547" bodyend="556"/>
      </memberdef>
      <memberdef kind="function" id="hex_8hpp_1ac22679ea22e6cd067c6518fb6e3d5d54" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlava_1_1hex__point_1a139ad44afadb839dcf388aada3c9c453" kindref="member">hex_point::list</ref></type>
        <definition>hex_point::list lava::hex_polygon_corners</definition>
        <argsstring>(hex_layout const &amp;layout, hex_cell const &amp;cell)</argsstring>
        <name>hex_polygon_corners</name>
        <qualifiedname>lava::hex_polygon_corners</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1hex__layout" kindref="compound">hex_layout</ref> const &amp;</type>
          <declname>layout</declname>
        </param>
        <param>
          <type><ref refid="structlava_1_1hex__cell" kindref="compound">hex_cell</ref> const &amp;</type>
          <declname>cell</declname>
        </param>
        <briefdescription>
<para>Get the hex polygon corners. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>layout</parametername>
</parameternamelist>
<parameterdescription>
<para>Hex layout </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cell</parametername>
</parameternamelist>
<parameterdescription>
<para>Hex cell </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structlava_1_1hex__point_1a139ad44afadb839dcf388aada3c9c453" kindref="member">hex_point::list</ref> List of hex points </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/hex.hpp" line="564" column="24" bodyfile="liblava/util/hex.hpp" bodystart="564" bodyend="574"/>
      </memberdef>
      <memberdef kind="function" id="hex_8hpp_1a026a5d0c6b45925419404ac88ad8fb3a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlava_1_1hex__point" kindref="compound">hex_point</ref></type>
        <definition>hex_point lava::hex_get_corner</definition>
        <argsstring>(hex_point const &amp;center, r32 size, ui32 corner)</argsstring>
        <name>hex_get_corner</name>
        <qualifiedname>lava::hex_get_corner</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1hex__point" kindref="compound">hex_point</ref> const &amp;</type>
          <declname>center</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a3a32680a459890aa9c80b4f5533b3b1f" kindref="member">r32</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1ae3c4bbc50dd4583ab0df2c24c49a49c9" kindref="member">ui32</ref></type>
          <declname>corner</declname>
        </param>
        <briefdescription>
<para>Get the hex point by corner. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>center</parametername>
</parameternamelist>
<parameterdescription>
<para>Center hex point </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of hex cell </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>corner</parametername>
</parameternamelist>
<parameterdescription>
<para>Corner </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structlava_1_1hex__point" kindref="compound">hex_point</ref> Hex point </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/hex.hpp" line="583" column="18" bodyfile="liblava/util/hex.hpp" bodystart="583" bodyend="592"/>
      </memberdef>
      <memberdef kind="function" id="hex_8hpp_1ab5f02791afaefe97df2a144c6b741b50" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8hpp_1a56891e6c1c56efa24abd6b84f71d9145" kindref="member">string</ref></type>
        <definition>string lava::to_string</definition>
        <argsstring>(hex_cardinal_direction direction)</argsstring>
        <name>to_string</name>
        <qualifiedname>lava::to_string</qualifiedname>
        <param>
          <type><ref refid="hex_8hpp_1aa2a7be3655f90512c22f774dadf1a25c" kindref="member">hex_cardinal_direction</ref></type>
          <declname>direction</declname>
        </param>
        <briefdescription>
<para>Convert hex cardinal direction to string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>direction</parametername>
</parameternamelist>
<parameterdescription>
<para>Hex cardinal direction </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>string String representation </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/hex.hpp" line="611" column="15" bodyfile="liblava/util/hex.hpp" bodystart="611" bodyend="632"/>
      </memberdef>
      <memberdef kind="function" id="hex_8hpp_1adc50c7ed8b575685efb41a2b886fa29f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlava_1_1hex__cell" kindref="compound">hex_cell</ref></type>
        <definition>hex_cell lava::hex_get</definition>
        <argsstring>(hex_cardinal_direction direction)</argsstring>
        <name>hex_get</name>
        <qualifiedname>lava::hex_get</qualifiedname>
        <param>
          <type><ref refid="hex_8hpp_1aa2a7be3655f90512c22f774dadf1a25c" kindref="member">hex_cardinal_direction</ref></type>
          <declname>direction</declname>
        </param>
        <briefdescription>
<para>Get the hex cell from cardinal direction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>direction</parametername>
</parameternamelist>
<parameterdescription>
<para>Hex cardinal direction </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structlava_1_1hex__cell" kindref="compound">hex_cell</ref> Hex cell </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/hex.hpp" line="648" column="17" bodyfile="liblava/util/hex.hpp" bodystart="648" bodyend="650"/>
      </memberdef>
      <memberdef kind="function" id="hex_8hpp_1a0a89eb0e36e8f5b7633e1dd99a7408ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="hex_8hpp_1aa2a7be3655f90512c22f774dadf1a25c" kindref="member">hex_cardinal_direction</ref></type>
        <definition>hex_cardinal_direction lava::hex_opposite</definition>
        <argsstring>(hex_cardinal_direction direction)</argsstring>
        <name>hex_opposite</name>
        <qualifiedname>lava::hex_opposite</qualifiedname>
        <param>
          <type><ref refid="hex_8hpp_1aa2a7be3655f90512c22f774dadf1a25c" kindref="member">hex_cardinal_direction</ref></type>
          <declname>direction</declname>
        </param>
        <briefdescription>
<para>Get the opposite cardinal direction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>direction</parametername>
</parameternamelist>
<parameterdescription>
<para>Hex cardinal direction </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>hex_cardinal_direction Hex cardinal direction </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/hex.hpp" line="657" column="31" bodyfile="liblava/util/hex.hpp" bodystart="657" bodyend="662"/>
      </memberdef>
      <memberdef kind="function" id="hex_8hpp_1a9dff4b533bda410b478b9529e27fe289" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8hpp_1a3a32680a459890aa9c80b4f5533b3b1f" kindref="member">r32</ref></type>
        <definition>r32 lava::hex_calculate_inner_radius</definition>
        <argsstring>(r32 outer_radius)</argsstring>
        <name>hex_calculate_inner_radius</name>
        <qualifiedname>lava::hex_calculate_inner_radius</qualifiedname>
        <param>
          <type><ref refid="types_8hpp_1a3a32680a459890aa9c80b4f5533b3b1f" kindref="member">r32</ref></type>
          <declname>outer_radius</declname>
        </param>
        <briefdescription>
<para>Get the hex inner radius from outer radius. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>outer_radius</parametername>
</parameternamelist>
<parameterdescription>
<para>Hex outer radius </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>r32 Hex inner radius </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/hex.hpp" line="675" column="12" bodyfile="liblava/util/hex.hpp" bodystart="675" bodyend="677"/>
      </memberdef>
      <memberdef kind="function" id="log_8hpp_1a3ca352b083878c2d3ee5dd4f4f962aad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8hpp_1a56891e6c1c56efa24abd6b84f71d9145" kindref="member">string</ref></type>
        <definition>string lava::to_string</definition>
        <argsstring>(string_ref id, string_ref name)</argsstring>
        <name>to_string</name>
        <qualifiedname>lava::to_string</qualifiedname>
        <param>
          <type><ref refid="types_8hpp_1a01c2a7bfa24e7ea76ef5a79d8d4daaf6" kindref="member">string_ref</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a01c2a7bfa24e7ea76ef5a79d8d4daaf6" kindref="member">string_ref</ref></type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Convert id and name to string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>Id to convert </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name to convert </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>string String representation </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/log.hpp" line="27" column="15" bodyfile="liblava/util/log.hpp" bodystart="27" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="log_8hpp_1ac41fac4ee2ecb104b6926f9be25f8899" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8hpp_1a56891e6c1c56efa24abd6b84f71d9145" kindref="member">string</ref></type>
        <definition>string lava::to_string</definition>
        <argsstring>(sem_version const &amp;version)</argsstring>
        <name>to_string</name>
        <qualifiedname>lava::to_string</qualifiedname>
        <param>
          <type><ref refid="version_8hpp_1ad21c2311c0d3c020c4ee9a7179d3ea2a" kindref="member">sem_version</ref> const &amp;</type>
          <declname>version</declname>
        </param>
        <briefdescription>
<para>Convert semantic version to string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>version</parametername>
</parameternamelist>
<parameterdescription>
<para>Semantic version to convert </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>string String representation </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/log.hpp" line="36" column="15" bodyfile="liblava/util/log.hpp" bodystart="36" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="log_8hpp_1a1e63caa365cd3250553ab7454c81049b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8hpp_1a56891e6c1c56efa24abd6b84f71d9145" kindref="member">string</ref></type>
        <definition>string lava::semantic_version_string</definition>
        <argsstring>()</argsstring>
        <name>semantic_version_string</name>
        <qualifiedname>lava::semantic_version_string</qualifiedname>
        <briefdescription>
<para>Convert global semantic version to string. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>string String representation </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/log.hpp" line="47" column="15" bodyfile="liblava/util/log.hpp" bodystart="47" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="log_8hpp_1ad0b162fbb13cc0d41cdd3770dee314f0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8hpp_1a56891e6c1c56efa24abd6b84f71d9145" kindref="member">string</ref></type>
        <definition>string lava::sem_version_string</definition>
        <argsstring>()</argsstring>
        <name>sem_version_string</name>
        <qualifiedname>lava::sem_version_string</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="log_8hpp_1a1e63caa365cd3250553ab7454c81049b" kindref="member">semantic_version_string</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/log.hpp" line="54" column="15" bodyfile="liblava/util/log.hpp" bodystart="54" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="log_8hpp_1abf34deddbe7ec13bdbef030763c4d222" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8hpp_1a6ac8e87ce8d5b170084592abbef3b8c9" kindref="member">name</ref></type>
        <definition>name lava::to_string</definition>
        <argsstring>(version_stage stage)</argsstring>
        <name>to_string</name>
        <qualifiedname>lava::to_string</qualifiedname>
        <param>
          <type><ref refid="version_8hpp_1a592fe41d299f08f625229ef52f7fe331" kindref="member">version_stage</ref></type>
          <declname>stage</declname>
        </param>
        <briefdescription>
<para>Convert version stage to string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stage</parametername>
</parameternamelist>
<parameterdescription>
<para>Version stage to convert </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>name Name representation </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/log.hpp" line="63" column="13" bodyfile="liblava/util/log.hpp" bodystart="63" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="log_8hpp_1abefb8ca281e429dedfa8c43d9ae711c9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8hpp_1a56891e6c1c56efa24abd6b84f71d9145" kindref="member">string</ref></type>
        <definition>string lava::to_string</definition>
        <argsstring>(version const &amp;version)</argsstring>
        <name>to_string</name>
        <qualifiedname>lava::to_string</qualifiedname>
        <param>
          <type><ref refid="structlava_1_1version" kindref="compound">version</ref> const &amp;</type>
          <declname>version</declname>
        </param>
        <briefdescription>
<para>Convert version to string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>version</parametername>
</parameternamelist>
<parameterdescription>
<para>Version to convert </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>string String representation </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/log.hpp" line="83" column="15" bodyfile="liblava/util/log.hpp" bodystart="83" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="log_8hpp_1a24f4d3b66a3cd12bc3ff3a57228764d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8hpp_1a56891e6c1c56efa24abd6b84f71d9145" kindref="member">string</ref></type>
        <definition>string lava::version_string</definition>
        <argsstring>()</argsstring>
        <name>version_string</name>
        <qualifiedname>lava::version_string</qualifiedname>
        <briefdescription>
<para>Convert global version to string. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>string String representation </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/log.hpp" line="103" column="15" bodyfile="liblava/util/log.hpp" bodystart="103" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="log_8hpp_1a10ae1b412d16ce204d8bc594ae6a171f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="log_8hpp_1a7b6c44303d3171ad98904b82bed1e31c" kindref="member">s_logger</ref></type>
        <definition>s_logger lava::logger</definition>
        <argsstring>()</argsstring>
        <name>logger</name>
        <qualifiedname>lava::logger</qualifiedname>
        <briefdescription>
<para>Get global logger. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>s_logger Logger </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/log.hpp" line="202" column="17" bodyfile="liblava/util/log.hpp" bodystart="202" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="math_8hpp_1a29d6bb9c11a24947cd7e1ea649ed626b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto lava::ceil_div</definition>
        <argsstring>(auto x, auto y)</argsstring>
        <name>ceil_div</name>
        <qualifiedname>lava::ceil_div</qualifiedname>
        <param>
          <type>auto</type>
          <declname>x</declname>
        </param>
        <param>
          <type>auto</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Ceiling of division. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>X value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>Y value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>auto Result </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/math.hpp" line="164" column="13" bodyfile="liblava/util/math.hpp" bodystart="164" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="math_8hpp_1a3a95d0862fb9fdf36a0fa9e3d5f67c1c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="math_8hpp_1a07245a7b7cef276ff8ce545d92519604" kindref="member">mat4</ref></type>
        <definition>mat4 lava::perspective_matrix</definition>
        <argsstring>(uv2 size, r32 fov=90.f, r32 far_plane=5.f)</argsstring>
        <name>perspective_matrix</name>
        <qualifiedname>lava::perspective_matrix</qualifiedname>
        <param>
          <type><ref refid="math_8hpp_1ad63e913ea06491bbe4e45588b35587df" kindref="member">uv2</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a3a32680a459890aa9c80b4f5533b3b1f" kindref="member">r32</ref></type>
          <declname>fov</declname>
          <defval>90.f</defval>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a3a32680a459890aa9c80b4f5533b3b1f" kindref="member">r32</ref></type>
          <declname>far_plane</declname>
          <defval>5.f</defval>
        </param>
        <briefdescription>
<para>Calculate perspective matrix. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size for aspect ratio </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fov</parametername>
</parameternamelist>
<parameterdescription>
<para>Field of view </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>far_plane</parametername>
</parameternamelist>
<parameterdescription>
<para>Far plane </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>mat4 Calculated matrix </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/math.hpp" line="180" column="13" bodyfile="liblava/util/math.hpp" bodystart="180" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="math_8hpp_1ab4d9c1b9eb7d51228db5de1a164d07d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8hpp_1a56891e6c1c56efa24abd6b84f71d9145" kindref="member">string</ref></type>
        <definition>string lava::hash256</definition>
        <argsstring>(string_ref value)</argsstring>
        <name>hash256</name>
        <qualifiedname>lava::hash256</qualifiedname>
        <param>
          <type><ref refid="types_8hpp_1a01c2a7bfa24e7ea76ef5a79d8d4daaf6" kindref="member">string_ref</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Get SHA-256 hash of string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to hash </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>string Hash result </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/math.hpp" line="199" column="15" bodyfile="liblava/util/math.hpp" bodystart="199" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="random_8hpp_1a2b30833553c956eae25b0b04e5b1f04a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto lava::random</definition>
        <argsstring>(auto low, auto high)</argsstring>
        <name>random</name>
        <qualifiedname>lava::random</qualifiedname>
        <param>
          <type>auto</type>
          <declname>low</declname>
        </param>
        <param>
          <type>auto</type>
          <declname>high</declname>
        </param>
        <briefdescription>
<para>Get next random number. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>low</parametername>
</parameternamelist>
<parameterdescription>
<para>Lowest number </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>high</parametername>
</parameternamelist>
<parameterdescription>
<para>Highest number </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>auto Random number </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/random.hpp" line="62" column="13" bodyfile="liblava/util/random.hpp" bodystart="62" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="random_8hpp_1ab8d0f846d47c3f6b005c344dc3583411" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto lava::random</definition>
        <argsstring>(auto high)</argsstring>
        <name>random</name>
        <qualifiedname>lava::random</qualifiedname>
        <param>
          <type>auto</type>
          <declname>high</declname>
        </param>
        <briefdescription>
<para>Get next random number (lowest is 0) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>high</parametername>
</parameternamelist>
<parameterdescription>
<para>Highest number </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>auto Random number </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/random.hpp" line="71" column="13" bodyfile="liblava/util/random.hpp" bodystart="71" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="thread_8hpp_1acca408871390653d2607d22b40802b08" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::sleep</definition>
        <argsstring>(seconds time)</argsstring>
        <name>sleep</name>
        <qualifiedname>lava::sleep</qualifiedname>
        <param>
          <type><ref refid="time_8hpp_1a44912e21e239eb2372d12ebb2cb0ce24" kindref="member">seconds</ref></type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Sleep for seconds. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>Seconds to sleep </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/thread.hpp" line="23" column="13" bodyfile="liblava/util/thread.hpp" bodystart="23" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="thread_8hpp_1a33833d23b8725c12b221276c2fe797e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::sleep</definition>
        <argsstring>(ms time)</argsstring>
        <name>sleep</name>
        <qualifiedname>lava::sleep</qualifiedname>
        <param>
          <type><ref refid="time_8hpp_1a8cc2ca1333c2a464b07f9c54326a4569" kindref="member">ms</ref></type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Sleep for milliseconds. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>Milliseconds to sleep </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/thread.hpp" line="31" column="13" bodyfile="liblava/util/thread.hpp" bodystart="31" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="thread_8hpp_1af54d973a5ca94ac0f6f88c00d3e65075" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::sleep</definition>
        <argsstring>(us time)</argsstring>
        <name>sleep</name>
        <qualifiedname>lava::sleep</qualifiedname>
        <param>
          <type><ref refid="time_8hpp_1a8583565dc80df92137aee37ba544c024" kindref="member">us</ref></type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Sleep for microseconds. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>Microseconds to sleep </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/util/thread.hpp" line="39" column="13" bodyfile="liblava/util/thread.hpp" bodystart="39" bodyend="41"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="liblava/app/app.hpp" line="17" column="1"/>
  </compounddef>
</doxygen>
