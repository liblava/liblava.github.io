<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="structlava_1_1mouse__move__event" kind="struct" language="C++" prot="public">
    <compoundname>lava::mouse_move_event</compoundname>
    <includes refid="input_8hpp" local="no">input.hpp</includes>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structlava_1_1mouse__move__event_1a9e06319f6d27619aee579e68b19ba2af" prot="public" static="no">
        <type><ref refid="structlava_1_1mouse__move__event" kindref="compound">mouse_move_event</ref> const  &amp;</type>
        <definition>using lava::mouse_move_event::ref =  mouse_move_event const&amp;</definition>
        <argsstring></argsstring>
        <name>ref</name>
        <qualifiedname>lava::mouse_move_event::ref</qualifiedname>
        <briefdescription>
<para>Reference to mouse move event. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/input.hpp" line="364" column="5" bodyfile="liblava/frame/input.hpp" bodystart="364" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structlava_1_1mouse__move__event_1a988cc8b1a34fa1d81033db5b97f38188" prot="public" static="no">
        <type>std::function&lt; bool(<ref refid="structlava_1_1mouse__move__event_1a9e06319f6d27619aee579e68b19ba2af" kindref="member">ref</ref>)&gt;</type>
        <definition>using lava::mouse_move_event::func =  std::function&lt;bool(ref)&gt;</definition>
        <argsstring></argsstring>
        <name>func</name>
        <qualifiedname>lava::mouse_move_event::func</qualifiedname>
        <briefdescription>
<para>Mouse move event function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/input.hpp" line="367" column="5" bodyfile="liblava/frame/input.hpp" bodystart="367" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structlava_1_1mouse__move__event_1aeea165b2af733efa737ad686035e91aa" prot="public" static="no">
        <type>std::map&lt; <ref refid="structlava_1_1id" kindref="compound">id</ref>, <ref refid="structlava_1_1mouse__move__event_1a988cc8b1a34fa1d81033db5b97f38188" kindref="member">func</ref> &gt;</type>
        <definition>using lava::mouse_move_event::listeners =  std::map&lt;id, func&gt;</definition>
        <argsstring></argsstring>
        <name>listeners</name>
        <qualifiedname>lava::mouse_move_event::listeners</qualifiedname>
        <briefdescription>
<para>List of mouse move event listeners. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/input.hpp" line="370" column="5" bodyfile="liblava/frame/input.hpp" bodystart="370" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structlava_1_1mouse__move__event_1af31e6bd191db53bda388074bdccab6db" prot="public" static="no">
        <type>std::vector&lt; <ref refid="structlava_1_1mouse__move__event" kindref="compound">mouse_move_event</ref> &gt;</type>
        <definition>using lava::mouse_move_event::list =  std::vector&lt;mouse_move_event&gt;</definition>
        <argsstring></argsstring>
        <name>list</name>
        <qualifiedname>lava::mouse_move_event::list</qualifiedname>
        <briefdescription>
<para>List of mouse move events. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/input.hpp" line="373" column="5" bodyfile="liblava/frame/input.hpp" bodystart="373" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structlava_1_1mouse__move__event_1aa1477c4797a2983acfc72997c35faa97" prot="public" static="no" mutable="no">
        <type><ref refid="structlava_1_1id" kindref="compound">id</ref></type>
        <definition>id lava::mouse_move_event::sender</definition>
        <argsstring></argsstring>
        <name>sender</name>
        <qualifiedname>lava::mouse_move_event::sender</qualifiedname>
        <briefdescription>
<para>Sender id. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/input.hpp" line="376" column="8" bodyfile="liblava/frame/input.hpp" bodystart="376" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlava_1_1mouse__move__event_1a44af0c3b7f5ebf33d244a4878d1b0190" prot="public" static="no" mutable="no">
        <type><ref refid="structlava_1_1mouse__position" kindref="compound">mouse_position</ref></type>
        <definition>mouse_position lava::mouse_move_event::position</definition>
        <argsstring></argsstring>
        <name>position</name>
        <qualifiedname>lava::mouse_move_event::position</qualifiedname>
        <briefdescription>
<para>Input mouse position. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/input.hpp" line="379" column="20" bodyfile="liblava/frame/input.hpp" bodystart="379" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Mouse move event. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>lava::id</label>
        <link refid="structlava_1_1id"/>
      </node>
      <node id="1">
        <label>lava::mouse_move_event</label>
        <link refid="structlava_1_1mouse__move__event"/>
        <childnode refid="2" relation="usage">
          <edgelabel>sender</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>position</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>lava::mouse_position</label>
        <link refid="structlava_1_1mouse__position"/>
      </node>
    </collaborationgraph>
    <location file="liblava/frame/input.hpp" line="362" column="1" bodyfile="liblava/frame/input.hpp" bodystart="362" bodyend="380"/>
    <listofallmembers>
      <member refid="structlava_1_1mouse__move__event_1a988cc8b1a34fa1d81033db5b97f38188" prot="public" virt="non-virtual"><scope>lava::mouse_move_event</scope><name>func</name></member>
      <member refid="structlava_1_1mouse__move__event_1af31e6bd191db53bda388074bdccab6db" prot="public" virt="non-virtual"><scope>lava::mouse_move_event</scope><name>list</name></member>
      <member refid="structlava_1_1mouse__move__event_1aeea165b2af733efa737ad686035e91aa" prot="public" virt="non-virtual"><scope>lava::mouse_move_event</scope><name>listeners</name></member>
      <member refid="structlava_1_1mouse__move__event_1a44af0c3b7f5ebf33d244a4878d1b0190" prot="public" virt="non-virtual"><scope>lava::mouse_move_event</scope><name>position</name></member>
      <member refid="structlava_1_1mouse__move__event_1a9e06319f6d27619aee579e68b19ba2af" prot="public" virt="non-virtual"><scope>lava::mouse_move_event</scope><name>ref</name></member>
      <member refid="structlava_1_1mouse__move__event_1aa1477c4797a2983acfc72997c35faa97" prot="public" virt="non-virtual"><scope>lava::mouse_move_event</scope><name>sender</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
