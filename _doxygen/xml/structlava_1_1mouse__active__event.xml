<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="structlava_1_1mouse__active__event" kind="struct" language="C++" prot="public">
    <compoundname>lava::mouse_active_event</compoundname>
    <includes refid="input_8hpp" local="no">input.hpp</includes>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structlava_1_1mouse__active__event_1aca45278b110993a3277c5c659d5c1829" prot="public" static="no">
        <type><ref refid="structlava_1_1mouse__active__event" kindref="compound">mouse_active_event</ref> const  &amp;</type>
        <definition>using lava::mouse_active_event::ref =  mouse_active_event const&amp;</definition>
        <argsstring></argsstring>
        <name>ref</name>
        <qualifiedname>lava::mouse_active_event::ref</qualifiedname>
        <briefdescription>
<para>Reference to mouse active event. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/input.hpp" line="480" column="5" bodyfile="liblava/frame/input.hpp" bodystart="480" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structlava_1_1mouse__active__event_1ab1f097b85a595f3fa6dde0da5ced2d40" prot="public" static="no">
        <type>std::function&lt; bool(<ref refid="structlava_1_1mouse__active__event_1aca45278b110993a3277c5c659d5c1829" kindref="member">ref</ref>)&gt;</type>
        <definition>using lava::mouse_active_event::func =  std::function&lt;bool(ref)&gt;</definition>
        <argsstring></argsstring>
        <name>func</name>
        <qualifiedname>lava::mouse_active_event::func</qualifiedname>
        <briefdescription>
<para>Mouse active event function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/input.hpp" line="483" column="5" bodyfile="liblava/frame/input.hpp" bodystart="483" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structlava_1_1mouse__active__event_1a4194cf5dbd605d8f0ee4954d60aaffe5" prot="public" static="no">
        <type>std::map&lt; <ref refid="structlava_1_1id" kindref="compound">id</ref>, <ref refid="structlava_1_1mouse__active__event_1ab1f097b85a595f3fa6dde0da5ced2d40" kindref="member">func</ref> &gt;</type>
        <definition>using lava::mouse_active_event::listeners =  std::map&lt;id, func&gt;</definition>
        <argsstring></argsstring>
        <name>listeners</name>
        <qualifiedname>lava::mouse_active_event::listeners</qualifiedname>
        <briefdescription>
<para>List of mouse active event listeners. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/input.hpp" line="486" column="5" bodyfile="liblava/frame/input.hpp" bodystart="486" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structlava_1_1mouse__active__event_1a06b38a8d022542740acbd2dc579d6fe0" prot="public" static="no">
        <type>std::vector&lt; <ref refid="structlava_1_1mouse__active__event" kindref="compound">mouse_active_event</ref> &gt;</type>
        <definition>using lava::mouse_active_event::list =  std::vector&lt;mouse_active_event&gt;</definition>
        <argsstring></argsstring>
        <name>list</name>
        <qualifiedname>lava::mouse_active_event::list</qualifiedname>
        <briefdescription>
<para>List of mouse active events. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/input.hpp" line="489" column="5" bodyfile="liblava/frame/input.hpp" bodystart="489" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structlava_1_1mouse__active__event_1afb7ecec0df494161a2362e51611ec3cc" prot="public" static="no" mutable="no">
        <type><ref refid="structlava_1_1id" kindref="compound">id</ref></type>
        <definition>id lava::mouse_active_event::sender</definition>
        <argsstring></argsstring>
        <name>sender</name>
        <qualifiedname>lava::mouse_active_event::sender</qualifiedname>
        <briefdescription>
<para>Sender id. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/input.hpp" line="492" column="8" bodyfile="liblava/frame/input.hpp" bodystart="492" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlava_1_1mouse__active__event_1a14e206a06f9e3490c5cf073b0f83bc49" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool lava::mouse_active_event::active</definition>
        <argsstring></argsstring>
        <name>active</name>
        <qualifiedname>lava::mouse_active_event::active</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
<para>Active state. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/frame/input.hpp" line="495" column="10" bodyfile="liblava/frame/input.hpp" bodystart="495" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Mouse active event. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>lava::id</label>
        <link refid="structlava_1_1id"/>
      </node>
      <node id="1">
        <label>lava::mouse_active_event</label>
        <link refid="structlava_1_1mouse__active__event"/>
        <childnode refid="2" relation="usage">
          <edgelabel>sender</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="liblava/frame/input.hpp" line="478" column="1" bodyfile="liblava/frame/input.hpp" bodystart="478" bodyend="496"/>
    <listofallmembers>
      <member refid="structlava_1_1mouse__active__event_1a14e206a06f9e3490c5cf073b0f83bc49" prot="public" virt="non-virtual"><scope>lava::mouse_active_event</scope><name>active</name></member>
      <member refid="structlava_1_1mouse__active__event_1ab1f097b85a595f3fa6dde0da5ced2d40" prot="public" virt="non-virtual"><scope>lava::mouse_active_event</scope><name>func</name></member>
      <member refid="structlava_1_1mouse__active__event_1a06b38a8d022542740acbd2dc579d6fe0" prot="public" virt="non-virtual"><scope>lava::mouse_active_event</scope><name>list</name></member>
      <member refid="structlava_1_1mouse__active__event_1a4194cf5dbd605d8f0ee4954d60aaffe5" prot="public" virt="non-virtual"><scope>lava::mouse_active_event</scope><name>listeners</name></member>
      <member refid="structlava_1_1mouse__active__event_1aca45278b110993a3277c5c659d5c1829" prot="public" virt="non-virtual"><scope>lava::mouse_active_event</scope><name>ref</name></member>
      <member refid="structlava_1_1mouse__active__event_1afb7ecec0df494161a2362e51611ec3cc" prot="public" virt="non-virtual"><scope>lava::mouse_active_event</scope><name>sender</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
