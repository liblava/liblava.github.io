<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="structlava_1_1memory" kind="struct" language="C++" prot="public">
    <compoundname>lava::memory</compoundname>
    <basecompoundref refid="structlava_1_1no__copy__no__move" prot="public" virt="non-virtual">lava::no_copy_no_move</basecompoundref>
    <includes refid="memory_8hpp" local="no">memory.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structlava_1_1memory_1a48ecfaa432023873d42997a869bfefba" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool lava::memory::m_use_custom_cpu_callbacks</definition>
        <argsstring></argsstring>
        <name>m_use_custom_cpu_callbacks</name>
        <qualifiedname>lava::memory::m_use_custom_cpu_callbacks</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
<para>Use custom cpu callbacks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/memory.hpp" line="148" column="10" bodyfile="liblava/base/memory.hpp" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlava_1_1memory_1a98a4f3eadf3fea865aba5db2adc01006" prot="private" static="no" mutable="no">
        <type>VkAllocationCallbacks</type>
        <definition>VkAllocationCallbacks lava::memory::m_vk_callbacks</definition>
        <argsstring></argsstring>
        <name>m_vk_callbacks</name>
        <qualifiedname>lava::memory::m_vk_callbacks</qualifiedname>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkAllocationCallbacks.html">https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkAllocationCallbacks.html</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/memory.hpp" line="151" column="27" bodyfile="liblava/base/memory.hpp" bodystart="151" bodyend="151"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structlava_1_1memory_1a742915f645a3e53af3bb3099cb150d45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>lava::memory::memory</definition>
        <argsstring>()</argsstring>
        <name>memory</name>
        <qualifiedname>lava::memory::memory</qualifiedname>
        <briefdescription>
<para>Construct a new memory. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/memory.hpp" line="108" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1memory_1a2bff8517a31a95e3f74e981dce64ee64" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>VkAllocationCallbacks *</type>
        <definition>VkAllocationCallbacks * lava::memory::alloc</definition>
        <argsstring>()</argsstring>
        <name>alloc</name>
        <qualifiedname>lava::memory::alloc</qualifiedname>
        <briefdescription>
<para>Get allocation callback. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>VkAllocationCallbacks* Allocation callbacks </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/memory.hpp" line="123" column="27" bodyfile="liblava/base/memory.hpp" bodystart="123" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1memory_1aa6cf33bee632e9ca622bd398a2023860" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::memory::set_callbacks</definition>
        <argsstring>(VkAllocationCallbacks const &amp;callbacks)</argsstring>
        <name>set_callbacks</name>
        <qualifiedname>lava::memory::set_callbacks</qualifiedname>
        <param>
          <type>VkAllocationCallbacks const &amp;</type>
          <declname>callbacks</declname>
        </param>
        <briefdescription>
<para>Set the callbacks object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>callbacks</parametername>
</parameternamelist>
<parameterdescription>
<para>Allocation Callbacks </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/memory.hpp" line="134" column="10" bodyfile="liblava/base/memory.hpp" bodystart="134" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="structlava_1_1memory_1a304445836b73d2d86aa08c33b1df6ba6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lava::memory::set_use_custom_cpu_callbacks</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_use_custom_cpu_callbacks</name>
        <qualifiedname>lava::memory::set_use_custom_cpu_callbacks</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set use custom cpu callbacks. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Value state </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/memory.hpp" line="142" column="10" bodyfile="liblava/base/memory.hpp" bodystart="142" bodyend="144"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structlava_1_1memory_1afd4beb821e264e14ccb8ac4ce7385142" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlava_1_1memory" kindref="compound">memory</ref> &amp;</type>
        <definition>static memory &amp; lava::memory::instance</definition>
        <argsstring>()</argsstring>
        <name>instance</name>
        <qualifiedname>lava::memory::instance</qualifiedname>
        <briefdescription>
<para>Get memory instance. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>memory&amp; Memory </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="liblava/base/memory.hpp" line="114" column="19" bodyfile="liblava/base/memory.hpp" bodystart="114" bodyend="117"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Vulkan memory. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>lava::memory</label>
        <link refid="structlava_1_1memory"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>lava::no_copy_no_move</label>
        <link refid="structlava_1_1no__copy__no__move"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>lava::memory</label>
        <link refid="structlava_1_1memory"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>lava::no_copy_no_move</label>
        <link refid="structlava_1_1no__copy__no__move"/>
      </node>
    </collaborationgraph>
    <location file="liblava/base/memory.hpp" line="104" column="1" bodyfile="liblava/base/memory.hpp" bodystart="104" bodyend="152"/>
    <listofallmembers>
      <member refid="structlava_1_1memory_1a2bff8517a31a95e3f74e981dce64ee64" prot="public" virt="non-virtual"><scope>lava::memory</scope><name>alloc</name></member>
      <member refid="structlava_1_1memory_1afd4beb821e264e14ccb8ac4ce7385142" prot="public" virt="non-virtual"><scope>lava::memory</scope><name>instance</name></member>
      <member refid="structlava_1_1memory_1a48ecfaa432023873d42997a869bfefba" prot="private" virt="non-virtual"><scope>lava::memory</scope><name>m_use_custom_cpu_callbacks</name></member>
      <member refid="structlava_1_1memory_1a98a4f3eadf3fea865aba5db2adc01006" prot="private" virt="non-virtual"><scope>lava::memory</scope><name>m_vk_callbacks</name></member>
      <member refid="structlava_1_1memory_1a742915f645a3e53af3bb3099cb150d45" prot="public" virt="non-virtual"><scope>lava::memory</scope><name>memory</name></member>
      <member refid="structlava_1_1no__copy__no__move_1ac97369ee1b1a70996ab3b9b24bf26432" prot="public" virt="non-virtual"><scope>lava::memory</scope><name>no_copy_no_move</name></member>
      <member refid="structlava_1_1no__copy__no__move_1a7942908379614cbb8d6260192d76347c" prot="public" virt="non-virtual"><scope>lava::memory</scope><name>no_copy_no_move</name></member>
      <member refid="structlava_1_1no__copy__no__move_1aa3211995685035c9ca4d0a3a7e4b5ac8" prot="public" virt="non-virtual"><scope>lava::memory</scope><name>operator=</name></member>
      <member refid="structlava_1_1memory_1aa6cf33bee632e9ca622bd398a2023860" prot="public" virt="non-virtual"><scope>lava::memory</scope><name>set_callbacks</name></member>
      <member refid="structlava_1_1memory_1a304445836b73d2d86aa08c33b1df6ba6" prot="public" virt="non-virtual"><scope>lava::memory</scope><name>set_use_custom_cpu_callbacks</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
