<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="time_8hpp" kind="file" language="C++">
    <compoundname>time.hpp</compoundname>
    <includes refid="types_8hpp" local="yes">liblava/core/types.hpp</includes>
    <includes local="no">chrono</includes>
    <includes local="no">iomanip</includes>
    <includes local="no">sstream</includes>
    <includedby refid="core_8hpp" local="yes">liblava/core.hpp</includedby>
    <includedby refid="frame_2frame_8hpp" local="yes">liblava/frame/frame.hpp</includedby>
    <includedby refid="thread_8hpp" local="yes">liblava/util/thread.hpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>liblava/core/time.hpp</label>
        <link refid="time_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>liblava/core/types.hpp</label>
        <link refid="types_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>chrono</label>
      </node>
      <node id="4">
        <label>cstdint</label>
      </node>
      <node id="5">
        <label>functional</label>
      </node>
      <node id="11">
        <label>iomanip</label>
      </node>
      <node id="3">
        <label>liblava/core/def.hpp</label>
      </node>
      <node id="6">
        <label>map</label>
      </node>
      <node id="12">
        <label>sstream</label>
      </node>
      <node id="7">
        <label>string</label>
      </node>
      <node id="8">
        <label>string_view</label>
      </node>
      <node id="9">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="7">
        <label>liblava/app.hpp</label>
        <link refid="app_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>liblava/app/app.hpp</label>
        <link refid="app_2app_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>liblava/app/benchmark.hpp</label>
        <link refid="benchmark_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>liblava/core.hpp</label>
        <link refid="core_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>liblava/core/time.hpp</label>
        <link refid="time_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>liblava/engine.hpp</label>
        <link refid="engine_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>liblava/engine/engine.hpp</label>
        <link refid="engine_2engine_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>liblava/frame.hpp</label>
        <link refid="frame_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>liblava/frame/frame.hpp</label>
        <link refid="frame_2frame_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>liblava/lava.hpp</label>
        <link refid="lava_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>liblava/test.hpp</label>
        <link refid="test_8hpp"/>
      </node>
      <node id="13">
        <label>liblava/util.hpp</label>
        <link refid="util_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>liblava/util/telegram.hpp</label>
        <link refid="telegram_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>liblava/util/thread.hpp</label>
        <link refid="thread_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structlava_1_1timer" prot="public">lava::timer</innerclass>
    <innerclass refid="structlava_1_1run__time" prot="public">lava::run_time</innerclass>
    <innernamespace refid="namespacelava">lava</innernamespace>
    <innernamespace refid="namespacestd_1_1chrono__literals">std::chrono_literals</innernamespace>
    <briefdescription>
<para>Run time. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="authors"><para>Lava Block OÃœ and contributors </para>
</simplesect>
<simplesect kind="copyright"><para>Copyright (c) 2018-present, MIT License </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="types_8hpp" kindref="compound">liblava/core/types.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;chrono&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">lava<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std::chrono_literals;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="time_8hpp_1a44912e21e239eb2372d12ebb2cb0ce24" refkind="member"><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="time_8hpp_1a44912e21e239eb2372d12ebb2cb0ce24" kindref="member">seconds</ref><sp/>=<sp/>std::chrono::seconds;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="time_8hpp_1a2420fab3139b1aa75388807c29fabbfb" refkind="member"><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="time_8hpp_1a2420fab3139b1aa75388807c29fabbfb" kindref="member">milliseconds</ref><sp/>=<sp/>std::chrono::milliseconds;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="time_8hpp_1a8cc2ca1333c2a464b07f9c54326a4569" refkind="member"><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="time_8hpp_1a8cc2ca1333c2a464b07f9c54326a4569" kindref="member">ms</ref><sp/>=<sp/><ref refid="time_8hpp_1a2420fab3139b1aa75388807c29fabbfb" kindref="member">milliseconds</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="time_8hpp_1a19eb584453abf1fc7f751b248bf938e6" refkind="member"><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="time_8hpp_1a19eb584453abf1fc7f751b248bf938e6" kindref="member">microseconds</ref><sp/>=<sp/>std::chrono::microseconds;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="time_8hpp_1a8583565dc80df92137aee37ba544c024" refkind="member"><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="time_8hpp_1a8583565dc80df92137aee37ba544c024" kindref="member">us</ref><sp/>=<sp/><ref refid="time_8hpp_1a19eb584453abf1fc7f751b248bf938e6" kindref="member">microseconds</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="time_8hpp_1a39ed948807608027e5388132ca978739" refkind="member"><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="time_8hpp_1a44912e21e239eb2372d12ebb2cb0ce24" kindref="member">seconds</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="time_8hpp_1a39ed948807608027e5388132ca978739" kindref="member">one_second</ref><sp/>=<sp/><ref refid="time_8hpp_1a44912e21e239eb2372d12ebb2cb0ce24" kindref="member">seconds</ref>(1);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="time_8hpp_1a206f3112b3871d88333c93b934c9ddd8" refkind="member"><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="time_8hpp_1a8cc2ca1333c2a464b07f9c54326a4569" kindref="member">ms</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="time_8hpp_1a206f3112b3871d88333c93b934c9ddd8" kindref="member">one_ms</ref><sp/>=<sp/><ref refid="time_8hpp_1a8cc2ca1333c2a464b07f9c54326a4569" kindref="member">ms</ref>(1);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="time_8hpp_1ad18d86f53c5264d018a96d02444e7a89" refkind="member"><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="time_8hpp_1a8583565dc80df92137aee37ba544c024" kindref="member">us</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="time_8hpp_1ad18d86f53c5264d018a96d02444e7a89" kindref="member">one_us</ref><sp/>=<sp/><ref refid="time_8hpp_1a8583565dc80df92137aee37ba544c024" kindref="member">us</ref>(1);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="time_8hpp_1a1f53d10927ebf0e207581df6022c0989" refkind="member"><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="time_8hpp_1a1f53d10927ebf0e207581df6022c0989" kindref="member">clock</ref><sp/>=<sp/>std::chrono::high_resolution_clock;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="time_8hpp_1aa73b568ecb0def83e5d41f2731731a1c" refkind="member"><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="time_8hpp_1aa73b568ecb0def83e5d41f2731731a1c" kindref="member">time_point</ref><sp/>=<sp/>clock::time_point;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="time_8hpp_1ab0d0ccd686e34ffd37c486c278552f98" refkind="member"><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="time_8hpp_1ab0d0ccd686e34ffd37c486c278552f98" kindref="member">duration</ref><sp/>=<sp/>clock::duration;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="time_8hpp_1a56103af37e9e492515a76dc05975b379" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="types_8hpp_1a5b5c372cf05c5834c538aad2b937aa9b" kindref="member">delta</ref><sp/><ref refid="time_8hpp_1a56103af37e9e492515a76dc05975b379" kindref="member">to_delta</ref>(<ref refid="time_8hpp_1a2420fab3139b1aa75388807c29fabbfb" kindref="member">milliseconds</ref><sp/><ref refid="time_8hpp_1a8cc2ca1333c2a464b07f9c54326a4569" kindref="member">ms</ref>)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="time_8hpp_1a8cc2ca1333c2a464b07f9c54326a4569" kindref="member">ms</ref>.count()<sp/>/<sp/>1000.f;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="time_8hpp_1a5a9ff164b025aac83c0ae087b5c31e3d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="types_8hpp_1a5b5c372cf05c5834c538aad2b937aa9b" kindref="member">delta</ref><sp/><ref refid="time_8hpp_1a5a9ff164b025aac83c0ae087b5c31e3d" kindref="member">to_dt</ref>(<ref refid="time_8hpp_1a2420fab3139b1aa75388807c29fabbfb" kindref="member">milliseconds</ref><sp/><ref refid="time_8hpp_1a8cc2ca1333c2a464b07f9c54326a4569" kindref="member">ms</ref>)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="time_8hpp_1a56103af37e9e492515a76dc05975b379" kindref="member">to_delta</ref>(<ref refid="time_8hpp_1a8cc2ca1333c2a464b07f9c54326a4569" kindref="member">ms</ref>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="time_8hpp_1a9d5bf259deae56c66dd9eeaf562c5c42" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="types_8hpp_1ac5a07aee91729f6ed77bd47fd1095218" kindref="member">real</ref><sp/><ref refid="time_8hpp_1a9d5bf259deae56c66dd9eeaf562c5c42" kindref="member">to_sec</ref>(<ref refid="time_8hpp_1a2420fab3139b1aa75388807c29fabbfb" kindref="member">milliseconds</ref><sp/><ref refid="time_8hpp_1a8cc2ca1333c2a464b07f9c54326a4569" kindref="member">ms</ref>)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="time_8hpp_1a8cc2ca1333c2a464b07f9c54326a4569" kindref="member">ms</ref>.count()<sp/>/<sp/>1000.;</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="time_8hpp_1a8626d59679b46f72c1d605edc6a66235" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="types_8hpp_1a7e5d7f16aff5126a54243302372b43b1" kindref="member">i32</ref><sp/><ref refid="time_8hpp_1a8626d59679b46f72c1d605edc6a66235" kindref="member">to_sec_fix</ref>(<ref refid="time_8hpp_1a2420fab3139b1aa75388807c29fabbfb" kindref="member">milliseconds</ref><sp/><ref refid="time_8hpp_1a8cc2ca1333c2a464b07f9c54326a4569" kindref="member">ms</ref>)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="types_8hpp_1a39cae746a7d2b802c1bd35d63b899532" kindref="member">to_i32</ref>(<ref refid="time_8hpp_1a9d5bf259deae56c66dd9eeaf562c5c42" kindref="member">to_sec</ref>(<ref refid="time_8hpp_1a8cc2ca1333c2a464b07f9c54326a4569" kindref="member">ms</ref>));</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="time_8hpp_1ac2432e735e962579aa315c70a152ea90" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="time_8hpp_1a8cc2ca1333c2a464b07f9c54326a4569" kindref="member">ms</ref><sp/><ref refid="time_8hpp_1ac2432e735e962579aa315c70a152ea90" kindref="member">to_ms</ref>(<ref refid="types_8hpp_1a5b5c372cf05c5834c538aad2b937aa9b" kindref="member">delta</ref><sp/>dt)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="time_8hpp_1a8cc2ca1333c2a464b07f9c54326a4569" kindref="member">ms</ref>(<ref refid="types_8hpp_1a39cae746a7d2b802c1bd35d63b899532" kindref="member">to_i32</ref>(dt<sp/>*<sp/>1000.f));</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="time_8hpp_1a4f8df81b62fc4f7fd4a1fd213268c6c9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="time_8hpp_1a8cc2ca1333c2a464b07f9c54326a4569" kindref="member">ms</ref><sp/><ref refid="time_8hpp_1ac2432e735e962579aa315c70a152ea90" kindref="member">to_ms</ref>(<ref refid="types_8hpp_1ac5a07aee91729f6ed77bd47fd1095218" kindref="member">real</ref><sp/>sec)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="time_8hpp_1a8cc2ca1333c2a464b07f9c54326a4569" kindref="member">ms</ref>(<ref refid="types_8hpp_1a39cae746a7d2b802c1bd35d63b899532" kindref="member">to_i32</ref>(sec<sp/>*<sp/>1000.));</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="structlava_1_1timer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlava_1_1timer" kindref="compound">timer</ref><sp/>{</highlight></codeline>
<codeline lineno="112" refid="structlava_1_1timer_1a5786fcc8734370e5e02f5a2fda5b1553" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlava_1_1timer_1a5786fcc8734370e5e02f5a2fda5b1553" kindref="member">timer</ref>()</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_start_time(<ref refid="time_8hpp_1a1f53d10927ebf0e207581df6022c0989" kindref="member">clock</ref>::<ref refid="frame_2frame_8hpp_1a0c842d5a8e181f26ac56e0cb9890f4fe" kindref="member">now</ref>())<sp/>{}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="structlava_1_1timer_1a46007b2925753b7d42d6363d50b81b52" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structlava_1_1timer_1a46007b2925753b7d42d6363d50b81b52" kindref="member">reset</ref>()<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_start_time<sp/>=<sp/>clock::now();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="structlava_1_1timer_1a59cf056a575c94dead8e14d1fb7a0844" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="time_8hpp_1a8cc2ca1333c2a464b07f9c54326a4569" kindref="member">ms</ref><sp/><ref refid="structlava_1_1timer_1a59cf056a575c94dead8e14d1fb7a0844" kindref="member">elapsed</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::chrono::duration_cast&lt;ms&gt;(clock::now()</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>m_start_time);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="time_8hpp_1aa73b568ecb0def83e5d41f2731731a1c" kindref="member">time_point</ref><sp/>m_start_time;</highlight></codeline>
<codeline lineno="134"><highlight class="normal">};</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="structlava_1_1run__time" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlava_1_1run__time" kindref="compound">run_time</ref><sp/>{</highlight></codeline>
<codeline lineno="141" refid="structlava_1_1run__time_1a837306909e9b4e666d5d5b41031f3524" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="time_8hpp_1a8cc2ca1333c2a464b07f9c54326a4569" kindref="member">ms</ref><sp/><ref refid="structlava_1_1run__time_1a837306909e9b4e666d5d5b41031f3524" kindref="member">current</ref>{0};</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="structlava_1_1run__time_1a974851dacedc756e402eff89ae042e5c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="time_8hpp_1a8cc2ca1333c2a464b07f9c54326a4569" kindref="member">ms</ref><sp/><ref refid="time_8hpp_1a1f53d10927ebf0e207581df6022c0989" kindref="member">clock</ref>{16};</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="structlava_1_1run__time_1a563cec832cb3945c0c4ec3ea16f32de7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="time_8hpp_1a8cc2ca1333c2a464b07f9c54326a4569" kindref="member">ms</ref><sp/><ref refid="structlava_1_1run__time_1a563cec832cb3945c0c4ec3ea16f32de7" kindref="member">system</ref>{0};</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="structlava_1_1run__time_1ab5b11ae9abf6d099f2cc73678012eaed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="time_8hpp_1a8cc2ca1333c2a464b07f9c54326a4569" kindref="member">ms</ref><sp/><ref refid="types_8hpp_1a5b5c372cf05c5834c538aad2b937aa9b" kindref="member">delta</ref>{0};</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="structlava_1_1run__time_1a18d25c6027dd85423f1a9bf5f3f529d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="time_8hpp_1a8cc2ca1333c2a464b07f9c54326a4569" kindref="member">ms</ref><sp/><ref refid="structlava_1_1run__time_1a18d25c6027dd85423f1a9bf5f3f529d1" kindref="member">fix_delta</ref>{0};</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="structlava_1_1run__time_1af05cf1cf47fa0397838e449618ece2bc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="types_8hpp_1a3a32680a459890aa9c80b4f5533b3b1f" kindref="member">r32</ref><sp/><ref refid="structlava_1_1run__time_1af05cf1cf47fa0397838e449618ece2bc" kindref="member">speed</ref><sp/>=<sp/>1.f;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="structlava_1_1run__time_1a9fa360a31be0127611854b83a886bfd3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structlava_1_1run__time_1a9fa360a31be0127611854b83a886bfd3" kindref="member">paused</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal">};</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>warning(push)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>warning(disable<sp/>:<sp/>4996)<sp/></highlight><highlight class="comment">//_CRT_SECURE_NO_WARNINGS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CLOCK_TYPE<sp/>=<sp/>std::chrono::system_clock&gt;</highlight></codeline>
<codeline lineno="175" refid="time_8hpp_1a5234ff682ffd6e6cebd07408286a1c12" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="time_8hpp_1a5234ff682ffd6e6cebd07408286a1c12" kindref="member">timestamp</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CLOCK_TYPE::time_point&amp;<sp/><ref refid="time_8hpp_1aa73b568ecb0def83e5d41f2731731a1c" kindref="member">time_point</ref>,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8hpp_1a01c2a7bfa24e7ea76ef5a79d8d4daaf6" kindref="member">string_ref</ref><sp/>format<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;%Y-%m-%d<sp/>%H-%M-%S&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="time_8hpp_1a8cc2ca1333c2a464b07f9c54326a4569" kindref="member">ms</ref><sp/>=<sp/>std::chrono::duration_cast&lt;milliseconds&gt;(</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="time_8hpp_1aa73b568ecb0def83e5d41f2731731a1c" kindref="member">time_point</ref>.time_since_epoch())</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%<sp/>1000;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>CLOCK_TYPE::to_time_t(<ref refid="time_8hpp_1aa73b568ecb0def83e5d41f2731731a1c" kindref="member">time_point</ref>);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tm<sp/>=<sp/>*std::localtime(std::addressof(t));</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostringstream<sp/>stm;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>stm<sp/>&lt;&lt;<sp/>std::put_time(std::addressof(tm),<sp/><ref refid="types_8hpp_1ad11094258ce2dac54b79917ae31198b6" kindref="member">str</ref>(format))</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::setfill(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>std::setw(3)<sp/>&lt;&lt;<sp/><ref refid="time_8hpp_1a8cc2ca1333c2a464b07f9c54326a4569" kindref="member">ms</ref>.count();</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stm.str();</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="194" refid="time_8hpp_1a386bd7c3577aefd1a30788b1aa88d95a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="time_8hpp_1a386bd7c3577aefd1a30788b1aa88d95a" kindref="member">get_current_time</ref>()<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="frame_2frame_8hpp_1a0c842d5a8e181f26ac56e0cb9890f4fe" kindref="member">now</ref><sp/>=<sp/>std::chrono::system_clock::now();</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="time_8hpp_1a5234ff682ffd6e6cebd07408286a1c12" kindref="member">timestamp</ref>(<ref refid="frame_2frame_8hpp_1a0c842d5a8e181f26ac56e0cb9890f4fe" kindref="member">now</ref>);</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>warning(pop)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="time_8hpp_1ab3c0e85a397c761e92162b76a4ee369e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="time_8hpp_1a8cc2ca1333c2a464b07f9c54326a4569" kindref="member">ms</ref><sp/><ref refid="time_8hpp_1ab3c0e85a397c761e92162b76a4ee369e" kindref="member">get_current_timestamp_ms</ref>()<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::chrono::duration_cast&lt;ms&gt;(</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clock::now().time_since_epoch());</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="216" refid="time_8hpp_1a426ec2454365e2707061effc9e72d623" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="time_8hpp_1a8583565dc80df92137aee37ba544c024" kindref="member">us</ref><sp/><ref refid="time_8hpp_1a426ec2454365e2707061effc9e72d623" kindref="member">get_current_timestamp_us</ref>()<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::chrono::duration_cast&lt;us&gt;(</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clock::now().time_since_epoch());</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="time_8hpp_1a7a41bf2f96da788189a29b8e9363cfa2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="types_8hpp_1abd93cf188810a5c57f1e971c1ba12db6" kindref="member">ui64</ref><sp/><ref refid="time_8hpp_1a7a41bf2f96da788189a29b8e9363cfa2" kindref="member">get_current_timestamp</ref>()<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="time_8hpp_1ab3c0e85a397c761e92162b76a4ee369e" kindref="member">get_current_timestamp_ms</ref>().count();</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>lava</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="liblava/core/time.hpp"/>
  </compounddef>
</doxygen>
